<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.globalization.supportClasses"><apiName>spark.globalization.supportClasses</apiName><apiDetail/><apiClassifier id="spark.globalization.supportClasses:CollatorBase"><apiName>CollatorBase</apiName><shortdesc>
     CollatorBase является базовым классом для классов SortingCollator и MatchingCollator.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.globalization.supportClasses:GlobalizationBase</apiBaseClassifier></apiClassifierDef><apiDesc>
     <codeph>CollatorBase</codeph> является базовым классом для классов SortingCollator и MatchingCollator.
          <p>Это класс-оболочка, включающий класс <codeph>flash.globalization.Collator</codeph>. Поэтому сравнение строк на основе локали обеспечивает класс <codeph>flash.globalization.Collator</codeph>. При использовании этого класса как базового классы <codeph>SortingCollator</codeph> и <codeph>MatchingCollator</codeph> войдут в объявления MXML. В этих классах стиль <codeph>locale</codeph> используется для запрашиваемого имени идентификатора локали и содержит привязываемые методы и свойства.
     </p>
          <p>Класс flash.globalization.Collator использует базовую операционную систему для форматирования функциональности и предоставления данных, относящихся к конкретной локали. Некоторые операционные системы не поддерживают классы flash.globalization. В этих системах класс оболочки обеспечивает резервные функциональные возможности для сравнения строк.</p>
          </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.globalization.Collator.xml"><linktext>flash.globalization.Collator</linktext></link></related-links><apiConstructor id="spark.globalization.supportClasses:CollatorBase:CollatorBase"><apiName>CollatorBase</apiName><shortdesc>
          Создает новый объект CollatorBase для сравнения строк в соответствии с правилами заданной локали.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initialMode</apiItemName><apiType value="String"/><apiDesc>Устанавливает исходные параметры сравнения для двух случаев использования: сортировки и поиска совпадений.
                   </apiDesc></apiParam></apiConstructorDef><apiDesc>
          Создает новый объект CollatorBase для сравнения строк в соответствии с правилами заданной локали.
                   <p>Параметр <codeph>initialMode</codeph> устанавливает исходные параметры сравнения для двух случаев использования: сортировки и поиска совпадений. Он может иметь одно из следующих двух значений:</p>
                   <ul>
           <li><codeph>CollatorMode.SORTING</codeph> задает параметры сравнения для обычной лингвистической сортировки, такой как сортировка списка текстовых строк, которые отображаются для конечного пользователя. В этом режиме при сравнении строк проводится различие между строчными и прописными буквами, символами с акцентом и без, а также учитываются другие отличия.</li>
           <li><codeph>CollatorMode.MATCHING</codeph> задает параметры сравнения для общего применения, такого как определение эквивалентности двух строк. В этом режиме сравнение выполняется без учета строчных и прописных букв, символов с акцентами и других отличий.</li>
          </ul>
                   <p>Более подробные сведения и примеры использования этих двух режимов см. в документации для класса <codeph>flash.globalization.Collator</codeph>.</p>
                   <p>Стиль <codeph>locale</codeph> определяет локаль для этого класса. Стиль <codeph>locale</codeph> можно установить следующими способами.</p>
                   <ul>
              <li>Наследование стиля из <codeph>UIComponent</codeph> с помощью вызова метода <codeph>addStyleClient</codeph> UIComponent с экземпляром этого объекта в качестве параметра.</li>
              <li>Использование класса в объявлении MXML и наследование стиля <codeph>locale</codeph> из документа, содержащего объявление.
          <pre>
          &lt;fx:Declarations>
                 &lt;s:SortingCollator id="collator" />
          &lt;/fx:Declarations>
          </pre>
          </li>
              <li>Использование объявления MXML и указание значения <codeph>locale</codeph> в списке назначений.
          <pre>
          &lt;fx:Declarations>
              &lt;s:SortingCollator id="collator_german" locale="de-DE" />
          &lt;/fx:Declarations>
          </pre>
          </li>
              <li>Вызов метода setStyle, например <codeph>collator.setStyle("locale", "de-DE")</codeph></li>
          </ul>
                   <p>Если стиль <codeph>locale</codeph> не установлен одним из вышеперечисленных способов, методы этого класса, которые зависят от <codeph>locale</codeph>, установят для свойства lastOperationStatus значение <codeph>spark.globalization.LastOperationStatus.LOCALE_UNDEFINED_ERROR</codeph>.</p>
                   </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.globalization.Collator.xml"><linktext>flash.globalization.Collator</linktext></link><link href="spark.globalization.xml#LastOperationStatus"><linktext>spark.globalization.LastOperationStatus</linktext></link></related-links></apiConstructor><apiOperation id="spark.globalization.supportClasses:CollatorBase:compare"><apiName>compare</apiName><shortdesc>
          Сравнивает две строки и возвращает целое число, указывающее на то, меньше, равна или больше первая строка второй.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Целое число, указывающее на то, меньше, равна или больше первая строка по сравнению со второй.
                 <ul>
                     <li>Если возвращается отрицательное значение, <codeph>string1</codeph> меньше чем <codeph>string2</codeph> или <codeph>string2</codeph> равна <codeph>null</codeph>.</li>
                     <li>Если возвращается нуль, значение <codeph>string1</codeph> равно <codeph>string2</codeph>.</li>
                     <li>Если возвращается положительное значение, <codeph>string1</codeph> больше чем <codeph>string2</codeph> или <codeph>string1</codeph> равна <codeph>null</codeph>.</li>
                 </ul>
                   </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>string1</apiItemName><apiType value="String"/><apiDesc>Первая строка сравнения.
          </apiDesc></apiParam><apiParam><apiItemName>string2</apiItemName><apiType value="String"/><apiDesc>Вторая строка сравнения.
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Сравнивает две строки и возвращает целое число, указывающее на то, меньше, равна или больше первая строка второй. При сравнении используются правила сортировки для стиля <codeph>locale</codeph>, который действует на момент вызова метода сравнения.
                   </apiDesc></apiOperationDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/CollatorBase()"><linktext>CollatorBase()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiOperation><apiOperation id="spark.globalization.supportClasses:CollatorBase:equals"><apiName>equals</apiName><shortdesc>
          Сравнивает две строки и возвращает логическое значение, указывающее на то, равны ли эти строки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Логическое значение, указывающее на то равны строки (<codeph>true</codeph>) или нет (<codeph>false</codeph>).
                   </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>string1</apiItemName><apiType value="String"/><apiDesc>Первая строка сравнения.
          </apiDesc></apiParam><apiParam><apiItemName>string2</apiItemName><apiType value="String"/><apiDesc>Вторая строка сравнения.
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Сравнивает две строки и возвращает логическое значение, указывающее на то, равны ли эти строки. При сравнении используются правила сортировки для идентификатора локали, указанного в конструкторе <codeph>CollatorBase()</codeph>.
                   </apiDesc></apiOperationDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/CollatorBase()"><linktext>CollatorBase()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/compare"><linktext>compare</linktext></link></related-links></apiOperation><apiOperation id="spark.globalization.supportClasses:CollatorBase:getAvailableLocaleIDNames"><apiName>getAvailableLocaleIDNames</apiName><shortdesc>
          Перечисляет все имена идентификаторов локалей, поддерживаемые этим классом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Вектор строк, содержащий все имена идентификаторов локалей, поддерживаемые этим классом и операционной системой.
                   </apiDesc><apiType value="Vector$String"/></apiReturn></apiOperationDef><apiDesc>
          Перечисляет все имена идентификаторов локалей, поддерживаемые этим классом.
                   </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.globalization.supportClasses:CollatorBase:actualLocaleIDName:get"><apiName>actualLocaleIDName</apiName><shortdesc>
          
      Имя фактического идентификатора локали, используемое этим объектом класса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          
      Имя фактического идентификатора локали, используемое этим объектом класса. Эта локаль используется для доступа к форматированию данных и функциональным возможностям операционной системы.
     
      <p>Если локаль, установленная стилем <codeph>locale</codeph>, недоступна, то значение <codeph>actualLocaleIDName</codeph> будет отличаться от значения стиля <codeph>locale</codeph>. Значение будет указывать резервную используемую локаль. Если стиль локали установлен как <codeph>LocaleID.DEFAULT</codeph>, будет использоваться имя локали, определенное операционной системой пользователя.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.globalization.Collator.actualLocaleIDName.xml"><linktext>flash.globalization.Collator.actualLocaleIDName</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/CollatorBase()"><linktext>CollatorBase()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreCase:get"><apiName>ignoreCase</apiName><shortdesc>
          Когда это свойство имеет значение true, идентичные строки и строки, отличающиеся только регистром букв, рассматриваются как равные.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Когда это свойство имеет значение true, идентичные строки и строки, отличающиеся только регистром букв, рассматриваются как равные.
                   <p>Значение по умолчанию - <codeph>true</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.MATCHING</codeph>. <codeph>false</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreCharacterWidth:get"><apiName>ignoreCharacterWidth</apiName><shortdesc>
          Когда это свойство имеет значение true, полноширинные и полуширинные формы некоторых китайских и японских символов рассматриваются как одинаковые.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Когда это свойство имеет значение true, полноширинные и полуширинные формы некоторых китайских и японских символов рассматриваются как одинаковые.
                   <p>Для обеспечения совместимости с существующими стандартами для китайских и японских наборов символов Юникод обеспечивает коды символов для полноширинных и полуширинных форм некоторых символов. Например, когда свойство <codeph>ignoreCharacterWidth</codeph> имеет значение <codeph>true</codeph>, метод <codeph>compare("Ａｱ", "Aア")</codeph> возвращает значение <codeph>true</codeph>.</p>
                   <p>Если свойство <codeph>ignoreCharacterWidth</codeph> имеет значение <codeph>false</codeph>, то полноширинные и полуширинные формы рассматриваются как разные.</p>
                   <p>Значение по умолчанию - <codeph>true</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.MATCHING</codeph>. <codeph>false</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreDiacritics:get"><apiName>ignoreDiacritics</apiName><shortdesc>
          Когда это свойство имеет значение true, строки, в которых используются одинаковые базовые символы, но разные акценты или диакритические знаки, рассматриваются как одинаковые.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Когда это свойство имеет значение true, строки, в которых используются одинаковые базовые символы, но разные акценты или диакритические знаки, рассматриваются как одинаковые. Например, метод <codeph>compare("coté", "côte")</codeph> возвращает значение <codeph>true</codeph>, когда свойство <codeph>ignoreDiacritics</codeph> имеет значение <codeph>true</codeph>.
                   <p>Когда свойство <codeph>ignoreDiacritics</codeph> имеет значение <codeph>false</codeph>, базовые символы с диакритическими знаками или акцентами будут рассматриваться как разные.</p>
                            <p>Значение по умолчанию - <codeph>true</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.MATCHING</codeph>. <codeph>false</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreKanaType:get"><apiName>ignoreKanaType</apiName><shortdesc>
          Когда это свойство имеет значение true, строки, которые отличаются только типом используемого символа кана, рассматриваются как одинаковые.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Когда это свойство имеет значение true, строки, которые отличаются только типом используемого символа кана, рассматриваются как одинаковые. Например, <codeph>compare("カナ", "かな")</codeph> возвращает значение <codeph>true</codeph>, когда свойство <codeph>ignoreKanaType</codeph> имеет значение <codeph>true</codeph>.
                   <p>Если <codeph>ignoreKanaType</codeph> имеет значение <codeph>false</codeph>, символы хираганы и катаканы, обозначающие одинаковый слог, рассматриваются как разные.</p>
                   <p>Значение по умолчанию - <codeph>true</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.MATCHING</codeph>. <codeph>false</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreSymbols:get"><apiName>ignoreSymbols</apiName><shortdesc>
          Когда это свойство имеет значение true, при сортировке или сравнении игнорируются символьные знаки, включая пробелы, символы валют, математическим символы и др.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Когда это свойство имеет значение true, при сортировке или сравнении игнорируются символьные знаки, включая пробелы, символы валют, математическим символы и др. Например, строки «OBrian», «O'Brian» и «O Brian» рассматриваются как одинаковые, когда свойство <codeph>ignoreSymbols</codeph> имеет значение <codeph>true</codeph>.
                   <p>Значение по умолчанию - <codeph>true</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.MATCHING</codeph>. <codeph>false</codeph>, если для <codeph>CollatorBase()</codeph> параметра <codeph>initialMode</codeph> конструктора установлено значение <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:lastOperationStatus:get"><apiName>lastOperationStatus</apiName><shortdesc>
          
      Состояние самой последней операции, выполненной этим объектом класса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          
      Состояние самой последней операции, выполненной этим объектом класса. Свойство <codeph>lastOperationStatus</codeph> задается каждый раз при вызове конструктора или метода этого класса или при задании значения для другого свойства. Другие возможные значения см. в описании соответствующего метода.
     
     </apiDesc></apiValueDetail><related-links><link href="spark.globalization.xml#LastOperationStatus"><linktext>spark.globalization.LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:numericComparison:get"><apiName>numericComparison</apiName><shortdesc>
          Управляет обработкой числовых значений, включенных в строки, в ходе сравнения строк.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>&lt;code>false&lt;/code>
                   </apiDefaultValue></apiValueDef><apiDesc>
          Управляет обработкой числовых значений, включенных в строки, в ходе сравнения строк.
                   <p>Когда свойство <codeph>numericComparison</codeph> имеет значение <codeph>true</codeph>, метод compare преобразует числа, включенные в строки, в числовые значения для сравнения.</p>
                   <p>Когда это свойство имеет значение <codeph>false</codeph><codeph>, в ходе сравнения эти числа рассматриваются как коды символов и сортируются в соответствии с правилами сортировки символов для указанной локали</codeph>.</p>
                   <p>Например, когда это свойство имеет значение true для идентификатора локали en-US, строки «version1», «version10» и «version2» сортируются в следующем порядке: version1 &lt; version2 &lt; version10.</p>
                   <p>Когда это свойство имеет значение false для локали en-US, эти же строки сортируются по-другому: version1 &lt; version10 &lt; version2.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.globalization.supportClasses:GlobalizationBase"><apiName>GlobalizationBase</apiName><shortdesc>
  Это базовый класс для классов оболочки, которые используют классы flash.globalization для форматирования зависящих от языка дат, времени, чисел, денежных сумм, сравнения строк и преобразований.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><styles><style inherit="yes" name="locale" owner="spark.globalization.supportClasses:GlobalizationBase" playerVersion="Flash10.1" type="String">
<description>
  Идентификатор локали, который определяет язык, область, сценарий и, дополнительно, другие связанные теги и ключи. Синтаксис этого идентификатора должен соответствовать синтаксису, определенному техническим стандартом Юникод №35 (например, en-US, de-DE, zh-Hans-CN)
 
  </description>

<playerversion>AIR 2.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="http://www.unicode.org/reports/tr35/"><linktext>http://www.unicode.org/reports/tr35/</linktext></link></related-links></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.styles:AdvancedStyleClient</apiBaseClassifier></apiClassifierDef><apiDesc>
  Это базовый класс для классов оболочки, которые используют классы flash.globalization для форматирования зависящих от языка дат, времени, чисел, денежных сумм, сравнения строк и преобразований.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.formatters.xml#CurrencyFormatter"><linktext>spark.formatters.CurrencyFormatter</linktext></link><link href="spark.formatters.xml#DateTimeFormatter"><linktext>spark.formatters.DateTimeFormatter</linktext></link><link href="spark.formatters.xml#NumberFormatter"><linktext>spark.formatters.NumberFormatter</linktext></link><link href="spark.globalization.xml#MatchingCollator"><linktext>spark.globalization.MatchingCollator</linktext></link><link href="spark.globalization.xml#SortingCollator"><linktext>spark.globalization.SortingCollator</linktext></link><link href="spark.globalization.xml#StringTools"><linktext>spark.globalization.StringTools</linktext></link></related-links><adobeApiEvent id="spark.globalization.supportClasses:GlobalizationBase_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Событие изменения создается при изменении стиля локали или установке другого свойства, которое изменит формат числа или обновит другие значения, доступные с помощью этого класса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Событие изменения создается при изменении стиля <codeph>locale</codeph> или установке другого свойства, которое изменит формат числа или обновит другие значения, доступные с помощью этого класса.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.globalization.supportClasses:GlobalizationBase:GlobalizationBase"><apiName>GlobalizationBase</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.globalization.supportClasses:GlobalizationBase:getStyle"><apiName>getStyle</apiName><shortdesc conref="mx.core.UIComponent#getStyle()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="mx.core.UIComponent#getStyle()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.globalization.supportClasses:GlobalizationBase:actualLocaleIDName:get"><apiName>actualLocaleIDName</apiName><shortdesc>
      Имя фактического идентификатора локали, используемое этим объектом класса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Имя фактического идентификатора локали, используемое этим объектом класса. Эта локаль используется для доступа к форматированию данных и функциональным возможностям операционной системы.
     
      <p>Если локаль, установленная стилем <codeph>locale</codeph>, недоступна, то значение <codeph>actualLocaleIDName</codeph> будет отличаться от значения стиля <codeph>locale</codeph>. Значение будет указывать резервную используемую локаль. Если стиль локали установлен как <codeph>LocaleID.DEFAULT</codeph>, будет использоваться имя локали, определенное операционной системой пользователя.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.globalization.supportClasses:GlobalizationBase:lastOperationStatus:get"><apiName>lastOperationStatus</apiName><shortdesc>
      Состояние самой последней операции, выполненной этим объектом класса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Состояние самой последней операции, выполненной этим объектом класса. Свойство <codeph>lastOperationStatus</codeph> задается каждый раз при вызове конструктора или метода этого класса или при задании значения для другого свойства. Другие возможные значения см. в описании соответствующего метода.
     
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.globalization.LastOperationStatus.xml"><linktext>flash.globalization.LastOperationStatus</linktext></link></related-links></apiValue></apiClassifier></apiPackage>