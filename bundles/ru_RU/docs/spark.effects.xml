<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.effects"><apiName>spark.effects</apiName><apiDetail/><apiClassifier id="spark.effects:AnimateTransform3D"><apiName>AnimateTransform3D</apiName><shortdesc>
  Эффект AnimateTransform3D распространяет способности эффекта AnimateTransform на свойства трехмерного преобразования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateTransform&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateTransform
    <b>Properties</b>
    id="ID"
    applyChangesPostLayout="true"
    applyLocalProjection="false"
    autoCenterProjection="true"
    fieldOfView="no default"
    focalLength="no default"
    projectionX="0"
    projectionY="0"
    removeLocalProjectionWhenComplete="false"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект AnimateTransform3D распространяет способности эффекта AnimateTransform на свойства трехмерного преобразования. Как и AnimateTransform, этот эффект не предназначен для непосредственного использования, но вместо этого он обеспечивает общие функциональные возможности, используемые его подклассами. Для получения трехмерных эффектов следует использовать подклассы Move3D, Rotate3D и Scale3D.
 
  <p>Как и с AnimateTransform, существуют некоторые свойства этого воздействия, которые распределены между всеми остальными эффектами преобразования, объединяемыми во время выполнения. В частности, связанные с проекцией свойства <codeph>applyLocalProjection</codeph>, <codeph>removeProjectionWhenComplete</codeph>, <codeph>autoCenterProjection</codeph>, <codeph>fieldOfView</codeph>, <codeph>focalLength</codeph>, <codeph>projectionX</codeph> и <codeph>projectionY</codeph> являются общедоступными свойствами. Установите эти свойства аналогичным образом для всех трехмерных эффектов, объединенных в составном эффекте, для получения предсказуемых результатов.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateTransformInstance"><linktext>spark.effects.supportClasses.AnimateTransformInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateTransform3D:AnimateTransform3D"><apiName>AnimateTransform3D</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateTransform3D:autoCenterProjection"><apiName>autoCenterProjection</apiName><shortdesc>
      Установите значение false для отключения автоматической установки трехмерным эффектом точки проекции в центре целевого объекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Установите значение <codeph>false</codeph> для отключения автоматической установки трехмерным эффектом точки проекции в центре целевого объекта. В этом случае следует использовать свойства <codeph>projectionX</codeph> и <codeph>projectionY</codeph> для явной установки точки проекции как смещения точки проекции из координаты (0, 0) целевого объекта.
     
      <p>Трехмерные эффекты работают как отображение трехмерного изображения на двумерное представление для вывода на экран компьютера. Точка проекции определяет центр поля обзора и управляет проекцией целевого объекта из трех измерений на экран.</p>
     
      <p>Это свойство используется только в случае, если для свойства <codeph>applyLocalProjection</codeph> установлено значение <codeph>true</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:fieldOfView"><apiName>fieldOfView</apiName><shortdesc>
      Указывает угол поля обзора, в градусах со значением между 0 и 180, в трехмерном пространстве.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Указывает угол поля обзора, в градусах со значением между <codeph>0</codeph> и <codeph>180</codeph>, в трехмерном пространстве. Это значение определяет степень применения перспективного преобразования и искажения к трехмерному экранному объекту с ненулевой координатой по оси z.
     
      <p>Значение, близкое к <codeph>0</codeph> градусов, означает, что двухмерные координаты x и y экрана и трехмерные координаты x, y и z примерно одинаковы, а искажение незначительное или отсутствует. Другими словами, при маленьком угле экранный объект, движущийся вниз по оси z, имеет визуально почти тот же размер и незначительное перемещение. </p>
     
      <p>Значение, близкое к <codeph>180</codeph> градусам, производит эффект объектива типа «рыбий глаз»: точки с координатой по оси <codeph>z</codeph> меньше <codeph>0</codeph> увеличены, а точки с координатой по оси <codeph>z</codeph> больше <codeph>0</codeph> уменьшены. При большом значении угла экранный объект, перемещающийся вниз по оси z, быстро изменяется в размерах и перемещается на значительное расстояние. Если для поля обзора задано значение <codeph>0</codeph> или <codeph>180</codeph>, изображение отсутствует на экране.</p>
     
      <p>Это свойство используется только в случае, если для свойства <codeph>applyLocalProjection</codeph> установлено значение <codeph>true</codeph>.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link><link href="" invalidHref="flash.geom.PerspectiveProjection.xml"><linktext>flash.geom.PerspectiveProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:focalLength"><apiName>focalLength</apiName><shortdesc>
      Расстояние между исходным положением наблюдателя или точкой просмотра (0,0,0) и экранным объектом, расположенным на оси z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Расстояние между исходным положением наблюдателя или точкой просмотра (0,0,0) и экранным объектом, расположенным на оси z. Во время перспективного преобразования значение <codeph>focalLength</codeph> вычисляется динамически с использованием значений угла поля обзора и соотношения сторон рабочей области (ширина рабочей области, деленная на ее высоту).
      
      <p>Это свойство используется только в случае, если для свойства <codeph>applyLocalProjection</codeph> установлено значение <codeph>true</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link><link href="" invalidHref="flash.geom.PerspectiveProjection.xml"><linktext>flash.geom.PerspectiveProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:projectionX"><apiName>projectionX</apiName><shortdesc>
      Устанавливает точку проекции как смещение точки проекции в направлении по x из координаты (0, 0) целевого объекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Устанавливает точку проекции как смещение точки проекции в направлении по x из координаты (0, 0) целевого объекта. По умолчанию при применении трехмерного эффекта он автоматически устанавливает точку проекции в центре целевого объекта. Для свойства эффекта <codeph>autoCenterProjection</codeph> можно установить значение <codeph>false</codeph> для отключения этой установки по умолчанию и использовать вместо нее свойства <codeph>projectionX</codeph> и <codeph>projectionY</codeph>.
      
      <p>Это свойство используется только в случае, если для свойства <codeph>applyLocalProjection</codeph> установлено значение <codeph>true</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:projectionY"><apiName>projectionY</apiName><shortdesc>
      Устанавливает точку проекции как смещение точки проекции в направлении y из координаты (0, 0) целевого объекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Устанавливает точку проекции как смещение точки проекции в направлении y из координаты (0, 0) целевого объекта. По умолчанию при применении трехмерного эффекта он автоматически устанавливает точку проекции в центре целевого объекта. Для свойства эффекта <codeph>autoCenterProjection</codeph> можно установить значение <codeph>false</codeph> для отключения этой установки по умолчанию и использовать вместо нее свойства <codeph>projectionX</codeph> и <codeph>projectionY</codeph>.
      
      <p>Это свойство используется только в случае, если для свойства <codeph>applyLocalProjection</codeph> установлено значение <codeph>true</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:removeLocalProjectionWhenComplete"><apiName>removeLocalProjectionWhenComplete</apiName><shortdesc>
      Если значение true, то эффект удаляет перспективную проекцию из вышестоящего элемента компонента целевого объекта по завершении воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение <codeph>true</codeph>, то эффект удаляет перспективную проекцию из вышестоящего элемента компонента целевого объекта по завершении воспроизведения. По умолчанию перспективная проекция сохраняется.
     
      <p>Это свойство используется только в случае, если для свойства <codeph>applyLocalProjection</codeph> установлено значение <codeph>true</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:applyChangesPostLayout:get"><apiName>applyChangesPostLayout</apiName><shortdesc> 
      Используется подклассами AnimateTransform для указания, изменяет ли эффект значения преобразования, используемые диспетчером макетов, или он изменяет значения, используемые после запуска макета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue></apiValueDef><apiDesc> 
      Используется подклассами AnimateTransform для указания, изменяет ли эффект значения преобразования, используемые диспетчером макетов, или он изменяет значения, используемые после запуска макета. Поскольку система макета Flex игнорирует свойства трехмерного преобразования, этот класс переопределяет свойство <codeph>AnimateTransform.applyChangesPostLayout</codeph> для установки значения по умолчанию на <codeph>true</codeph> для трехмерных эффектов.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransform3D:applyLocalProjection:get"><apiName>applyLocalProjection</apiName><shortdesc>
      Если установлено значение true, эффект создает перспективную проекцию, используя другие связанные с проекцией свойства в эффекте, и применяет ее для вышестоящего элемента целевого компонента, когда начинается его воспроизведение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если <codeph>true</codeph>, эффект создает перспективную проекцию, используя другие связанные с проекцией свойства в эффекте, и применяет ее для вышестоящего элемента целевого компонента, когда начинается его воспроизведение. По умолчанию проекция остается на вышестоящем элементе после завершения эффекта; для удаления проекции после окончания эффекта следует установить <codeph>removeLocalProjectionWhenComplete</codeph> на значение <codeph>true</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/removeLocalProjectionWhenComplete"><linktext>removeLocalProjectionWhenComplete</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateTransitionShader"><apiName>AnimateTransitionShader</apiName><shortdesc>
 Эффект AnimateTransitionShader анимирует переход между двумя растровыми изображениями, представляющими собой начальное (bitmapFrom) и конечное состояния (bitmapTo).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><discouragedForProfiles><DiscouragedForProfile name="mobileDevice" owner="spark.effects:AnimateTransitionShader">
<description>
  Эффект AnimateTransitionShader использует Pixel Bender, который не поддерживается в мобильных приложениях AIR.
 </description>
	</DiscouragedForProfile></discouragedForProfiles><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateTransitionShader&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateTransitionShader
    <b>Properties</b>
    id="ID"
    bitmapFrom="no default"
    bitmapTo="no default"
    shaderByteCode="no default"
    sahderProperties="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
 Эффект AnimateTransitionShader анимирует переход между двумя растровыми изображениями, представляющими собой начальное (<codeph>bitmapFrom</codeph>) и конечное состояния (<codeph>bitmapTo</codeph>).
 
 <p>Анимация выполняется посредством запуска программы затенения пикселей, заданной свойством <codeph>shader</codeph>, которое использует два растровых изображения в качестве входных данных. Растровые изображения представлены экземпляром класса flash.display.BitmapData. Собственную программу затенения пикселей можно создать при помощи Adobe Pixel Bender Toolkit.</p>
 
 <p>Если ни одно растровое изображение не предоставлено, то значение будет определяться динамически либо из соответствующего состояния целевого объекта при переходе, либо непосредственно из целевого объекта, если эффект не выполняется при переходе. Если данный эффект выполняется при переходе и целевой объект в течение изменения состояния исчезает или появляется, то для представления этого объекта используется полностью прозрачное растровое изображение.</p>
 
 <p>Этот эффект может быть выполнен только для целевых объектов, которые являются UIComponents или GraphicElements, поскольку получение растровых изображений объекта требует наличие информации о данном объекте, существующей только в этих классах.</p>
 
 <p>Поскольку эффект основан на растровом изображении, а для основной программы затенения пикселей необходимо наличие двух растровых изображений одинакового размера, то эффект будет работать правильно только в том случае, когда оба растровых изображения имеют одинаковый размер. Это означает, что если происходит изменение размера или ориентации целевого объекта, приводящее к изменению размеров ограничительной рамки, то эффект может воспроизводиться неправильно.</p>
 
 <p>Этот эффект и его подклассы отличаются от эффектов Flex, в котором они работают другим образом, и вероятно не дадут намеченного результата при параллельном выполнении с другими эффектами. Это ограничение обусловлено тем, что предшествующее и последующее изображения получены до начала эффекта. Если с целевым объектом происходят какие-либо изменения после вычислений данных растровых изображений, например другой эффект изменяет свойства целевого объекта, то эти изменения не будут приняты в расчет предварительно вычисленного растрового изображения и результаты не будут соответствовать ожидаемым. Для обеспечения корректного воспроизведения данных эффектов, основанных на растровом изображении, они должны воспроизводиться исключительно на своих целевых объектах.</p>
  
  </apiDesc><example conref="AnimateTransitionShaderExample.mxml"><swfblock conref="examples/AnimateTransitionShaderExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.BitmapData.xml"><linktext>flash.display.BitmapData</linktext></link><link href="spark.effects.supportClasses.xml#AnimateTransitionShaderInstance"><linktext>spark.effects.supportClasses.AnimateTransitionShaderInstance</linktext></link><link href="spark.primitives.supportClasses.xml#GraphicElement"><linktext>spark.primitives.supportClasses.GraphicElement</linktext></link></related-links><apiConstructor id="spark.effects:AnimateTransitionShader:AnimateTransitionShader"><apiName>AnimateTransitionShader</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateTransitionShader:bitmapFrom"><apiName>bitmapFrom</apiName><shortdesc>
     Данные растрового изображения, представляющие начальное состояние эффекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:BitmapData"/></apiValueDef><apiDesc>
     Данные растрового изображения, представляющие начальное состояние эффекта. Если это свойство не установлено, то оно вычисляется автоматически при воспроизведении эффекта путем создания снимка целевого объекта или посредством использовании прозрачного растрового изображения, если объект не существует в состоянии начального представления перехода.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransitionShader:bitmapTo"><apiName>bitmapTo</apiName><shortdesc>
     Растровые данные, представляющие конечное состояние эффекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:BitmapData"/></apiValueDef><apiDesc>
     Растровые данные, представляющие конечное состояние эффекта. Если это свойство не установлено, то оно вычисляется автоматически при воспроизведении эффекта путем создания снимка целевого объекта или посредством использовании прозрачного растрового изображения, если объект не существует в состоянии конечного представления перехода.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransitionShader:shaderByteCode"><apiName>shaderByteCode</apiName><shortdesc>
     Байт-код для программы затенения пикселей, которую эффект использует для анимации между двумя данными растровыми изображениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
     Байт-код для программы затенения пикселей, которую эффект использует для анимации между двумя данными растровыми изображениями. Это свойство может быть представлено либо как ByteArray, либо как класс, представляющий ByteArray (который является результатом встраивания ресурса).
     
     <p>Программа затенения пикселей может иметь произвольные функциональные возможности и входные данные, но она должна иметь как минимум три входных значения <codeph>image4</codeph>. Первое значение может быть названо как угодно и не используется программой затенения пикселей, так как существует только для удовлетворения требований Flash по назначению фильтрованного объекта первому значению. Следует отметить, что значения, которые не используются в программе затенения пикселей, можно оптимизировать таким образом, что код будет ссылаться на эти значения только один раз.</p>
     
     <p>Должны быть, по крайней мере, два других входных растровых изображения с именами <codeph>from</codeph> и <codeph>to</codeph>, которые представляют предыдущее и последующее растровое изображение. Наконец, следует определить один параметр <codeph>float</codeph> с именем <codeph>progress</codeph>, который содержит значение времени, затраченного на эффект.</p>
     
     <p>Можно указать два дополнительных параметра <codeph>width</codeph> и <codeph>height</codeph>. Если они существуют, то они автоматически задают ширину и высоту целевого объекта эффекта.</p>
     
     <p>Дополнительную информацию о программе затенения пикселей для Flash см. в документации Pixel Bender Toolkit. Также можно ознакомиться с исходным кодом файла CrossFade.pbk в папке frameworks\projects\flex4\src\spark\effects исходного кода Flex.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransitionShader:shaderProperties"><apiName>shaderProperties</apiName><shortdesc>
     Схема пары «имя/значение» параметра передается в программу затенения пикселей до воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
     Схема пары «имя/значение» параметра передается в программу затенения пикселей до воспроизведения. Например, для установки параметра с именем <codeph>direction</codeph> для затенения в pbj-файле Pixel Bender в Wipe.pbj, вызывающий код может выглядеть следующим образом:
     
     <pre>
       [Embed(source="Wipe.pbj", mimeType="application/octet-stream")]
       private var WipeCodeClass:Class;
       var shaderEffect = new AnimateTransitionShader();
       shaderEffect.shaderByteCode = WipeCodeClass;
       shaderEffect.shaderProperties = {direction : 1};
     </pre>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Move3D"><apiName>Move3D</apiName><shortdesc>
  Класс Move3D перемещает целевой объект в измерениях x, y и z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Move3D&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Move3D
    <b>Properties</b>
    id="ID"
    xBy="no default"
    xFrom="no default"
    xTo="no default"
    yBy="no default"
    yFrom="no default"
    yTo="no default"
    zBy="no default"
    zFrom="no default"
    zTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform3D</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс Move3D перемещает целевой объект в измерениях x, y и z. Спецификация свойств x, y и z эффекта Move3D указывает изменение x, y и z, которое должно произойти с центром преобразования, вокруг которого происходят общие эффект преобразования. 
 
  <p>Как и все эффекты, основанные на AnimateTransform, этот эффект может воздействовать только на подклассы UIComponent и GraphicElement, поскольку подобные эффекты зависят от специфичных функций преобразования этих классов. Кроме того, эффекты преобразования, выполняющиеся параллельно на одном целевом объекте, выполняются как один экземпляр эффекта. Поэтому эффекты преобразования совместно используют центр преобразования, установленный любым из совместно действующих эффектов.</p>
  
  </apiDesc><example conref="Move3DEffectExample.mxml"><swfblock conref="examples/Move3DEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.xml#Move"><linktext>spark.effects.Move</linktext></link></related-links><apiConstructor id="spark.effects:Move3D:Move3D"><apiName>Move3D</apiName><shortdesc> 
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc> 
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Move3D:xBy"><apiName>xBy</apiName><shortdesc> 
      Число пикселей, на которое изменится положение целевого объекта по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Число пикселей, на которое изменится положение целевого объекта по оси x. Значения могут быть отрицательными.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:xFrom"><apiName>xFrom</apiName><shortdesc> 
      Начальное положение целевого объекта по оси x в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальное положение целевого объекта по оси x в пикселях. Если опущено, то Flex использует либо значение в начальном состоянии представления, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:xTo"><apiName>xTo</apiName><shortdesc> 
      Конечное положение целевого объекта по оси x в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечное положение целевого объекта по оси x в пикселях. Если опущено, то Flex использует либо значение в начальном состоянии, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:yBy"><apiName>yBy</apiName><shortdesc> 
      Число пикселей, на которое изменится позиция целевого объекта по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Число пикселей, на которое изменится позиция целевого объекта по оси y. Значения могут быть отрицательными.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:yFrom"><apiName>yFrom</apiName><shortdesc> 
      Начальное положение целевого объекта по оси y в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальное положение целевого объекта по оси y в пикселях. Если значение опущено, то Flex использует либо значение в начальном состоянии представления, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:yTo"><apiName>yTo</apiName><shortdesc> 
      Конечное положение целевого объекта по оси y в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечное положение целевого объекта по оси y в пикселях. Если значение опущено, то Flex использует либо значение в конечном состоянии представления, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:zBy"><apiName>zBy</apiName><shortdesc> 
      Число пикселей, на которое сместится целевой объект по оси z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Число пикселей, на которое сместится целевой объект по оси z. Значения могут быть отрицательными.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:zFrom"><apiName>zFrom</apiName><shortdesc> 
      Начальное положение целевого объекта по оси z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальное положение целевого объекта по оси z. Если опущено, то Flex использует либо значение в начальном состоянии представления, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:zTo"><apiName>zTo</apiName><shortdesc> 
      Конечное положение целевого объекта по оси z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечное положение целевого объекта по оси z. Если опущено, то Flex использует либо значение в начальном состоянии, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Wipe"><apiName>Wipe</apiName><shortdesc>
  Эффект Wipe выполняет растровый переход, посредством выполнения направленного стирания между первым и вторым растровыми изображениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><discouragedForProfiles><DiscouragedForProfile name="mobileDevice" owner="spark.effects:Wipe">
<description>
  Эффект Wipe использует Pixel Bender, который не поддерживается в мобильных приложениях AIR.
 </description>
	</DiscouragedForProfile></discouragedForProfiles><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Wipe&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Wipe
    <b>Properties</b>
    id="ID"
    direction="right"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransitionShader</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект Wipe выполняет растровый переход, посредством выполнения направленного стирания между первым и вторым растровыми изображениями. Процесс стирания делает видимым второе по ходу анимации растровое изображение в направлении, обозначенном свойством <codeph>direction</codeph>.
 
  <p>Программа пиксельного затенения, загруженная эффектом, выполняет основной растровый эффект. Если требуется использовать другой вариант поведения Wipe, то можно указать пользовательскую программу пиксельного затенения. Программа пиксельного затенения должна соответствовать ограничениям, указанным для свойства <codeph>shaderByteCode</codeph> класса AnimateTransitionShader, и предоставлять три дополнительных параметра. Дополнительные параметры, необходимые для затенения Wipe:</p>
 
  <ul>
    <li>Целочисленный параметр <codeph>direction</codeph> со значением, аналогичным связанному свойству строки в классе Wipe.</li>
    <li>Два параметра плавающей запятой: <codeph>imageWidth</codeph> и <codeph>imageHeight</codeph>. </li>
  </ul>
 
  <p>Все эти параметры установлены для шейдера при запуске воспроизведения эффекта, таким образом, данные параметры должны существовать и выполнять определенные действия для правильного функционирования эффекта.</p>
  
  </apiDesc><example conref="WipeExample.mxml"><swfblock conref="examples/WipeExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.xml#WipeDirection"><linktext>spark.effects.WipeDirection</linktext></link><link href="spark.effects.xml#AnimateTransitionShader"><linktext>spark.effects.AnimateTransitionShader</linktext></link><link href="spark.effects.xml#AnimateTransitionShader/shaderByteCode"><linktext>spark.effects.AnimateTransitionShader.shaderByteCode</linktext></link></related-links><apiConstructor id="spark.effects:Wipe:Wipe"><apiName>Wipe</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Wipe:direction"><apiName>direction</apiName><shortdesc>
      Направление, в котором движется стирание в процессе анимации, может принимать следующие значения: WipeDirection.RIGHT, WipeDirection.LEFT, WipeDirection.UP или WipeDirection.DOWN.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>right</apiData><apiType value="String"/><apiDefaultValue>WipeDirection.RIGHT
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Направление, в котором движется стирание в процессе анимации, может принимать следующие значения: <codeph>WipeDirection.RIGHT</codeph>, <codeph>WipeDirection.LEFT</codeph>, <codeph>WipeDirection.UP</codeph> или <codeph>WipeDirection.DOWN</codeph>. 
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#WipeDirection/RIGHT"><linktext>WipeDirection.RIGHT</linktext></link><link href="spark.effects.xml#WipeDirection/UP"><linktext>WipeDirection.UP</linktext></link><link href="spark.effects.xml#WipeDirection/LEFT"><linktext>WipeDirection.LEFT</linktext></link><link href="spark.effects.xml#WipeDirection/DOWN"><linktext>WipeDirection.DOWN</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.effects:CallAction"><apiName>CallAction</apiName><shortdesc>
 Эффект CallAction вызывает функцию, указанную свойством functionName объекта target с дополнительными аргументами, указанными свойством args.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:CallAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:CallAction
    <b>Properties</b>
    id="ID"
    functionName="no default"
    args="no default"
  /&gt;
  </pre>
  
 ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
 Эффект CallAction вызывает функцию, указанную свойством <codeph>functionName</codeph> объекта <codeph>target</codeph> с дополнительными аргументами, указанными свойством <codeph>args</codeph>. Данный эффект рекомендуется использовать в последовательностях эффектов, для которых вызов функции может быть включен как часть составного эффекта.
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#CallActionInstance"><linktext>spark.effects.supportClasses.CallActionInstance</linktext></link></related-links><apiConstructor id="spark.effects:CallAction:CallAction"><apiName>CallAction</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:CallAction:args"><apiName>args</apiName><shortdesc> 
     Аргументы, переданные функции, которая вызывается этим эффектом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc> 
     Аргументы, переданные функции, которая вызывается этим эффектом.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:CallAction:functionName"><apiName>functionName</apiName><shortdesc> 
     Имя функции, вызванной для целевого объекта при воспроизведении эффекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> 
     Имя функции, вызванной для целевого объекта при воспроизведении эффекта.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AddAction"><apiName>AddAction</apiName><shortdesc>
  Класс AddAction определяет эффект действия, соответствующий свойству AddChild определения состояния представления</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AddAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AddAction
    <b>Properties</b>
    id="ID"
    index="-1"
    position="index"
    relativeTo=""
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс AddAction определяет эффект действия, соответствующий свойству <codeph>AddChild</codeph> определения состояния представления Эффект AddAction используется в процессе определения перехода для контроля изменения состояния представления, определенного свойством AddChild и происходящего в течение перехода.
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AddActionInstance"><linktext>spark.effects.supportClasses.AddActionInstance</linktext></link><link href="" invalidHref="mx.states.AddChild.xml"><linktext>mx.states.AddChild</linktext></link></related-links><apiConstructor id="spark.effects:AddAction:AddAction"><apiName>AddAction</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AddAction:AFTER"><apiName>AFTER</apiName><shortdesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством relativeTo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>after</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством <codeph>relativeTo</codeph>.
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:BEFORE"><apiName>BEFORE</apiName><shortdesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством relativeTo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>before</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством <codeph>relativeTo</codeph>.
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:FIRST_CHILD"><apiName>FIRST_CHILD</apiName><shortdesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством relativeTo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>firstChild</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством <codeph>relativeTo</codeph>.
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:INDEX"><apiName>INDEX</apiName><shortdesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством relativeTo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>index</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством <codeph>relativeTo</codeph>.
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:LAST_CHILD"><apiName>LAST_CHILD</apiName><shortdesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством relativeTo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lastChild</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Константа, используемая для указания позиции для добавления элемента относительно объекта, указанного свойством <codeph>relativeTo</codeph>.
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:index"><apiName>index</apiName><shortdesc> 
      Индекс нижестоящего элемента в рамках вышестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc> 
      Индекс нижестоящего элемента в рамках вышестоящего элемента. Значение -1 означает добавление нижестоящего элемента в качестве последнего нижестоящего элемента данного вышестоящего элемента.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AddAction:position"><apiName>position</apiName><shortdesc> 
      Позиция нижестоящего элемента в списке отображения относительно объекта, указанного свойством relativeTo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>index</apiData><apiType value="String"/><apiDefaultValue>AddAction.INDEX
      </apiDefaultValue></apiValueDef><apiDesc> 
      Позиция нижестоящего элемента в списке отображения относительно объекта, указанного свойством <codeph>relativeTo</codeph>. Действительными значениями являются <codeph>AddAction.BEFORE</codeph>, <codeph>AddAction.AFTER</codeph>, <codeph>AddAction.FIRST_CHILD</codeph>, <codeph>AddAction.LAST_CHILD</codeph> и <codeph>AddAction.INDEX</codeph>, где <codeph>AddAction.INDEX</codeph> указывает используемое для определения позиции нижестоящего элемента свойство <codeph>index</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/BEFORE"><linktext>BEFORE</linktext></link><link href="spark.effects.xml#AddAction/AFTER"><linktext>AFTER</linktext></link><link href="spark.effects.xml#AddAction/FIRST_CHILD"><linktext>FIRST_CHILD</linktext></link><link href="spark.effects.xml#AddAction/LAST_CHILD"><linktext>LAST_CHILD</linktext></link><link href="spark.effects.xml#AddAction/INDEX"><linktext>INDEX</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:relativeTo"><apiName>relativeTo</apiName><shortdesc> 
      Местоположение, в котором добавляется нижестоящий компонент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObjectContainer"/></apiValueDef><apiDesc> 
      Местоположение, в котором добавляется нижестоящий компонент. По умолчанию Flex определяет это значение в процессе определения состояния из определения свойства <codeph>AddChild</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateFilter"><apiName>AnimateFilter</apiName><shortdesc>
  Эффект AnimateFilter применяет экземпляр mx.filters.IBitmapFilter к целевому объекту и позволяет анимировать свойства фильтра между значениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateFilter&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateFilter
    <b>Properties</b>
    id="ID"
    bitmapFilter="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект AnimateFilter применяет экземпляр mx.filters.IBitmapFilter к целевому объекту и позволяет анимировать свойства фильтра между значениями. В отличие от эффектов, которое анимируют свойства целевого объекта, эффект AnimateFilter анимирует свойства фильтра, примененного к целевому объекту.
 
  <p>Фильтры, к которым применим этот эффект, определены в пакете . Общие фильтры включают DropShadowFilter, GlowFilter, BlurFilter и ShaderFilter.</p>
 
  <p>Для определения свойств фильтра, подлежащих анимации, необходимо передать массив объектов SimpleMotionPath свойству <codeph>motionPath</codeph> эффекта AnimateFilter. Каждый объект SimpleMotionPath определяет свойство в фильтре, начальное значение свойства и конечное значение свойства.</p>
  
  </apiDesc><example conref="AnimateFilterEffectExample.mxml"><swfblock conref="examples/AnimateFilterEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateFilterInstance"><linktext>spark.effects.supportClasses.AnimateFilterInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateFilter:AnimateFilter"><apiName>AnimateFilter</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
     
      </apiDesc></apiParam><apiParam><apiItemName>filter</apiItemName><apiType value="mx.filters:IBitmapFilter"/><apiData>null</apiData><apiDesc>Фильтр, применяемый для целевого объекта. Фильтры, к которым применим этот эффект, определены в пакете spark.filters.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateFilter:bitmapFilter"><apiName>bitmapFilter</apiName><shortdesc>
      Применяемый и подлежащий анимации экземпляр IBitmapFilter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.filters:IBitmapFilter"/></apiValueDef><apiDesc>
      Применяемый и подлежащий анимации экземпляр IBitmapFilter.
     
      <p>Фильтры, к которым применим этот эффект, определены в пакете . Общие фильтры включают DropShadowFilter, GlowFilter, BlurFilter и ShaderFilter.</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Rotate"><apiName>Rotate</apiName><shortdesc>
  Эффект Rotate вращает целевой объект в плоскости x, y относительно центра преобразования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Rotate&gt;</code> tag
  inherits all of the tag attributes of its of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Rotate
    id="ID"
    angleBy="val"
    angleFrom="val"
    angleTo="val"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект Rotate вращает целевой объект в плоскости x, y относительно центра преобразования. 
 
  <p>Если указаны какие-либо два значения углов (angleFrom, angleTo или angleBy), то Flex вычисляет третье. Если указаны все три, то Flex игнорирует значение <codeph>angleBy</codeph>.</p>
 
  <p>Как и все эффекты, основанные на AnimateTransform, этот эффект может воздействовать только на подклассы UIComponent и GraphicElement, поскольку подобные эффекты зависят от специфичных функций преобразования данных классов. </p>
  
  </apiDesc><example conref="RotateEffectExample.mxml"><swfblock conref="examples/RotateEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Rotate:Rotate"><apiName>Rotate</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Rotate:angleBy"><apiName>angleBy</apiName><shortdesc> 
      Угол, на который необходимо повернуть целевой объект.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Угол, на который необходимо повернуть целевой объект. Значение может быть отрицательным.
     
      <p>Если значение <codeph>angleBy</codeph> является отрицательным, то целевой объект поворачивается против часовой стрелки. В противном случае вращение производится по часовой стрелке. Если требуется задать многократное вращение целевого объекта, в качестве этого значения следует установить большое положительное или малое отрицательное число.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate:angleFrom"><apiName>angleFrom</apiName><shortdesc> 
      Начальный угол поворота целевого объекта в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальный угол поворота целевого объекта в градусах. Допустимыми являются значения от 0 до 360.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate:angleTo"><apiName>angleTo</apiName><shortdesc> 
      Конечный угол поворота целевого объекта в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечный угол поворота целевого объекта в градусах. Значения могут быть как положительными, так и отрицательными.
     
      <p>Если значение <codeph>angleTo</codeph> меньше значения <codeph>angleFrom</codeph>, то целевой объект поворачивается против часовой стрелки. В противном случае вращение производится по часовой стрелке. Если требуется задать многократное вращение целевого объекта, в качестве этого значения следует установить большое положительное или малое отрицательное число.</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Scale3D"><apiName>Scale3D</apiName><shortdesc>
  Класс Scale3D масштабирует целевой объект в трех измерениях вокруг центра преобразования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Scale3D&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Scale3D
    <b>Properties</b>
    id="ID"
    scaleXBy="no default"
    scaleXFrom="no default"
    scaleXTo="no default"
    scaleYBy="no default"
    scaleYFrom="no default"
    scaleYTo="no default"
    scaleZBy="no default"
    scaleZFrom="no default"
    scaleZTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform3D</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс Scale3D масштабирует целевой объект в трех измерениях вокруг центра преобразования. Значение масштаба 2,0 означает, что объект был увеличен с коэффициентом 2, а значение 0,5 означает, что объект был уменьшен с коэффициентом 2. Значение масштаба 0,0 недопустимо.
 
  <p>Как и все эффекты, основанные на AnimateTransform, этот эффект может воздействовать только на подклассы UIComponent и GraphicElement, поскольку подобные эффекты зависят от специфичных функций преобразования этих классов. Кроме того, эффекты преобразования, выполняющиеся параллельно на одном целевом объекте, выполняются как один экземпляр эффекта. Поэтому эффекты преобразования совместно используют центр преобразования, установленный любым из совместно действующих эффектов.</p>
  
  </apiDesc><example conref="Scale3DEffectExample.mxml"><swfblock conref="examples/Scale3DEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Scale3D:Scale3D"><apiName>Scale3D</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Scale3D:scaleXBy"><apiName>scaleXBy</apiName><shortdesc>
      Коэффициент масштабирования объекта по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Коэффициент масштабирования объекта по оси x. Это дополнительный параметр, использующийся вместо одного из значений «с/до» для задания значения дельты, которое добавляется к значению «с» или для получения значения «с» вычитанием из значения «до».
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleXFrom"><apiName>scaleXFrom</apiName><shortdesc>
      Начальный коэффициент масштабирования по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Начальный коэффициент масштабирования по оси x. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleXTo"><apiName>scaleXTo</apiName><shortdesc>
      Конечный коэффициент масштабирования по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Конечный коэффициент масштабирования по оси x. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleYBy"><apiName>scaleYBy</apiName><shortdesc>
     Коэффициент масштабирования объекты по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Коэффициент масштабирования объекты по оси y. Это дополнительный параметр, использующийся вместо одного из значений «с/до» для задания значения дельты, которое добавляется к значению «с» или для получения значения «с» вычитанием из значения «до».
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleYFrom"><apiName>scaleYFrom</apiName><shortdesc>
      Начальный коэффициент масштабирования по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Начальный коэффициент масштабирования по оси y. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleYTo"><apiName>scaleYTo</apiName><shortdesc>
      Конечный коэффициент масштабирования по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Конечный коэффициент масштабирования по оси y. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleZBy"><apiName>scaleZBy</apiName><shortdesc>
      Коэффициент масштабирования объекта по оси z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Коэффициент масштабирования объекта по оси z. Это дополнительный параметр, использующийся вместо одного из значений «с/до» для задания значения дельты, которое добавляется к значению «с» или для получения значения «с» вычитанием из значения «до».
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleZFrom"><apiName>scaleZFrom</apiName><shortdesc>
      Начальный коэффициент масштабирования по оси z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Начальный коэффициент масштабирования по оси z. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleZTo"><apiName>scaleZTo</apiName><shortdesc>
      Конечный коэффициент масштабирования по оси z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Конечный коэффициент масштабирования по оси z. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Move"><apiName>Move</apiName><shortdesc>
  Эффект Move перемещает целевой объект по осям x и y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Move&gt;</code> tag
  inherits all of the tag attributes of its of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Move
    id="ID"
    xBy="val"
    xFrom="val" 
    xTo="val"
    yBy="val"
    yFrom="val"
    yTo="val"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект Move перемещает целевой объект по осям x и y. Спецификации свойств x и y эффекта Move указывают изменение x и y, которое должно произойти с центром преобразований, вокруг которого происходит общее преобразование. Например, если установлено свойство <codeph>autoCenterTransform</codeph>, то значения «с/до/к» в этом эффекте будут определять, насколько переместится центр целевого объекта, а не координаты (x, y) самого объекта.
 
  <p>Как и все эффекты, основанные на преобразовании, этот эффект может воздействовать только на подклассы UIComponent и GraphicElement.</p>
  
  </apiDesc><example conref="MoveEffectExample.mxml"><swfblock conref="examples/MoveEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Move:Move"><apiName>Move</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Move:xBy"><apiName>xBy</apiName><shortdesc> 
      Число пикселей, на которое изменится положение целевого объекта по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Число пикселей, на которое изменится положение целевого объекта по оси x. Значения могут быть отрицательными.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:xFrom"><apiName>xFrom</apiName><shortdesc> 
      Начальное положение целевого объекта по оси x в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальное положение целевого объекта по оси x в пикселях. Если опущено, то Flex использует либо значение в начальном состоянии представления, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:xTo"><apiName>xTo</apiName><shortdesc> 
      Конечное положение целевого объекта по оси x в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечное положение целевого объекта по оси x в пикселях. Если опущено, то Flex использует либо значение в начальном состоянии, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:yBy"><apiName>yBy</apiName><shortdesc> 
      Число пикселей, на которое изменится позиция целевого объекта по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Число пикселей, на которое изменится позиция целевого объекта по оси y. Значения могут быть отрицательными.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:yFrom"><apiName>yFrom</apiName><shortdesc> 
      Начальное положение целевого объекта по оси y в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальное положение целевого объекта по оси y в пикселях. Если значение опущено, то Flex использует либо значение в начальном состоянии представления, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:yTo"><apiName>yTo</apiName><shortdesc> 
      Конечное положение целевого объекта по оси y в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечное положение целевого объекта по оси y в пикселях. Если значение опущено, то Flex использует либо значение в конечном состоянии представления, если эффект воспроизводится в процессе перехода, либо текущее значение целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:CrossFade"><apiName>CrossFade</apiName><shortdesc>
 Эффект CrossFade выполняет эффект растрового перехода посредством плавного затухания между первым и вторым растровыми изображениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><discouragedForProfiles><DiscouragedForProfile name="mobileDevice" owner="spark.effects:CrossFade">
<description>
  Эффект CrossFade использует Pixel Bender, который не поддерживается в мобильных приложениях AIR.
 </description>
	</DiscouragedForProfile></discouragedForProfiles><DefaultProperty name="motionPaths"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransitionShader</apiBaseClassifier></apiClassifierDef><apiDesc>
 Эффект CrossFade выполняет эффект растрового перехода посредством <i>плавного затухания</i> между первым и вторым растровыми изображениями. Плавное затухание совмещает эти два растровых изображения в процессе анимации.
 
 <p>В каждой точке анимации, где доля времени, требуемая для анимации и замедления, равна <codeph>f</codeph>, а значения пикселей в первом и втором растровых изображениях равны <codeph>v1</codeph> и <codeph>v2</codeph>, результирующее значение в пикселях <codeph>v</codeph> для любого пикселя на изображении равно:</p>
 
 <pre>v = v1 * (1 - f) + v2 * f</pre>
 
 <p>Растровый эффект выполняется программным шейдером пикселей, который загружается эффектом. Различные варианты поведения плавного наложения можно задать, указав программу шейдера пикселей для свойства <codeph>shaderByteCode</codeph>. Программа шейдера пикселей должна удовлетворять требованиям, определенным в эффекте AnimateTransitionShader. </p>
 
 </apiDesc><example conref="CrossFadeExample.mxml"><swfblock conref="examples/CrossFadeExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.xml#AnimateTransitionShader"><linktext>spark.effects.AnimateTransitionShader</linktext></link><link href="spark.effects.xml#AnimateTransitionShader/shaderByteCode"><linktext>spark.effects.AnimateTransitionShader.shaderByteCode</linktext></link></related-links><apiConstructor id="spark.effects:CrossFade:CrossFade"><apiName>CrossFade</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.effects:Fade"><apiName>Fade</apiName><shortdesc>
  Эффект Fade анимирует свойство alpha компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Fade&gt;</code> tag
  inherits the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Fade 
    id="ID"
    alphaFrom="val"
    alphaTo="val"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект Fade анимирует свойство <codeph>alpha</codeph> компонента. При ручном воспроизведении (вне перехода) на объекте, для свойства <codeph>visible</codeph> которого установлено значение false, и указании выполнить анимацию <codeph>alpha</codeph> от нуля до значения отличного от нуля, для <codeph>visible</codeph> будет установлено значение true в качестве побочного эффекта его появления. При выполнении в качестве части перехода оно будет учитывать конкретные для состояния значения, но может использовать свойство <codeph>visible</codeph>, а также определять имеет ли объект вышестоящий элемент в состояниях до/после для указания значений выполнения анимации <codeph>alpha</codeph> от и до, если <codeph>alphaFrom</codeph> и <codeph>alphaTo</codeph> не указаны для эффекта.
  
  </apiDesc><example conref="FadeEffectExample.mxml"><swfblock conref="examples/FadeEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#FadeInstance"><linktext>spark.effects.supportClasses.FadeInstance</linktext></link></related-links><apiConstructor id="spark.effects:Fade:Fade"><apiName>Fade</apiName><shortdesc>
     Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Конструктор. 
    
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Fade:alphaFrom"><apiName>alphaFrom</apiName><shortdesc> 
      Начальное значение свойства alpha находится между 0,0 и 1,0, при этом 0,0 обозначает прозрачность, а 1,0 соответствует полной непрозрачности.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальное значение свойства <codeph>alpha</codeph> находится между 0,0 и 1,0, при этом 0,0 обозначает прозрачность, а 1,0 соответствует полной непрозрачности. 
     
      <p>Если эффект вызывает исчезновение целевого компонента, то значением по умолчанию является текущее значение свойства <codeph>alpha</codeph> целевого объекта. Если эффект вызывает появление целевого компонента, то значение по умолчанию равно 0,0.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Fade:alphaTo"><apiName>alphaTo</apiName><shortdesc> 
      Конечное значение свойства alpha находится между 0,0 и 1,0, при этом 0,0 обозначает прозрачность, а 1,0 соответствует полной непрозрачности.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечное значение свойства <codeph>alpha</codeph> находится между 0,0 и 1,0, при этом 0,0 обозначает прозрачность, а 1,0 соответствует полной непрозрачности.
     
      <p>Если эффект вызывает исчезновение целевого компонента, то значение по умолчанию равно 0,0. Если эффект вызывает появление целевого компонента, то значением по умолчанию является текущее значение свойства <codeph>alpha</codeph> целевого объекта.</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Animate"><apiName>Animate</apiName><shortdesc>
 Эффект Animate анимирует произвольный набор свойств между значениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="suspendBackgroundProcessing"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Animate&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Animate
    <b>Properties</b>
    id="ID"
    disableLayout="false"
    easer="{spark.effects.easing.Sine(.5)}"
    interpolator="NumberInterpolator"
    motionPaths="no default"
    repeatBehavior="loop"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
 Эффект Animate анимирует произвольный набор свойств между значениями. Для анимации необходимо указать свойства и значения, установив свойство <codeph>motionPaths</codeph>. 
  
  </apiDesc><example conref="AnimateEffectExample.mxml"><swfblock conref="examples/AnimateEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateInstance"><linktext>spark.effects.supportClasses.AnimateInstance</linktext></link></related-links><adobeApiEvent id="spark.effects:Animate_mx.events.EffectEvent.EFFECT_REPEAT_effectRepeat"><apiName>effectRepeat</apiName><shortdesc>
 Передается для каждого эффекта, повторяемого более одного раза, при его новом повторении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.EffectEvent.EFFECT_REPEAT</apiEventType><adobeApiEventClassifier>mx.events.EffectEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Передается для каждого эффекта, повторяемого более одного раза, при его новом повторении. Flex также передает для данного эффекта событие <codeph>effectUpdate</codeph>.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.effects:Animate_mx.events.EffectEvent.EFFECT_UPDATE_effectUpdate"><apiName>effectUpdate</apiName><shortdesc>
 Передается при каждом обновлении целевого объекта эффектом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.EffectEvent.EFFECT_UPDATE</apiEventType><adobeApiEventClassifier>mx.events.EffectEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Передается при каждом обновлении целевого объекта эффектом.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.effects:Animate:Animate"><apiName>Animate</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Animate:disableLayout:get"><apiName>disableLayout</apiName><shortdesc>
     Если значение равно true, эффект отключает макет на вышестоящих контейнерах его целевых объектов, устанавливая для свойства autoLayout контейнеров значение false, а также отключает любые ограничения макета на целевые объекты.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
     </apiDefaultValue></apiValueDef><apiDesc>
     Если значение равно <codeph>true</codeph>, то данный эффект отключает макет на вышестоящих контейнерах его целевых объектов, устанавливая для свойства <codeph>autoLayout</codeph> контейнеров значение false, а также отключая все ограничения макета на целевые объекты. Эти свойства будут восстановлены по окончании эффекта.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Animate:easer:get"><apiName>easer</apiName><shortdesc>
     Реакция замедления для этого эффекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.effects.easing:IEaser</apiValueClassifier><apiDefaultValue>spark.effects.easing.Sine(.5)
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Реакция замедления для этого эффекта. Этот объект IEaser используется для преобразования доли времени, потребовавшегося на анимацию, в долю времени, затраченного на замедление, которая затем используется для расчета значений по этой доле затраченного на замедление времени.
     
     <p>Следует отметить, что возможно замедление на уровне эффекта и на уровне ключевого кадра (где ключевые кадры удерживают значение/время, используемые в структурах MotionPath). Эти реакции замедления будут основываться друг на друге. <codeph>easer</codeph> управляет замедлением всего эффекта. Ключевой кадр управляет замедлением в одном отдельном интервале анимации. По умолчанию замедление для анимации является нелинейным (Sine(0,5)), в то время как замедление для ключевых кадров линейно. При необходимости получения эффекта с замедлением на уровне ключевого кадра вы можете установить линейное замедление эффекта, а затем установить замедление отдельно на ключевые кадры.</p>
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.easing.xml#Sine"><linktext>spark.effects.easing.Sine</linktext></link></related-links></apiValue><apiValue id="spark.effects:Animate:interpolator:get"><apiName>interpolator</apiName><shortdesc>
     Для вычисления значений между начальными и конечными значениями свойства данным эффектом используется интерполятор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.effects.interpolation:IInterpolator</apiValueClassifier></apiValueDef><apiDesc>
     Для вычисления значений между начальными и конечными значениями свойства данным эффектом используется интерполятор. По умолчанию интерполяцию обрабатывает класс NumberInterpolator или, если начальные и конечные значения являются массивами или векторами, класс MultiValueInterpolator. Интерполяция других типов или таких чисел, которые должны быть интерполированы иначе (например, значения <codeph>uint</codeph>, содержащие информацию о цветовых каналах), может быть обработана при помощи других интерполяторов.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.interpolation.xml#NumberInterpolator"><linktext>spark.effects.interpolation.NumberInterpolator</linktext></link><link href="spark.effects.interpolation.xml#MultiValueInterpolator"><linktext>spark.effects.interpolation.MultiValueInterpolator</linktext></link></related-links></apiValue><apiValue id="spark.effects:Animate:motionPaths:get"><apiName>motionPaths</apiName><shortdesc>
     Вектор объектов MotionPath, каждый из которых содержит имя подлежащего анимации свойства и значения, которые данное свойство принимает в процессе анимации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$spark.effects.animation:MotionPath"/></apiValueDef><apiDesc>
     Вектор объектов MotionPath, каждый из которых содержит имя подлежащего анимации свойства и значения, которые данное свойство принимает в процессе анимации. Данный вектор имеет приоритет над любыми свойствами, объявленным в подклассах Animate. Например, если данный массив установлен непосредственно на эффект Move, то любые свойства эффекта Move (например, <codeph>xFrom</codeph>) будут игнорироваться. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Animate:repeatBehavior:get"><apiName>repeatBehavior</apiName><shortdesc>
     Поведение повторяющегося эффекта, то есть эффекта со значением repeatCount, равным 0 или &amp;gt; 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>RepeatBehavior.LOOP
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Поведение повторяющегося эффекта, то есть эффекта со значением <codeph>repeatCount</codeph> равным 0 или > 1. Этим значением может являться либо <codeph>RepeatBehavior.LOOP</codeph>, что означает повторение анимации в одном и том же порядке каждый раз, либо <codeph>RepeatBehavior.REVERSE</codeph>, что означает смену направления анимации при каждой итерации.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Resize"><apiName>Resize</apiName><shortdesc>
  Эффект Resize изменяет ширину, высоту или оба размера компонента в указанный интервал времени.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Resize&gt;</code> tag
  inherits all of the tag attributes of its superclass, 
  and adds the following tab attributes:</p>
  
  <pre>
  &lt;s:Resize
    id="ID"
    widthFrom="val"
    heightFrom="val"
    widthTo="val"
    heightTo="val"
    widthBy="val"
    heightBy="val"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект Resize изменяет ширину, высоту или оба размера компонента в указанный интервал времени. 
  
  <p>Если указаны только два из трех значений свойств <codeph>widthFrom</codeph>, <codeph>widthTo</codeph> и <codeph>widthBy</codeph>, то Flex вычисляет третье. Если указаны все три значения, то Flex игнорирует значение <codeph>widthBy</codeph>. Если указаны только значения <codeph>widthBy</codeph> или <codeph>widthTo</codeph>, то свойство <codeph>widthFrom</codeph> устанавливается в качестве текущей ширины объекта. Аналогично для значений свойств <codeph>heightFrom</codeph>, <codeph>heightTo</codeph> и <codeph>heightBy</codeph>.</p>
  
  </apiDesc><example conref="ResizeEffectExample.mxml"><swfblock conref="examples/ResizeEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#ResizeInstance"><linktext>spark.effects.supportClasses.ResizeInstance</linktext></link></related-links><apiConstructor id="spark.effects:Resize:Resize"><apiName>Resize</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Resize:heightBy"><apiName>heightBy</apiName><shortdesc> 
      Число пикселей, на которое должна быть изменена высота компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Число пикселей, на которое должна быть изменена высота компонента. Значения могут быть отрицательными.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:heightFrom"><apiName>heightFrom</apiName><shortdesc> 
      Начальная высота в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальная высота в пикселях. Если значение опущено, то Flex использует текущую высоту целевого объекта.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:heightTo"><apiName>heightTo</apiName><shortdesc> 
      Конечная высота целевого объекта в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечная высота целевого объекта в пикселях.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:widthBy"><apiName>widthBy</apiName><shortdesc> 
      Число пикселей, на которое изменится ширина целевого объекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Число пикселей, на которое изменится ширина целевого объекта. Значения могут быть отрицательными.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:widthFrom"><apiName>widthFrom</apiName><shortdesc> 
      Начальная ширина целевого объекта в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальная ширина целевого объекта в пикселях. Если значение опущено, то Flex использует текущую высоту.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:widthTo"><apiName>widthTo</apiName><shortdesc> 
      Конечная ширина целевого объекта в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечная ширина целевого объекта в пикселях.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Scale"><apiName>Scale</apiName><shortdesc>
  Эффект Scale масштабирует целевой объект по осям x и y относительно центра преобразования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Scale&gt;</code> tag
  inherits all of the tag attributes of its of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Scale
    id="ID"
    scaleXBy="val"
    scaleXFrom="val"
    scaleXTo="val"
    scaleYBy="val"
    scaleYFrom="val"
    scaleYTo="val"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект Scale масштабирует целевой объект по осям x и y относительно центра преобразования. Значение масштаба 2,0 означает, что объект был увеличен с коэффициентом 2, а значение 0,5 означает, что объект был уменьшен с коэффициентом 2. Значение масштаба 0,0 недопустимо.
 
  <p>Как и все эффекты, основанные на AnimateTransform, этот эффект может воздействовать только на подклассы UIComponent и GraphicElement, поскольку подобные эффекты зависят от специфичных функций преобразования данных классов. </p>
  
  </apiDesc><example conref="ScaleEffectExample.mxml"><swfblock conref="examples/ScaleEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Scale:Scale"><apiName>Scale</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Scale:scaleXBy"><apiName>scaleXBy</apiName><shortdesc>
      Коэффициент масштабирования объекта по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Коэффициент масштабирования объекта по оси x. Это дополнительный параметр, использующийся вместо одного из значений «с/до» для задания значения дельты, которое добавляется к значению «с» или для получения значения «с» вычитанием из значения «до».
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleXFrom"><apiName>scaleXFrom</apiName><shortdesc>
      Начальный коэффициент масштабирования по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Начальный коэффициент масштабирования по оси x. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleXTo"><apiName>scaleXTo</apiName><shortdesc>
      Конечный коэффициент масштабирования по оси x.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Конечный коэффициент масштабирования по оси x. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleYBy"><apiName>scaleYBy</apiName><shortdesc>
     Коэффициент масштабирования объекты по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     Коэффициент масштабирования объекты по оси y. Это дополнительный параметр, использующийся вместо одного из значений «с/до» для задания значения дельты, которое добавляется к значению «с» или для получения значения «с» вычитанием из значения «до».
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleYFrom"><apiName>scaleYFrom</apiName><shortdesc>
      Начальный коэффициент масштабирования по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Начальный коэффициент масштабирования по оси y. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleYTo"><apiName>scaleYTo</apiName><shortdesc>
      Конечный коэффициент масштабирования по оси y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Конечный коэффициент масштабирования по оси y. Значение масштаба 0,0 недопустимо.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:RemoveAction"><apiName>RemoveAction</apiName><shortdesc>
  Класс RemoveAction определяет эффект действия, соответствующий свойству RemoveChild определения состояния представления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:RemoveAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>

  <pre>
  &lt;s:RemoveAction
    <b>Properties</b>
    id="ID"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс RemoveAction определяет эффект действия, соответствующий свойству RemoveChild определения состояния представления. Эффект RemoveAction используется в процессе определения перехода для контроля изменения состояния представления, определенного свойством AddChild и происходящего в течение перехода.
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#RemoveActionInstance"><linktext>spark.effects.supportClasses.RemoveActionInstance</linktext></link><link href="" invalidHref="mx.states.RemoveChild.xml"><linktext>mx.states.RemoveChild</linktext></link></related-links><apiConstructor id="spark.effects:RemoveAction:RemoveAction"><apiName>RemoveAction</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.effects:SetAction"><apiName>SetAction</apiName><shortdesc>
  Класс SetAction определяет эффект действия, устанавливающего значение заданного свойства или стиля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:SetAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:SetAction
    <b>Properties</b>
    id="ID"
    property=""
    value=""
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс SetAction определяет эффект действия, устанавливающего значение заданного свойства или стиля. Эффект SetAction используется в процессе определения перехода для контроля изменения состояния представления, определенного изменением свойства или стиля и происходящего в течение перехода.
  
  </apiDesc><example conref="SetActionEffectExample.mxml"><swfblock conref="examples/SetActionEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#SetActionInstance"><linktext>spark.effects.supportClasses.SetActionInstance</linktext></link></related-links><apiConstructor id="spark.effects:SetAction:SetAction"><apiName>SetAction</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:SetAction:property"><apiName>property</apiName><shortdesc> 
      Имя изменяемого свойства.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> 
      Имя изменяемого свойства.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:SetAction:value"><apiName>value</apiName><shortdesc> 
      Новое значение свойства.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef><apiDesc> 
      Новое значение свойства. При запуске в процессе перехода и неуказанном значении, Flex определяет значение, основанное на данных настройках нового состояния представления.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateTransform"><apiName>AnimateTransform</apiName><shortdesc>
  Эффект AnimateTransform контролирует все связанные с преобразованием анимации целевых объектов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="repeatDelay"/><Exclude kind="property" name="repeatBehavior"/><Exclude kind="property" name="repeatCount"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateTransform&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateTransform
    <b>Properties</b>
    id="ID"
    applyChangesPostLayout="false"
    autoCenterTransform="false"
    transformX="0"
    transformY="0"
    transformZ="0"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект AnimateTransform контролирует все связанные с преобразованием анимации целевых объектов. Операции преобразования, такие как перемещение, масштабирование и вращение, объединены как операции, действующие параллельно во избежание возможных конфликтов при изменении значений накладывающихся свойств. Данный эффект выполняется путем объединения всех текущих эффектов преобразования целевого объекта в единственный экземпляр эффекта. Таким образом, несколько эффектов преобразования будут объединены в пределах одного и того же эффекта Parallel (эффекты преобразования в Sequence будут выполнены по отдельности).
 
  <p>При возникновении на внутреннем уровне такой комбинации нескольких эффектов преобразования она вызывает определенные ограничения, которые следует учитывать:</p>
 
  <ul>
    <li>Значение <codeph>transformCenter</codeph> для целевого объекта применяется глобально ко всем эффектам преобразования данного целевого объекта, таким образом, необходимо установить это значение одинаковым для всех целевых объектов.</li>
    <li>Эффекты преобразования игнорируют параметры повторения, так как эффекты любого одиночного эффекта Transform воздействуют на все эффекты Transform, выполняющиеся для одного и того же целевого объекта. Эффекты все же могут повторяться путем инкапсуляции их в CompositeEffect.</li>
    <li>Подклассы класса AnimateTransform предоставляют легкий способ проведения простых операций с эффектом преобразования, однако для обеспечения полнофункционального управления и обработки на уровне мелких структурных единиц основных времен и значений ключевого кадра используется эффект AnimateTransform.</li>
  </ul>
  
  <p>Дополнительное ограничение этого эффекта и его подклассов состоит в том, что целевой объект должен иметь тип UIComponent или GraphicElement (или подкласс этих классов), или это может быть любой другой объект, определенный подобным образом и реализующий функции <codeph>transformAround()</codeph> и <codeph>transformPointToParent()</codeph>.</p>
  
  <p>Этот эффект не предназначен для непосредственного использования, а, скорее, представляет общие функциональные возможности, используемые его подклассами. Для использования эффектов преобразования используйте эффекты подкласса (Move, Move3D, Scale, Scale3D, Rotate и Rotate3D).</p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateTransformInstance"><linktext>spark.effects.supportClasses.AnimateTransformInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateTransform:AnimateTransform"><apiName>AnimateTransform</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateTransform:autoCenterTransform"><apiName>autoCenterTransform</apiName><shortdesc>
      Указывает, применяется ли эффект преобразования относительно центра целевого объекта (width/2, height/2) при начале воспроизведения эффекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, применяется ли эффект преобразования относительно центра целевого объекта <codeph>(width/2, height/2)</codeph> при начале воспроизведения эффекта. Если данный флаг не установлен, то центр преобразования определяется как центр преобразования объекта (<codeph>transformX, transformY, transformZ</codeph>) и свойствами этого эффекта <codeph>transformX, transformY, transformZ</codeph>. Таким образом, центр преобразования является центром преобразования целевого объекта, и любое из свойств <codeph>transformX, transformY, transformZ</codeph> переопределяется аналогичными значениями эффекта, если они заданы.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformX"><linktext>mx.core.UIComponent.transformX</linktext></link><link href="" invalidHref="mx.core.xml#UIComponent/transformY"><linktext>mx.core.UIComponent.transformY</linktext></link><link href="" invalidHref="mx.core.xml#UIComponent/transformZ"><linktext>mx.core.UIComponent.transformZ</linktext></link><link href="spark.effects.xml#AnimateTransform/transformX"><linktext>transformX</linktext></link><link href="spark.effects.xml#AnimateTransform/transformY"><linktext>transformY</linktext></link><link href="spark.effects.xml#AnimateTransform/transformZ"><linktext>transformZ</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:transformX"><apiName>transformX</apiName><shortdesc>
      Устанавливает координату x для центра преобразования, в случае если она не переопределяется свойством autoCenterTransform.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Устанавливает координату x для центра преобразования, в случае если она не переопределяется свойством <codeph>autoCenterTransform</codeph>.
     
      <p>Если значение <codeph>autoCenterTransform</codeph> равно <codeph>false</codeph>, то центр преобразования определяется значением свойств целевого объекта <codeph>transformX</codeph>, <codeph>transformY</codeph> и <codeph>transformZ</codeph>, однако каждое из этих свойств может быть переопределено при установке соответствующих свойств данного эффекта.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformX"><linktext>mx.core.UIComponent.transformX</linktext></link><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>autoCenterTransform</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:transformY"><apiName>transformY</apiName><shortdesc>
      Устанавливает координату y для центра преобразования, в случае если она не переопределяется свойством autoCenterTransform.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Устанавливает координату y для центра преобразования, в случае если она не переопределяется свойством <codeph>autoCenterTransform</codeph>.
     
      <p>Если значение <codeph>autoCenterTransform</codeph> равно <codeph>false</codeph>, то центр преобразования определяется значением свойств целевого объекта <codeph>transformX</codeph>, <codeph>transformY</codeph> и <codeph>transformZ</codeph>, однако каждое из этих свойств может быть переопределено при установке соответствующих свойств данного эффекта.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformY"><linktext>mx.core.UIComponent.transformY</linktext></link><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>autoCenterTransform</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:transformZ"><apiName>transformZ</apiName><shortdesc>
      Устанавливает координату z для центра преобразования, в случае если она не переопределяется свойством autoCenterTransform.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Устанавливает координату z для центра преобразования, в случае если она не переопределяется свойством <codeph>autoCenterTransform</codeph>.
      
      <p>Если значение <codeph>autoCenterTransform</codeph> равно <codeph>false</codeph>, то центр преобразования определяется значением свойств целевого объекта <codeph>transformX</codeph>, <codeph>transformY</codeph> и <codeph>transformZ</codeph>, однако каждое из этих свойств может быть переопределено при установке соответствующих свойств данного эффекта.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformZ"><linktext>mx.core.UIComponent.transformZ</linktext></link><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>autoCenterTransform</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:applyChangesPostLayout:get"><apiName>applyChangesPostLayout</apiName><shortdesc> 
      Подклассы AnimateTransform используют этот флаг для указания, изменяет ли эффект значения преобразования, используемые диспетчером макетов, или он изменяет значения, используемые после запуска макета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc> 
      Подклассы AnimateTransform используют этот флаг для указания, изменяет ли эффект значения преобразования, используемые диспетчером макетов, или он изменяет значения, используемые после запуска макета.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateColor"><apiName>AnimateColor</apiName><shortdesc>
  Эффект AnimateColor анимирует изменение свойств цвета со временем, путем интерполяции между данными значениями цветов «с/до» или интерполяции по каналам.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateColor&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateColor
    <b>Properties</b>
    id="ID"
    colorFrom="no default"
    colorPropertyName="color"
    colorTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  Эффект AnimateColor анимирует изменение свойств цвета со временем, путем интерполяции между данными значениями цветов «с/до» или интерполяции по каналам. в процессе анимации свойств цвета используйте этот эффект, а не Animate или какой-либо другой эффект. 
  
  </apiDesc><example conref="AnimateColorEffectExample.mxml"><swfblock conref="examples/AnimateColorEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateColorInstance"><linktext>spark.effects.supportClasses.AnimateColorInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateColor:AnimateColor"><apiName>AnimateColor</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateColor:colorFrom"><apiName>colorFrom</apiName><shortdesc>
      Начальное значение цвета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>4.294967295E9</apiData><apiType value="uint"/><apiDefaultValue>0xFFFFFF
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Начальное значение цвета. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateColor:colorPropertyName"><apiName>colorPropertyName</apiName><shortdesc>
      Имя свойства цвета целевого объекта, изменяемого процессом анимации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>color</apiData><apiType value="String"/><apiDefaultValue>"color"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя свойства цвета целевого объекта, изменяемого процессом анимации. Свойство цвета может принимать 32-разрядное значение.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateColor:colorTo"><apiName>colorTo</apiName><shortdesc>
     Конечное значение цвета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>4.294967295E9</apiData><apiType value="uint"/><apiDefaultValue>0xFFFFFF
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Конечное значение цвета.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Rotate3D"><apiName>Rotate3D</apiName><shortdesc>
  Класс Rotate3D вращает целевой объект в трех измерениях вокруг осей x, y и z.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Rotate3D&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Rotate3D
    <b>Properties</b>
    id="ID"
    angleXFrom="no default"
    angleXTo="no default"
    angleYFrom="no default"
    angleYTo="no default"
    angleZFrom="no default"
    angleZTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform3D</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс Rotate3D вращает целевой объект в трех измерениях вокруг осей x, y и z. Вращение происходит вокруг центра преобразования целевого объекта. 
 
  <p>Как и все эффекты, основанные на AnimateTransform, этот эффект может воздействовать только на подклассы UIComponent и GraphicElement, поскольку подобные эффекты зависят от специфичных функций преобразования этих классов. Кроме того, эффекты преобразования, выполняющиеся параллельно на одном целевом объекте, выполняются как один экземпляр эффекта. Поэтому эффекты преобразования совместно используют центр преобразования, установленный любым из совместно действующих эффектов.</p>
  
  </apiDesc><example conref="Rotate3DEffectExample.mxml"><swfblock conref="examples/Rotate3DEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Rotate3D:Rotate3D"><apiName>Rotate3D</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, анимируемый с использованием данного эффекта.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Rotate3D:angleXFrom"><apiName>angleXFrom</apiName><shortdesc> 
      Начальный угол поворота целевого объекта вокруг оси x, выраженный в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальный угол поворота целевого объекта вокруг оси x, выраженный в градусах. Допустимыми являются значения от 0 до 360.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleXTo"><apiName>angleXTo</apiName><shortdesc> 
      Конечный угол поворота целевого объекта вокруг оси x, выраженный в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечный угол поворота целевого объекта вокруг оси x, выраженный в градусах. Значения могут быть как положительными, так и отрицательными.
     
      <p>Если значение <codeph>angleTo</codeph> меньше значения <codeph>angleFrom</codeph>, то целевой объект поворачивается против часовой стрелки. В противном случае вращение производится по часовой стрелке. Если требуется задать многократное вращение целевого объекта, в качестве этого значения следует установить большое положительное или малое отрицательное число.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleYFrom"><apiName>angleYFrom</apiName><shortdesc> 
      Начальный угол поворота целевого объекта вокруг оси y, выраженный в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальный угол поворота целевого объекта вокруг оси y, выраженный в градусах. Допустимыми являются значения от 0 до 360.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleYTo"><apiName>angleYTo</apiName><shortdesc> 
      Конечный угол поворота целевого объекта вокруг оси y, выраженный в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечный угол поворота целевого объекта вокруг оси y, выраженный в градусах. Значения могут быть как положительными, так и отрицательными.
     
      <p>Если значение <codeph>angleTo</codeph> меньше значения <codeph>angleFrom</codeph>, то целевой объект поворачивается против часовой стрелки. В противном случае вращение производится по часовой стрелке. Если требуется задать многократное вращение целевого объекта, в качестве этого значения следует установить большое положительное или малое отрицательное число.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleZFrom"><apiName>angleZFrom</apiName><shortdesc> 
      Начальный угол поворота целевого объекта вокруг оси z, выраженный в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Начальный угол поворота целевого объекта вокруг оси z, выраженный в градусах. Допустимыми являются значения от 0 до 360.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleZTo"><apiName>angleZTo</apiName><shortdesc> 
      Конечный угол поворота целевого объекта вокруг оси z, выраженный в градусах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      Конечный угол поворота целевого объекта вокруг оси z, выраженный в градусах. Значения могут быть как положительными, так и отрицательными.
     
      <p>Если значение <codeph>angleTo</codeph> меньше значения <codeph>angleFrom</codeph>, то целевой объект поворачивается против часовой стрелки. В противном случае вращение производится по часовой стрелке. Если требуется задать многократное вращение целевого объекта, в качестве этого значения следует установить большое положительное или малое отрицательное число.</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:WipeDirection"><apiName>WipeDirection</apiName><shortdesc>
  Класс WipeDirection определяет значения для свойства direction класса Wipe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс WipeDirection определяет значения для свойства <codeph>direction</codeph> класса Wipe.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.xml#Wipe"><linktext>spark.effects.Wipe</linktext></link></related-links><apiValue id="spark.effects:WipeDirection:DOWN"><apiName>DOWN</apiName><shortdesc>
      Направление стирания, начинающегося сверху и движущегося вниз
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>down</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Направление стирания, начинающегося сверху и движущегося вниз
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:WipeDirection:LEFT"><apiName>LEFT</apiName><shortdesc>
      Направление стирания, начинающегося справа и движущегося влево
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Направление стирания, начинающегося справа и движущегося влево
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:WipeDirection:RIGHT"><apiName>RIGHT</apiName><shortdesc>
      Направление стирания, начинающегося слева и движущегося вправо
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Направление стирания, начинающегося слева и движущегося вправо
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:WipeDirection:UP"><apiName>UP</apiName><shortdesc>
      Направление стирания, начинающегося снизу и движущегося вверх
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>up</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Направление стирания, начинающегося снизу и движущегося вверх
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>