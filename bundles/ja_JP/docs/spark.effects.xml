<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.effects"><apiName>spark.effects</apiName><apiDetail/><apiClassifier id="spark.effects:AnimateTransform3D"><apiName>AnimateTransform3D</apiName><shortdesc>
  AnimateTransform3D エフェクトは、AnimateTransform エフェクトの機能を 3D 変換プロパティに拡張します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateTransform&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateTransform
    <b>Properties</b>
    id="ID"
    applyChangesPostLayout="true"
    applyLocalProjection="false"
    autoCenterProjection="true"
    fieldOfView="no default"
    focalLength="no default"
    projectionX="0"
    projectionY="0"
    removeLocalProjectionWhenComplete="false"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  AnimateTransform3D エフェクトは、AnimateTransform エフェクトの機能を 3D 変換プロパティに拡張します。AnimateTransform と同様に、このエフェクトは直接使用するためのものではなく、サブクラスによって使用される共通機能を提供します。3D エフェクトを取得するには、サブクラスの Move3D、Rotate3D、および Scale3D を使用します。
 
  <p>AnimateTransform と同じように、このエフェクトの一部のプロパティは、実行時に組み合わされる他のすべての変換エフェクトと共有されます。具体的には、投影関係のプロパティ <codeph>applyLocalProjection</codeph>、<codeph>removeProjectionWhenComplete</codeph>、<codeph>autoCenterProjection</codeph>、<codeph>fieldOfView</codeph>、<codeph>focalLength</codeph>、<codeph>projectionX</codeph>、および <codeph>projectionY</codeph> はすべて、共有プロパティです。予測可能な結果を得るには、組み合わせたエフェクトで結合されるすべての 3D エフェクトで、これらのプロパティを同じように設定してください。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateTransformInstance"><linktext>spark.effects.supportClasses.AnimateTransformInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateTransform3D:AnimateTransform3D"><apiName>AnimateTransform3D</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateTransform3D:autoCenterProjection"><apiName>autoCenterProjection</apiName><shortdesc>
      3D エフェクトが投影ポイントをターゲットの中心に自動的に設定しないようにするには、false に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      3D エフェクトが投影ポイントをターゲットの中心に自動的に設定しないようにするには、<codeph>false</codeph> に設定します。その後、<codeph>projectionX</codeph> プロパティと <codeph>projectionY</codeph> プロパティを使用して、ターゲットの (0, 0) 座標からのオフセットとして投影ポイントを明示的に設定します。
     
      <p>3D エフェクトは、3D イメージをコンピューターの画面に表示するための 2D 表現にマッピングすることで動作します。投影ポイントは、視野の中心を定義し、ターゲットが 3 次元から画面に投影される方法を制御します。</p>
     
      <p>このプロパティは、<codeph>applyLocalProjection</codeph> が <codeph>true</codeph> に設定されているときにのみ使用されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:fieldOfView"><apiName>fieldOfView</apiName><shortdesc>
      3 次元の視野について、角度を 0 ～ 180 度で指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      3 次元の視野について、角度を <codeph>0</codeph> ～ <codeph>180</codeph> 度で指定します。この値は、0 以外の z 座標の 3 次元の表示オブジェクトに適用される、遠近法に基づく変形と歪みの強さを決定します。
     
      <p><codeph>0</codeph> に近い角度は、画面の 2 次元の x 座標と y 座標が、ほとんどまたはまったく歪みのない 3 次元の x 座標、y 座標、および z 座標とほぼ同じであることを意味します。つまり、小さい角度の場合、z 軸を下に移動する表示オブジェクトは、ほぼ同じサイズを維持し、ほとんど移動しません。 </p>
     
      <p><codeph>180</codeph> 度に近い値は、魚眼レンズ効果があります。つまり、<codeph>z</codeph> 値が <codeph>0</codeph> より小さい場合、その位置は拡大され、<codeph>z</codeph> 値が <codeph>0</codeph> より大きい場合、その位置は最小化されます。大きい角度の場合、z 軸を下に移動する表示オブジェクトは、サイズがすばやく変わり、大きく移動します。視野が <codeph>0</codeph> または <codeph>180</codeph> に設定されている場合、画面には何も表示されません。</p>
     
      <p>このプロパティは、<codeph>applyLocalProjection</codeph> が <codeph>true</codeph> に設定されているときにのみ使用されます。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link><link href="" invalidHref="flash.geom.PerspectiveProjection.xml"><linktext>flash.geom.PerspectiveProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:focalLength"><apiName>focalLength</apiName><shortdesc>
      視点または視点の原点（0,0,0）と z 軸上に位置する表示オブジェクトとの距離です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      視点または視点の原点（0,0,0）と z 軸上に位置する表示オブジェクトとの距離です。遠近法に基づく変形が行われるとき、視野の角度とステージの縦横比（ステージの幅をステージの高さで除算）を使用して、<codeph>focalLength</codeph> が動的に計算されます。
      
      <p>このプロパティは、<codeph>applyLocalProjection</codeph> が <codeph>true</codeph> に設定されているときにのみ使用されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link><link href="" invalidHref="flash.geom.PerspectiveProjection.xml"><linktext>flash.geom.PerspectiveProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:projectionX"><apiName>projectionX</apiName><shortdesc>
      ターゲットの (0, 0) 座標からの x 方向への投影ポイントのオフセットとして、投影ポイントを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      ターゲットの (0, 0) 座標からの x 方向への投影ポイントのオフセットとして、投影ポイントを設定します。デフォルトでは、3D エフェクトを適用すると、エフェクトは自動的に投影ポイントをターゲットの中心に設定します。エフェクトの <codeph>autoCenterProjection</codeph> プロパティを <codeph>false</codeph> に設定してこのデフォルトを無効にし、代わりに <codeph>projectionX</codeph> プロパティと <codeph>projectionY</codeph> プロパティを使用できます。
      
      <p>このプロパティは、<codeph>applyLocalProjection</codeph> が <codeph>true</codeph> に設定されているときにのみ使用されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:projectionY"><apiName>projectionY</apiName><shortdesc>
      ターゲットの (0, 0) 座標からの y 方向への投影ポイントのオフセットとして、投影ポイントを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      ターゲットの (0, 0) 座標からの y 方向への投影ポイントのオフセットとして、投影ポイントを設定します。デフォルトでは、3D エフェクトを適用すると、エフェクトは自動的に投影ポイントをターゲットの中心に設定します。エフェクトの <codeph>autoCenterProjection</codeph> プロパティを <codeph>false</codeph> に設定してこのデフォルトを無効にし、代わりに <codeph>projectionX</codeph> プロパティと <codeph>projectionY</codeph> プロパティを使用できます。
      
      <p>このプロパティは、<codeph>applyLocalProjection</codeph> が <codeph>true</codeph> に設定されているときにのみ使用されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:removeLocalProjectionWhenComplete"><apiName>removeLocalProjectionWhenComplete</apiName><shortdesc>
      true の場合、エフェクトは再生の完了時に、ターゲットコンポーネントの親から遠近法に基づく投影を削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、エフェクトは再生の完了時に、ターゲットコンポーネントの親から遠近法に基づく投影を削除します。デフォルトでは、遠近法に基づく投影は維持されます。
     
      <p>このプロパティは、<codeph>applyLocalProjection</codeph> が <codeph>true</codeph> に設定されているときにのみ使用されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/applyLocalProjection"><linktext>applyLocalProjection</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform3D:applyChangesPostLayout:get"><apiName>applyChangesPostLayout</apiName><shortdesc> 
      Layout Manager によって使用された変換値をエフェクトが変更するかどうか、つまりレイアウトが実行された後で使用された値を変更するかどうかを指定するために、AnimateTransform のサブクラスによって使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue></apiValueDef><apiDesc> 
      Layout Manager によって使用された変換値をエフェクトが変更するかどうか、つまりレイアウトが実行された後で使用された値を変更するかどうかを指定するために、AnimateTransform のサブクラスによって使用されます。Flex のレイアウトシステムでは 3D 変換プロパティが無視されるので、このクラスは <codeph>AnimateTransform.applyChangesPostLayout</codeph> プロパティをオーバーライドし、3D エフェクトのデフォルト値を <codeph>true</codeph> に設定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransform3D:applyLocalProjection:get"><apiName>applyLocalProjection</apiName><shortdesc>
      true の場合、投影関連の他のプロパティを使用して遠近法に基づく投影が作成され、再生開始時にターゲットコンポーネントの親に投影が適用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、投影関連の他のプロパティを使用して遠近法に基づく投影が作成され、エフェクトの再生開始時にターゲットコンポーネントの親に投影が適用されます。デフォルトでは、エフェクトが終了しても投影は親に残されたままになります。エフェクトの終了時に投影を削除するには、<codeph>removeLocalProjectionWhenComplete</codeph> を <codeph>true</codeph> に設定します。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform3D/removeLocalProjectionWhenComplete"><linktext>removeLocalProjectionWhenComplete</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateTransitionShader"><apiName>AnimateTransitionShader</apiName><shortdesc>
 AnimateTransitionShader エフェクトは、開始ステートを表すビットマップ（bitmapFrom）と終了ステートを表す別のビットマップ（bitmapTo）という、2 つのビットマップの間でトランジションをアニメーション化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><discouragedForProfiles><DiscouragedForProfile name="mobileDevice" owner="spark.effects:AnimateTransitionShader">
<description>
  AnimateTransitionShader エフェクトは、AIR モバイルアプリケーションではサポートされていない Pixel Bender を使用します。
 </description>
	</DiscouragedForProfile></discouragedForProfiles><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateTransitionShader&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateTransitionShader
    <b>Properties</b>
    id="ID"
    bitmapFrom="no default"
    bitmapTo="no default"
    shaderByteCode="no default"
    sahderProperties="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
 AnimateTransitionShader エフェクトは、開始ステートを表すビットマップ（<codeph>bitmapFrom</codeph>）と終了ステートを表す別のビットマップ（<codeph>bitmapTo</codeph>）という、2 つのビットマップの間でトランジションをアニメーション化します。
 
 <p>アニメーション化を行う際には、2 つのビットマップを入力として使用し、<codeph>shader</codeph> プロパティによって指定されたピクセルシェーダープログラムを実行します。ビットマップは、flash.display.BitmapData クラスのインスタンスによって表されます。Adobe Pixel Bender Toolkit を使用すると、独自のピクセルシェーダープログラムを作成できます。</p>
 
 <p>いずれかのビットマップが提供されなかった場合、トランジションでのターゲットの適切なステートから、またはトランジションでエフェクトが実行されていないのであれば直接ターゲットから、その値が動的に決定されます。トランジションでエフェクトが実行されて、そのステート変更中にターゲットオブジェクトが消えるか出現する場合、そのオブジェクトが存在していないときのステートを表すために、完全に透明なビットマップが使用されます。</p>
 
 <p>このエフェクトは、UIComponent または GraphicElement のいずれかであるターゲットに対してのみ実行できます。これは、オブジェクトのビットマップをキャプチャする際に、これらのクラスにのみ存在する、オブジェクトに関する情報が必要であるためです。</p>
 
 <p>エフェクトはビットマップに基づいており、基になるピクセルシェーダープログラムは両方のビットマップが同じサイズであることを前提としているため、エフェクトは両方のビットマップが同じサイズである場合にのみ正しく機能します。したがって、ターゲットオブジェクトのサイズまたは方向が変更されて境界ボックスのサイズが変わると、エフェクトが正しく再生されない可能性があります。</p>
 
 <p>このエフェクトとそのサブクラスは、Flex にある他のエフェクトとは異なり、単独で機能することが前提となっているため、他のエフェクトと同時に実行されると、意図した結果にならない可能性があります。この制約があるのは、前と後の両方のビットマップがエフェクトの開始前にキャプチャされるためです。したがって、これらのビットマップが計算された後に、ターゲットオブジェクトに対して、別のエフェクトによるターゲットのプロパティの変更といった何らかの処理が行われた場合、事前に計算されたビットマップではそれらの変更が反映されず、結果が期待どおりのものにならない可能性があります。これらのビットマップに基づくエフェクトを正しく再生するには、対象となるターゲットオブジェクトにおいてエフェクトを単独で再生する必要があります。</p>
  
  </apiDesc><example conref="AnimateTransitionShaderExample.mxml"><swfblock conref="examples/AnimateTransitionShaderExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.BitmapData.xml"><linktext>flash.display.BitmapData</linktext></link><link href="spark.effects.supportClasses.xml#AnimateTransitionShaderInstance"><linktext>spark.effects.supportClasses.AnimateTransitionShaderInstance</linktext></link><link href="spark.primitives.supportClasses.xml#GraphicElement"><linktext>spark.primitives.supportClasses.GraphicElement</linktext></link></related-links><apiConstructor id="spark.effects:AnimateTransitionShader:AnimateTransitionShader"><apiName>AnimateTransitionShader</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateTransitionShader:bitmapFrom"><apiName>bitmapFrom</apiName><shortdesc>
     このエフェクトの開始ステートを表すビットマップデータです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:BitmapData"/></apiValueDef><apiDesc>
     このエフェクトの開始ステートを表すビットマップデータです。このプロパティが設定されていない場合、エフェクトが再生されたときに、ターゲットオブジェクトのスナップショットを取得することによって、または、オブジェクトがトランジションの開始ビューステートに存在しないのであれば透明なビットマップを使用することによって、このプロパティが自動的に計算されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransitionShader:bitmapTo"><apiName>bitmapTo</apiName><shortdesc>
     このエフェクトの終了ステートを表すビットマップデータです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:BitmapData"/></apiValueDef><apiDesc>
     このエフェクトの終了ステートを表すビットマップデータです。このプロパティが設定されていない場合、エフェクトが再生されたときに、ターゲットオブジェクトのスナップショットを取得することによって、または、オブジェクトがトランジションの終了ビューステートに存在しないのであれば透明なビットマップを使用することによって、このプロパティが自動的に計算されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransitionShader:shaderByteCode"><apiName>shaderByteCode</apiName><shortdesc>
     2 つのビットマップ間をアニメーション化するためにエフェクトが使用する、ピクセルシェーダープログラムのバイトコードです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
     2 つのビットマップ間をアニメーション化するためにエフェクトが使用する、ピクセルシェーダープログラムのバイトコードです。このプロパティは、ByteArray、または ByteArray を表す Class（リソースを埋め込んだときの結果に相当）として表すことができます。
     
     <p>ピクセルシェーダープログラムでは任意の機能と入力を使用できますが、少なくとも 3 つの <codeph>image4</codeph> の入力が必要です。最初の入力は、ピクセルシェーダープログラムのコードでは使用しないようにする必要があります。これは、フィルター処理されたオブジェクトを最初の入力に割り当てるという、Flash の要件を満たすためにのみ存在します。この入力には、任意の名前を付けることができます。ピクセルシェーダープログラムで一切使用されていない入力は最適化されて除外される可能性があるため、作成するコードで少なくとも一度この入力を参照する必要があることに注意してください。</p>
     
     <p>このほか、前と後のビットマップイメージを表す <codeph>from</codeph> と <codeph>to</codeph> という、少なくとも 2 つの入力ビットマップを指定する必要があります。最後に、エフェクトの経過割合を含む、<codeph>progress</codeph> という名前の <codeph>float</codeph> パラメーターを 1 つ定義する必要があります。</p>
     
     <p>オプションパラメーターとして、<codeph>width</codeph> と <codeph>height</codeph> の 2 つを指定できます。これらが存在する場合、エフェクトターゲットの幅と高さが自動的に設定されます。</p>
     
     <p>Flash 用のピクセルシェーダープログラムの記述について詳しくは、Pixel Bender Toolkit のドキュメントを参照してください。また、Flex ソースコードの frameworks¥projects¥flex4¥src¥spark¥effects ディレクトリで、CrossFade.pbk ファイルのソースコードを確認することもできます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateTransitionShader:shaderProperties"><apiName>shaderProperties</apiName><shortdesc>
     再生の前にピクセルシェーダープログラムに渡される、パラメーターの名前と値のペアを表すマップです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
     再生の前にピクセルシェーダープログラムに渡される、パラメーターの名前と値のペアを表すマップです。例えば、Wipe.pbj においてシェーダーの <codeph>direction</codeph> という名前のパラメーターを Pixel Bender の pbj ファイルで設定するには、呼び出し元コードで次のようにします。
     
     <pre>
       [Embed(source="Wipe.pbj", mimeType="application/octet-stream")]
       private var WipeCodeClass:Class;
       var shaderEffect = new AnimateTransitionShader();
       shaderEffect.shaderByteCode = WipeCodeClass;
       shaderEffect.shaderProperties = {direction : 1};
     </pre>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Move3D"><apiName>Move3D</apiName><shortdesc>
  Move3D クラスは、ターゲットオブジェクトを x、y、および z 方向に移動します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Move3D&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Move3D
    <b>Properties</b>
    id="ID"
    xBy="no default"
    xFrom="no default"
    xTo="no default"
    yBy="no default"
    yFrom="no default"
    yTo="no default"
    zBy="no default"
    zFrom="no default"
    zTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform3D</apiBaseClassifier></apiClassifierDef><apiDesc>
  Move3D クラスは、ターゲットオブジェクトを x、y、および z 方向に移動します。Move3D エフェクトの x、y、z プロパティは、全体的な変換エフェクトの変換の中心に対する x、y、および z の変化を指定します。 
 
  <p>すべての AnimateTransform に基づくエフェクトと同様、このエフェクトは UIComponent と GraphicElement のサブクラスでのみ動作します。これは、それらのクラスにある特定の変換関数にこうしたエフェクトが依存しているためです。また、同じターゲット上で並行して実行する複数の変換エフェクトは、単一のエフェクトインスタンスとして実行されます。したがって、変換エフェクトは関係するエフェクトによって設定される変換の中心を共有します。</p>
  
  </apiDesc><example conref="Move3DEffectExample.mxml"><swfblock conref="examples/Move3DEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.xml#Move"><linktext>spark.effects.Move</linktext></link></related-links><apiConstructor id="spark.effects:Move3D:Move3D"><apiName>Move3D</apiName><shortdesc> 
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc> 
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Move3D:xBy"><apiName>xBy</apiName><shortdesc> 
      ターゲットの x 位置を変更するピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの x 位置を変更するピクセル数を表します。負の数値を指定することもできます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:xFrom"><apiName>xFrom</apiName><shortdesc> 
      ターゲットの x 位置の初期値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの x 位置の初期値です（ピクセル単位）。省略された場合、Flex は、開始ビューステートの値（エフェクトがトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:xTo"><apiName>xTo</apiName><shortdesc> 
      x の終了値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      x の終了値です（ピクセル単位）。省略された場合、Flex は、開始ステートの値（エフェクトがステートトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:yBy"><apiName>yBy</apiName><shortdesc> 
      ターゲットの y 位置を変更するピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの y 位置を変更するピクセル数を表します。負の値を指定することもできます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:yFrom"><apiName>yFrom</apiName><shortdesc> 
      ターゲットの y 位置の初期値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの y 位置の初期値です（ピクセル単位）。省略された場合、Flex は、開始ビューステートの値（エフェクトがトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:yTo"><apiName>yTo</apiName><shortdesc> 
      ターゲットの y 位置の終了値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの y 位置の終了値です（ピクセル単位）。省略された場合、Flex は、終了ビューステートの値（エフェクトがトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:zBy"><apiName>zBy</apiName><shortdesc> 
      ターゲットの z 位置を変更するピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの z 位置を変更するピクセル数を表します。負の数値を指定することもできます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:zFrom"><apiName>zFrom</apiName><shortdesc> 
      ターゲットの z 位置の初期値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの z 位置の初期値です。省略された場合、Flex は、開始ビューステートの値（エフェクトがトランジションで再生されている場合）またはターゲットの現在の値を使用します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move3D:zTo"><apiName>zTo</apiName><shortdesc> 
      ターゲットの z 位置の終了値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの z 位置の終了値です。省略された場合、Flex は、開始ステートの値（エフェクトがステートトランジションで再生されている場合）またはターゲットの現在の値を使用します。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Wipe"><apiName>Wipe</apiName><shortdesc>
  Wipe エフェクトは、最初のビットマップと 2 番目のビットマップの間において指定した方向でワイプを行うことによって、ビットマップトランジションエフェクトを実行します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><discouragedForProfiles><DiscouragedForProfile name="mobileDevice" owner="spark.effects:Wipe">
<description>
  Wipe エフェクトは、AIR モバイルアプリケーションではサポートされていない Pixel Bender を使用します。
 </description>
	</DiscouragedForProfile></discouragedForProfiles><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Wipe&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Wipe
    <b>Properties</b>
    id="ID"
    direction="right"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransitionShader</apiBaseClassifier></apiClassifierDef><apiDesc>
  Wipe エフェクトは、最初のビットマップと 2 番目のビットマップの間において指定した方向でワイプを行うことによって、ビットマップトランジションエフェクトを実行します。このワイプは、アニメーション実行期間にわたって、<codeph>direction</codeph> プロパティによって示された方向で 2 番目のビットマップを公開します。
 
  <p>エフェクトによってロードされるピクセルシェーダープログラムは、基になるビットマップエフェクトを実行します。別の Wipe ビヘイビアーを使用する場合は、カスタムのピクセルシェーダープログラムを指定する必要があります。ピクセルシェーダープログラムは、AnimateTransitionShader クラスの <codeph>shaderByteCode</codeph> プロパティで指定された制約を順守し、3 つの追加パラメーターを提供する必要があります。Wipe シェーダーで必要になる追加のパラメーターは次のとおりです。</p>
 
  <ul>
    <li>int の <codeph>direction</codeph> パラメーター。この値は、Wipe クラスの関連する String プロパティと同じ意味を持ちます。</li>
    <li>浮動小数点パラメーター <codeph>imageWidth</codeph> および <codeph>imageHeight</codeph>。 </li>
  </ul>
 
  <p>これらのすべてのパラメーターは、エフェクトの再生が開始されるときにシェーダーで設定されます。したがって、エフェクトが正しく機能するためには、パラメーターが存在しており、何らかの適切な役割を果たす必要があります。</p>
  
  </apiDesc><example conref="WipeExample.mxml"><swfblock conref="examples/WipeExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.xml#WipeDirection"><linktext>spark.effects.WipeDirection</linktext></link><link href="spark.effects.xml#AnimateTransitionShader"><linktext>spark.effects.AnimateTransitionShader</linktext></link><link href="spark.effects.xml#AnimateTransitionShader/shaderByteCode"><linktext>spark.effects.AnimateTransitionShader.shaderByteCode</linktext></link></related-links><apiConstructor id="spark.effects:Wipe:Wipe"><apiName>Wipe</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Wipe:direction"><apiName>direction</apiName><shortdesc>
      アニメーション実行期間にワイプが移動する方向は、WipeDirection.RIGHT、WipeDirection.LEFT、WipeDirection.UP、または WipeDirection.DOWN です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>right</apiData><apiType value="String"/><apiDefaultValue>WipeDirection.RIGHT
     
      </apiDefaultValue></apiValueDef><apiDesc>
      アニメーション実行期間にワイプが移動する方向は、<codeph>WipeDirection.RIGHT</codeph>、<codeph>WipeDirection.LEFT</codeph>、<codeph>WipeDirection.UP</codeph>、または <codeph>WipeDirection.DOWN</codeph> です。 
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#WipeDirection/RIGHT"><linktext>WipeDirection.RIGHT</linktext></link><link href="spark.effects.xml#WipeDirection/UP"><linktext>WipeDirection.UP</linktext></link><link href="spark.effects.xml#WipeDirection/LEFT"><linktext>WipeDirection.LEFT</linktext></link><link href="spark.effects.xml#WipeDirection/DOWN"><linktext>WipeDirection.DOWN</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.effects:CallAction"><apiName>CallAction</apiName><shortdesc>
 CallAction エフェクトは、args プロパティで指定されたオプション引数と共に target オブジェクトの functionName プロパティで指定された関数を呼び出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:CallAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:CallAction
    <b>Properties</b>
    id="ID"
    functionName="no default"
    args="no default"
  /&gt;
  </pre>
  
 ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
 CallAction エフェクトは、<codeph>args</codeph> プロパティで指定されたオプション引数と共に <codeph>target</codeph> オブジェクトの <codeph>functionName</codeph> プロパティで指定された関数を呼び出します。このエフェクトは、組み合わせたエフェクトの一部として関数呼び出しを含めることができるエフェクトシーケンスで役立ちます。
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#CallActionInstance"><linktext>spark.effects.supportClasses.CallActionInstance</linktext></link></related-links><apiConstructor id="spark.effects:CallAction:CallAction"><apiName>CallAction</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:CallAction:args"><apiName>args</apiName><shortdesc> 
     このエフェクトによって呼び出される関数に渡される引数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc> 
     このエフェクトによって呼び出される関数に渡される引数です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:CallAction:functionName"><apiName>functionName</apiName><shortdesc> 
     このエフェクトを再生するときにターゲットで呼び出される関数の名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> 
     このエフェクトを再生するときにターゲットで呼び出される関数の名前です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AddAction"><apiName>AddAction</apiName><shortdesc>
  AddAction クラスでは、ビューステートを定義する AddChild プロパティに対応したアクションエフェクトを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AddAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AddAction
    <b>Properties</b>
    id="ID"
    index="-1"
    position="index"
    relativeTo=""
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  AddAction クラスでは、ビューステートを定義する <codeph>AddChild</codeph> プロパティに対応したアクションエフェクトを定義します。AddAction エフェクトをトランジションの定義範囲で使用することにより、AddChild プロパティで定義されたビューステートの変化がトランジションで発生する時期を制御できます。
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AddActionInstance"><linktext>spark.effects.supportClasses.AddActionInstance</linktext></link><link href="" invalidHref="mx.states.AddChild.xml"><linktext>mx.states.AddChild</linktext></link></related-links><apiConstructor id="spark.effects:AddAction:AddAction"><apiName>AddAction</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AddAction:AFTER"><apiName>AFTER</apiName><shortdesc>
     relativeTo プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>after</apiData><apiType value="String"/></apiValueDef><apiDesc>
     <codeph>relativeTo</codeph> プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:BEFORE"><apiName>BEFORE</apiName><shortdesc>
     relativeTo プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>before</apiData><apiType value="String"/></apiValueDef><apiDesc>
     <codeph>relativeTo</codeph> プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:FIRST_CHILD"><apiName>FIRST_CHILD</apiName><shortdesc>
     relativeTo プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>firstChild</apiData><apiType value="String"/></apiValueDef><apiDesc>
     <codeph>relativeTo</codeph> プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:INDEX"><apiName>INDEX</apiName><shortdesc>
     relativeTo プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>index</apiData><apiType value="String"/></apiValueDef><apiDesc>
     <codeph>relativeTo</codeph> プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:LAST_CHILD"><apiName>LAST_CHILD</apiName><shortdesc>
     relativeTo プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lastChild</apiData><apiType value="String"/></apiValueDef><apiDesc>
     <codeph>relativeTo</codeph> プロパティによって指定されたオブジェクトを基準として、アイテムを追加する位置を指定するために使用される定数です。
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/position"><linktext>position</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:index"><apiName>index</apiName><shortdesc> 
      親の中で子が持つインデックスを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc> 
      親の中で子が持つインデックスを表します。 値が -1 の場合、親の最後の子として子が追加されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AddAction:position"><apiName>position</apiName><shortdesc> 
      relativeTo プロパティで指定されたオブジェクトを基準にした、表示リスト内での子の位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>index</apiData><apiType value="String"/><apiDefaultValue>AddAction.INDEX
      </apiDefaultValue></apiValueDef><apiDesc> 
      <codeph>relativeTo</codeph> プロパティで指定されたオブジェクトを基準にした、表示リスト内での子の位置です。 有効な値は、<codeph>AddAction.BEFORE</codeph>、<codeph>AddAction.AFTER</codeph>、<codeph>AddAction.FIRST_CHILD</codeph>、<codeph>AddAction.LAST_CHILD</codeph> および <codeph>AddAction.INDEX</codeph> です。<codeph>AddAction.INDEX</codeph> は、子の位置を決定するために <codeph>index</codeph> プロパティを使用することを指定します。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AddAction/BEFORE"><linktext>BEFORE</linktext></link><link href="spark.effects.xml#AddAction/AFTER"><linktext>AFTER</linktext></link><link href="spark.effects.xml#AddAction/FIRST_CHILD"><linktext>FIRST_CHILD</linktext></link><link href="spark.effects.xml#AddAction/LAST_CHILD"><linktext>LAST_CHILD</linktext></link><link href="spark.effects.xml#AddAction/INDEX"><linktext>INDEX</linktext></link></related-links></apiValue><apiValue id="spark.effects:AddAction:relativeTo"><apiName>relativeTo</apiName><shortdesc> 
      子コンポーネントが追加される位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObjectContainer"/></apiValueDef><apiDesc> 
      子コンポーネントが追加される位置です。 デフォルトでは、ビューステートを定義したもののうち <codeph>AddChild</codeph> プロパティの定義からこの値が決定されます。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateFilter"><apiName>AnimateFilter</apiName><shortdesc>
  AnimateFilter エフェクトは mx.filters.IBitmapFilter インスタンスをターゲットに適用し、フィルターのプロパティを値間でアニメーション化できるようにします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateFilter&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateFilter
    <b>Properties</b>
    id="ID"
    bitmapFilter="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  AnimateFilter エフェクトは mx.filters.IBitmapFilter インスタンスをターゲットに適用し、フィルターのプロパティを値間でアニメーション化できるようにします。ターゲットのプロパティをアニメーション化するエフェクトとは異なり、AnimateFilter エフェクトは、ターゲットに適用されるフィルターのプロパティをアニメーション化します。
 
  <p>このエフェクトと共に使用できるフィルターは、spark.filters パッケージで定義されています。 一般的なフィルターは、DropShadowFilter、GlowFilter、BlurFilter および ShaderFilter です。</p>
 
  <p>アニメーション化するフィルターのプロパティを定義するには、SimpleMotionPath オブジェクトの配列を AnimateFilter エフェクトの <codeph>motionPath</codeph> プロパティに渡します。各 SimpleMotionPath オブジェクトは、フィルターのプロパティ、プロパティの開始値およびプロパティの終了値を定義します。</p>
  
  </apiDesc><example conref="AnimateFilterEffectExample.mxml"><swfblock conref="examples/AnimateFilterEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateFilterInstance"><linktext>spark.effects.supportClasses.AnimateFilterInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateFilter:AnimateFilter"><apiName>AnimateFilter</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
     
      </apiDesc></apiParam><apiParam><apiItemName>filter</apiItemName><apiType value="mx.filters:IBitmapFilter"/><apiData>null</apiData><apiDesc>ターゲットに適用するフィルターです。このエフェクトと共に使用できるフィルターは、spark.filters パッケージで定義されています。 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateFilter:bitmapFilter"><apiName>bitmapFilter</apiName><shortdesc>
      適用およびアニメーション化する IBitmapFilter インスタンスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.filters:IBitmapFilter"/></apiValueDef><apiDesc>
      適用およびアニメーション化する IBitmapFilter インスタンスです。
     
      <p>このエフェクトと共に使用できるフィルターは、spark.filters パッケージで定義されています。 一般的なフィルターは、DropShadowFilter、GlowFilter、BlurFilter および ShaderFilter です。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Rotate"><apiName>Rotate</apiName><shortdesc>
  Rotate エフェクトは、x、y 平面で変換の中心を基準としてターゲットオブジェクトを回転させます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Rotate&gt;</code> tag
  inherits all of the tag attributes of its of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Rotate
    id="ID"
    angleBy="val"
    angleFrom="val"
    angleTo="val"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Rotate エフェクトは、x、y 平面で変換の中心を基準としてターゲットオブジェクトを回転させます。 
 
  <p>角度の値（angleFrom、angleTo または angleBy）の 2 つを指定すると、Flex によって 3 つ目の値が計算されます。3 つの値をすべて指定すると、<codeph>angleBy</codeph> の値が無視されます。</p>
 
  <p>すべての AnimateTransform に基づくエフェクトと同様、このエフェクトは UIComponent と GraphicElement のサブクラスでのみ動作します。これは、それらのクラスにある特定の変換関数にこうしたエフェクトが依存しているためです。 </p>
  
  </apiDesc><example conref="RotateEffectExample.mxml"><swfblock conref="examples/RotateEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Rotate:Rotate"><apiName>Rotate</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Rotate:angleBy"><apiName>angleBy</apiName><shortdesc> 
      ターゲットオブジェクトを回転させる角度です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットオブジェクトを回転させる角度です。負の値を指定することもできます。
     
      <p><codeph>angleBy</codeph> が負の値である場合、ターゲットは反時計回りに回転します。そうでない場合は、時計回りに回転します。 ターゲットを複数回回転させる場合は、この値を大きい正数または小さい負数に設定します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate:angleFrom"><apiName>angleFrom</apiName><shortdesc> 
      ターゲットオブジェクトの回転の開始角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットオブジェクトの回転の開始角度です（度単位）。有効な値の範囲は 0 ～ 360 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate:angleTo"><apiName>angleTo</apiName><shortdesc> 
      ターゲットオブジェクトの回転の終了角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットオブジェクトの回転の終了角度です（度単位）。正数または負数を指定できます。
     
      <p><codeph>angleTo</codeph> の値が <codeph>angleFrom</codeph> の値以下の場合、ターゲットは反時計回りに回転します。 そうでない場合は、時計回りに回転します。 ターゲットを複数回回転させる場合は、この値を大きい正数または小さい負数に設定します。</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Scale3D"><apiName>Scale3D</apiName><shortdesc>
  Scale3D クラスは、変換の中心を中心にして 3 次元でターゲットオブジェクトを拡大縮小します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Scale3D&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Scale3D
    <b>Properties</b>
    id="ID"
    scaleXBy="no default"
    scaleXFrom="no default"
    scaleXTo="no default"
    scaleYBy="no default"
    scaleYFrom="no default"
    scaleYTo="no default"
    scaleZBy="no default"
    scaleZFrom="no default"
    scaleZTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform3D</apiBaseClassifier></apiClassifierDef><apiDesc>
  Scale3D クラスは、変換の中心を中心にして 3 次元でターゲットオブジェクトを拡大縮小します。拡大 / 縮小が 2.0 の場合は、オブジェクトが 2 倍に拡大されます。拡大 /縮小が 0.5 の場合は、オブジェクトが 2 分の 1 に縮小されます。拡大 / 縮小値 0.0 は無効です。
 
  <p>すべての AnimateTransform に基づくエフェクトと同様、このエフェクトは UIComponent と GraphicElement のサブクラスでのみ動作します。これは、それらのクラスにある特定の変換関数にこうしたエフェクトが依存しているためです。また、同じターゲット上で並行して実行する複数の変換エフェクトは、単一のエフェクトインスタンスとして実行されます。したがって、変換エフェクトは関係するエフェクトによって設定される変換の中心を共有します。</p>
  
  </apiDesc><example conref="Scale3DEffectExample.mxml"><swfblock conref="examples/Scale3DEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Scale3D:Scale3D"><apiName>Scale3D</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Scale3D:scaleXBy"><apiName>scaleXBy</apiName><shortdesc>
      オブジェクトを x 方向に拡大または縮小するための倍率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      オブジェクトを x 方向に拡大または縮小するための倍率です。これは、from 値に加算するデルタ、または to 値から減算することによって from 値を得るデルタを指定するために、他方の from 値または to 値の代わりに使用できる、オプションのパラメーターです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleXFrom"><apiName>scaleXFrom</apiName><shortdesc>
      開始時の x 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      開始時の x 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleXTo"><apiName>scaleXTo</apiName><shortdesc>
      終了時の x 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      終了時の x 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleYBy"><apiName>scaleYBy</apiName><shortdesc>
     オブジェクトを y 方向に拡大または縮小するための倍率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     オブジェクトを y 方向に拡大または縮小するための倍率です。これは、from 値に加算するデルタ、または to 値から減算することによって from 値を得るデルタを指定するために、他方の from 値または to 値の代わりに使用できる、オプションのパラメーターです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleYFrom"><apiName>scaleYFrom</apiName><shortdesc>
      開始時の y 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      開始時の y 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleYTo"><apiName>scaleYTo</apiName><shortdesc>
      終了時の y 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      終了時の y 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleZBy"><apiName>scaleZBy</apiName><shortdesc>
      オブジェクトを z 方向に拡大または縮小するための倍率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      オブジェクトを z 方向に拡大または縮小するための倍率です。これは、from 値に加算するデルタ、または to 値から減算することによって from 値を得るデルタを指定するために、他方の from 値または to 値の代わりに使用できる、オプションのパラメーターです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleZFrom"><apiName>scaleZFrom</apiName><shortdesc>
      開始時の z 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      開始時の z 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale3D:scaleZTo"><apiName>scaleZTo</apiName><shortdesc>
      終了時の z 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      終了時の z 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Move"><apiName>Move</apiName><shortdesc>
  Move エフェクトは、x 方向および y 方向にターゲットオブジェクトを移動します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Move&gt;</code> tag
  inherits all of the tag attributes of its of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Move
    id="ID"
    xBy="val"
    xFrom="val" 
    xTo="val"
    yBy="val"
    yFrom="val"
    yTo="val"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Move エフェクトは、x 方向および y 方向にターゲットオブジェクトを移動します。Move エフェクトの x および y プロパティは、全体的な変換が行われる変換の中心に対する x および y の変化を指定します。したがって、例えば、<codeph>autoCenterTransform</codeph> プロパティが設定された場合、このエフェクトの from/to/by 値は、ターゲットの（x,y）座標ではなくターゲットの中心をどの程度移動するかを定義します。
 
  <p>すべての変換に基づくエフェクトと同様、このエフェクトは UIComponent と GraphicElement のサブクラスでのみ動作します。</p>
  
  </apiDesc><example conref="MoveEffectExample.mxml"><swfblock conref="examples/MoveEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Move:Move"><apiName>Move</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Move:xBy"><apiName>xBy</apiName><shortdesc> 
      ターゲットの x 位置を変更するピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの x 位置を変更するピクセル数を表します。負の数値を指定することもできます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:xFrom"><apiName>xFrom</apiName><shortdesc> 
      ターゲットの x 位置の初期値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの x 位置の初期値です（ピクセル単位）。省略された場合、Flex は、開始ビューステートの値（エフェクトがトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:xTo"><apiName>xTo</apiName><shortdesc> 
      x の終了値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      x の終了値です（ピクセル単位）。省略された場合、Flex は、開始ステートの値（エフェクトがステートトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:yBy"><apiName>yBy</apiName><shortdesc> 
      ターゲットの y 位置を変更するピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの y 位置を変更するピクセル数を表します。負の値を指定することもできます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:yFrom"><apiName>yFrom</apiName><shortdesc> 
      ターゲットの y 位置の初期値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの y 位置の初期値です（ピクセル単位）。省略された場合、Flex は、開始ビューステートの値（エフェクトがトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Move:yTo"><apiName>yTo</apiName><shortdesc> 
      ターゲットの y 位置の終了値です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの y 位置の終了値です（ピクセル単位）。省略された場合、Flex は、終了ビューステートの値（エフェクトがトランジションで再生されている場合）またはターゲットの現在の値を使用します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:CrossFade"><apiName>CrossFade</apiName><shortdesc>
 CrossFade エフェクトは、最初のビットマップと 2 番目のビットマップの間においてクロスフェードを行うことによって、ビットマップトランジションエフェクトを実行します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><discouragedForProfiles><DiscouragedForProfile name="mobileDevice" owner="spark.effects:CrossFade">
<description>
  CrossFade エフェクトは、AIR モバイルアプリケーションではサポートされていない Pixel Bender を使用します。
 </description>
	</DiscouragedForProfile></discouragedForProfiles><DefaultProperty name="motionPaths"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransitionShader</apiBaseClassifier></apiClassifierDef><apiDesc>
 CrossFade エフェクトは、最初のビットマップと 2 番目のビットマップの間において<i>クロスフェード</i>を行うことによって、ビットマップトランジションエフェクトを実行します。クロスフェードは、アニメーションの継続時間にわたって 2 つのビットマップをブレンドします。
 
 <p>アニメーションの任意の時点において、アニメーションの経過イージング割合が <codeph>f</codeph> であり、最初のビットマップと 2 番目のビットマップのピクセル値が <codeph>v1</codeph> と <codeph>v2</codeph> である場合、イメージに含まれる任意のピクセルを表す結果のピクセル値 <codeph>v</codeph> は次のようになります。</p>
 
 <pre>v = v1 * (1 - f) + v2 * f</pre>
 
 <p>ビットマップエフェクトは、エフェクトによってロードされたピクセルシェーダープログラムによって実行されます。<codeph>shaderByteCode</codeph> プロパティにピクセルシェーダープログラムを指定することによって、異なるクロスフェードビヘイビアーを指定できます。そのピクセルシェーダープログラムは、AnimateTransitionShader エフェクトで定義された要件を満たす必要があります。 </p>
 
 </apiDesc><example conref="CrossFadeExample.mxml"><swfblock conref="examples/CrossFadeExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.xml#AnimateTransitionShader"><linktext>spark.effects.AnimateTransitionShader</linktext></link><link href="spark.effects.xml#AnimateTransitionShader/shaderByteCode"><linktext>spark.effects.AnimateTransitionShader.shaderByteCode</linktext></link></related-links><apiConstructor id="spark.effects:CrossFade:CrossFade"><apiName>CrossFade</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.effects:Fade"><apiName>Fade</apiName><shortdesc>
  Fade エフェクトは、コンポーネントの alpha プロパティをアニメーション化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Fade&gt;</code> tag
  inherits the tag attributes of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Fade 
    id="ID"
    alphaFrom="val"
    alphaTo="val"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  Fade エフェクトは、コンポーネントの <codeph>alpha</codeph> プロパティをアニメーション化します。<codeph>visible</codeph> プロパティが false に設定されているオブジェクトにおいて手動で再生され（トランジションの外側）、<codeph>alpha</codeph> をゼロからゼロ以外の値にアニメーション化するように指示された場合、フェードインの副次的な影響として <codeph>visible</codeph> を true に設定します。トランジションの一部として実行された場合は、状態で指定される値を使用しますが、エフェクトに対して <codeph>alphaFrom</codeph> および <codeph>alphaTo</codeph> が指定されていない場合は、<codeph>visible</codeph> プロパティを使用し、前後の状態でオブジェクトに親があるかどうかに応じて、<codeph>alpha</codeph> をアニメーション化する開始と終了の値を決定できます。
  
  </apiDesc><example conref="FadeEffectExample.mxml"><swfblock conref="examples/FadeEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#FadeInstance"><linktext>spark.effects.supportClasses.FadeInstance</linktext></link></related-links><apiConstructor id="spark.effects:Fade:Fade"><apiName>Fade</apiName><shortdesc>
     コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc>
     コンストラクターです。 
    
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Fade:alphaFrom"><apiName>alphaFrom</apiName><shortdesc> 
      alpha プロパティの初期値は 0.0 ～ 1.0 であり、0.0 は透明、1.0 は完全に不透明です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      <codeph>alpha</codeph> プロパティの初期値は 0.0 ～ 1.0 であり、0.0 は透明、1.0 は完全に不透明です。 
     
      <p>エフェクトによってターゲットコンポーネントが非表示になる場合、デフォルト値はターゲットの <codeph>alpha</codeph> プロパティの現在値です。 エフェクトによってターゲットコンポーネントが表示される場合、デフォルト値は 0.0 です。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Fade:alphaTo"><apiName>alphaTo</apiName><shortdesc> 
      alpha プロパティの終了値は 0.0 ～ 1.0 であり、0.0 は透明、1.0 は完全に不透明です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      <codeph>alpha</codeph> プロパティの終了値は 0.0 ～ 1.0 であり、0.0 は透明、1.0 は完全に不透明です。
     
      <p>エフェクトによってターゲットコンポーネントが非表示になる場合、デフォルト値は 0.0 です。エフェクトによってターゲットコンポーネントが表示される場合、デフォルト値はターゲットの <codeph>alpha</codeph> プロパティの現在値です。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Animate"><apiName>Animate</apiName><shortdesc>
 この Animate エフェクトは、任意のプロパティセットを値間でアニメーション化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="suspendBackgroundProcessing"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Animate&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Animate
    <b>Properties</b>
    id="ID"
    disableLayout="false"
    easer="{spark.effects.easing.Sine(.5)}"
    interpolator="NumberInterpolator"
    motionPaths="no default"
    repeatBehavior="loop"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
 この Animate エフェクトは、任意のプロパティセットを値間でアニメーション化します。<codeph>motionPaths</codeph> プロパティを設定することによって、アニメーション化するプロパティと値を指定します。 
  
  </apiDesc><example conref="AnimateEffectExample.mxml"><swfblock conref="examples/AnimateEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateInstance"><linktext>spark.effects.supportClasses.AnimateInstance</linktext></link></related-links><adobeApiEvent id="spark.effects:Animate_mx.events.EffectEvent.EFFECT_REPEAT_effectRepeat"><apiName>effectRepeat</apiName><shortdesc>
 複数回繰り返される任意のエフェクトにおいて、エフェクトが新しい繰り返し処理を開始すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.EffectEvent.EFFECT_REPEAT</apiEventType><adobeApiEventClassifier>mx.events.EffectEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 複数回繰り返される任意のエフェクトにおいて、エフェクトが新しい繰り返し処理を開始すると送出されます。同時に、Flex によって、エフェクトの <codeph>effectUpdate</codeph> イベントも送出されます。
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.effects:Animate_mx.events.EffectEvent.EFFECT_UPDATE_effectUpdate"><apiName>effectUpdate</apiName><shortdesc>
 エフェクトでターゲットが更新されるたびに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.EffectEvent.EFFECT_UPDATE</apiEventType><adobeApiEventClassifier>mx.events.EffectEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 エフェクトでターゲットが更新されるたびに送出されます。
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.effects:Animate:Animate"><apiName>Animate</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Animate:disableLayout:get"><apiName>disableLayout</apiName><shortdesc>
     true の場合、エフェクトはそのターゲットの親コンテナでのレイアウトを無効にし、コンテナの autoLayout プロパティを false に設定して、ターゲットオブジェクトでのすべてのレイアウト制約も無効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
     </apiDefaultValue></apiValueDef><apiDesc>
     <codeph>true</codeph> の場合、エフェクトはそのターゲットの親コンテナでのレイアウトを無効にし、コンテナの <codeph>autoLayout</codeph> プロパティを false に設定して、ターゲットオブジェクトでのすべてのレイアウト制約も無効にします。これらのプロパティは、エフェクトの終了時に復元されます。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Animate:easer:get"><apiName>easer</apiName><shortdesc>
     このエフェクトのイージングビヘイビアーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.effects.easing:IEaser</apiValueClassifier><apiDefaultValue>spark.effects.easing.Sine(.5)
     
     </apiDefaultValue></apiValueDef><apiDesc>
     このエフェクトのイージングビヘイビアーです。この IEaser オブジェクトは、アニメーションの経過割合をイージング割合に変換するために使用され、これが後でその経過イージング割合で値を計算するために使用されます。
     
     <p>エフェクトレベルと Keyframe レベルの両方にイージングがある場合があります（Keyframe が MotionPath 構造体で使用される値/時間を保持している場合）。これらのイージングビヘイビアーは相互に作成されます。<codeph>easer</codeph> はエフェクト全体のイージングを制御します。Keyframe はアニメーションの特定の間隔におけるイージングを制御します。デフォルトでは、Animate に対するイージングは非線形です（Sine(.5)）。Keyframe に対するイージングは線形です。代わりにキーフレームレベルでイージングのあるエフェクトが必要な場合は、エフェクトのイージングを線形に設定し、Keyframe でイージングを具体的に設定できます。</p>
     
     </apiDesc></apiValueDetail><related-links><link href="spark.effects.easing.xml#Sine"><linktext>spark.effects.easing.Sine</linktext></link></related-links></apiValue><apiValue id="spark.effects:Animate:interpolator:get"><apiName>interpolator</apiName><shortdesc>
     プロパティの開始値と終了値の間の値を計算するためにこのエフェクトによって使用されるインターポレーターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.effects.interpolation:IInterpolator</apiValueClassifier></apiValueDef><apiDesc>
     プロパティの開始値と終了値の間の値を計算するためにこのエフェクトによって使用されるインターポレーターです。デフォルトでは、補間は NumberInterpolator クラスによって処理されます。開始値と終了値が配列またはベクターになっている場合は、MultiValueInterpolator クラスによって処理されます。他の型の補間、または異なる方法で補間する必要がある Number（カラーチャンネル情報を保持する <codeph>uint</codeph> 値など）の補間は、異なるインターポレーターを提供することによって処理できます。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.effects.interpolation.xml#NumberInterpolator"><linktext>spark.effects.interpolation.NumberInterpolator</linktext></link><link href="spark.effects.interpolation.xml#MultiValueInterpolator"><linktext>spark.effects.interpolation.MultiValueInterpolator</linktext></link></related-links></apiValue><apiValue id="spark.effects:Animate:motionPaths:get"><apiName>motionPaths</apiName><shortdesc>
     MotionPath オブジェクトのベクターです。各オブジェクトには、アニメーション化するプロパティの名前と、アニメーション実行期間においてプロパティが受け取る値が保持されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$spark.effects.animation:MotionPath"/></apiValueDef><apiDesc>
     MotionPath オブジェクトのベクターです。各オブジェクトには、アニメーション化するプロパティの名前と、アニメーション実行期間においてプロパティが受け取る値が保持されます。このベクターは、Animate のサブクラスで宣言されたどのプロパティよりも優先されます。例えば、この配列が Move エフェクトに対して直接設定されている場合、<codeph>xFrom</codeph> などの Move エフェクトのプロパティはすべて無視されます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Animate:repeatBehavior:get"><apiName>repeatBehavior</apiName><shortdesc>
     繰り返すエフェクト、つまり repeatCount が 0 であるか 1 よりも大きいエフェクトのビヘイビアーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>RepeatBehavior.LOOP
      
      </apiDefaultValue></apiValueDef><apiDesc>
     繰り返すエフェクト、つまり <codeph>repeatCount</codeph> が 0 であるか 1 よりも大きいエフェクトのビヘイビアーです。この値は、<codeph>RepeatBehavior.LOOP</codeph>（毎回同じ順番でアニメーションを繰り返す）または <codeph>RepeatBehavior.REVERSE</codeph>（繰り返しのたびにアニメーションの方向を逆にする）である必要があります。
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Resize"><apiName>Resize</apiName><shortdesc>
  Resize エフェクトは、指定された時間間隔でコンポーネントの幅、高さ、あるいはその両方の寸法を変更します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Resize&gt;</code> tag
  inherits all of the tag attributes of its superclass, 
  and adds the following tab attributes:</p>
  
  <pre>
  &lt;s:Resize
    id="ID"
    widthFrom="val"
    heightFrom="val"
    widthTo="val"
    heightTo="val"
    widthBy="val"
    heightBy="val"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  Resize エフェクトは、指定された時間間隔でコンポーネントの幅、高さ、あるいはその両方の寸法を変更します。 
  
  <p><codeph>widthFrom</codeph>、<codeph>widthTo</codeph> および <codeph>widthBy</codeph> の 3 つのプロパティのうちのいずれか 2 つを指定すると、残りの 1 つは Flex によって自動的に計算されます。 3 つの値をすべて指定すると、<codeph>widthBy</codeph> の値が無視されます。 <codeph>widthBy</codeph> または <codeph>widthTo</codeph> の値のみを指定すると、<codeph>widthFrom</codeph> プロパティはオブジェクトの現在の幅に設定されます。 <codeph>heightFrom</codeph>、<codeph>heightTo</codeph> および <codeph>heightBy</codeph> の 3 つのプロパティ値についても同様です。</p>
  
  </apiDesc><example conref="ResizeEffectExample.mxml"><swfblock conref="examples/ResizeEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#ResizeInstance"><linktext>spark.effects.supportClasses.ResizeInstance</linktext></link></related-links><apiConstructor id="spark.effects:Resize:Resize"><apiName>Resize</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Resize:heightBy"><apiName>heightBy</apiName><shortdesc> 
      コンポーネントの高さを変更するピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      コンポーネントの高さを変更する際のピクセル数を表します。 負の数値を指定することもできます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:heightFrom"><apiName>heightFrom</apiName><shortdesc> 
      最初の高さ（ピクセル単位）を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      最初の高さ（ピクセル単位）を表します。 省略された場合、Flex はターゲットの現在の高さを使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:heightTo"><apiName>heightTo</apiName><shortdesc> 
      ターゲットの最終的な高さ（ピクセル単位）を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの最終的な高さ（ピクセル単位）を表します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:widthBy"><apiName>widthBy</apiName><shortdesc> 
      ターゲットの幅を変更するピクセル数を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの幅を変更するピクセル数を表します。負の数値を指定することもできます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:widthFrom"><apiName>widthFrom</apiName><shortdesc> 
      ターゲットの最初の幅（ピクセル単位）を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの最初の幅（ピクセル単位）を表します。省略した場合、現在の幅が使用されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Resize:widthTo"><apiName>widthTo</apiName><shortdesc> 
      ターゲットの最終的な幅（ピクセル単位）を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      ターゲットの最終的な幅（ピクセル単位）を表します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Scale"><apiName>Scale</apiName><shortdesc>
  Scale エフェクトは、変換の中心を基準として x 方向および y 方向にターゲットオブジェクトを拡大または縮小します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Scale&gt;</code> tag
  inherits all of the tag attributes of its of its superclass,
  and adds the following tag attributes:</p>
  
  <pre>
  &lt;s:Scale
    id="ID"
    scaleXBy="val"
    scaleXFrom="val"
    scaleXTo="val"
    scaleYBy="val"
    scaleYFrom="val"
    scaleYTo="val"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Scale エフェクトは、変換の中心を基準として x 方向および y 方向にターゲットオブジェクトを拡大または縮小します。拡大 / 縮小が 2.0 の場合は、オブジェクトが 2 倍に拡大されています。拡大 /縮小が 0.5 の場合は、オブジェクトが 2 分の 1 に縮小されています。拡大 / 縮小値 0.0 は無効です。
 
  <p>すべての AnimateTransform に基づくエフェクトと同様、このエフェクトは UIComponent と GraphicElement のサブクラスでのみ動作します。これは、それらのクラスにある特定の変換関数にこうしたエフェクトが依存しているためです。 </p>
  
  </apiDesc><example conref="ScaleEffectExample.mxml"><swfblock conref="examples/ScaleEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Scale:Scale"><apiName>Scale</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Scale:scaleXBy"><apiName>scaleXBy</apiName><shortdesc>
      オブジェクトを x 方向に拡大または縮小するための倍率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      オブジェクトを x 方向に拡大または縮小するための倍率です。これは、from 値に加算するデルタ、または to 値から減算することによって from 値を得るデルタを指定するために、他方の from 値または to 値の代わりに使用できる、オプションのパラメーターです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleXFrom"><apiName>scaleXFrom</apiName><shortdesc>
      開始時の x 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      開始時の x 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleXTo"><apiName>scaleXTo</apiName><shortdesc>
      終了時の x 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      終了時の x 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleYBy"><apiName>scaleYBy</apiName><shortdesc>
     オブジェクトを y 方向に拡大または縮小するための倍率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
     オブジェクトを y 方向に拡大または縮小するための倍率です。これは、from 値に加算するデルタ、または to 値から減算することによって from 値を得るデルタを指定するために、他方の from 値または to 値の代わりに使用できる、オプションのパラメーターです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleYFrom"><apiName>scaleYFrom</apiName><shortdesc>
      開始時の y 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      開始時の y 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Scale:scaleYTo"><apiName>scaleYTo</apiName><shortdesc>
      終了時の y 方向の拡大 / 縮小率です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      終了時の y 方向の拡大 / 縮小率です。拡大 / 縮小値 0.0 は無効です。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:RemoveAction"><apiName>RemoveAction</apiName><shortdesc>
  RemoveAction クラスでは、ビューステートを定義する RemoveChild プロパティに対応したアクションエフェクトを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:RemoveAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>

  <pre>
  &lt;s:RemoveAction
    <b>Properties</b>
    id="ID"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  RemoveAction クラスでは、ビューステートを定義する RemoveChild プロパティに対応したアクションエフェクトを定義します。RemoveAction エフェクトをトランジションの定義範囲で使用することにより、RemoveChild プロパティで定義されたビューステートの変化がトランジションで発生する時期を制御できます。
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#RemoveActionInstance"><linktext>spark.effects.supportClasses.RemoveActionInstance</linktext></link><link href="" invalidHref="mx.states.RemoveChild.xml"><linktext>mx.states.RemoveChild</linktext></link></related-links><apiConstructor id="spark.effects:RemoveAction:RemoveAction"><apiName>RemoveAction</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.effects:SetAction"><apiName>SetAction</apiName><shortdesc>
  SetAction クラスは、名前付きプロパティまたはスタイルの値を設定するアクションエフェクトを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="duration"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:SetAction&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:SetAction
    <b>Properties</b>
    id="ID"
    property=""
    value=""
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects:Effect</apiBaseClassifier></apiClassifierDef><apiDesc>
  SetAction クラスは、名前付きプロパティまたはスタイルの値を設定するアクションエフェクトを定義します。SetAction エフェクトをトランジションの定義範囲で使用することにより、プロパティまたはスタイルの変化で定義されたビューステートの変化がトランジションで発生する時期を制御できます。
  
  </apiDesc><example conref="SetActionEffectExample.mxml"><swfblock conref="examples/SetActionEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#SetActionInstance"><linktext>spark.effects.supportClasses.SetActionInstance</linktext></link></related-links><apiConstructor id="spark.effects:SetAction:SetAction"><apiName>SetAction</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:SetAction:property"><apiName>property</apiName><shortdesc> 
      変更されるプロパティの名前を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> 
      変更されるプロパティの名前を表します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:SetAction:value"><apiName>value</apiName><shortdesc> 
      プロパティの新しい値を表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef><apiDesc> 
      プロパティの新しい値を表します。 トランジション内で実行された場合に値が指定されていないと、Flex は、新しいビューステートによって設定された値に基づいて値を決定します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateTransform"><apiName>AnimateTransform</apiName><shortdesc>
  AnimateTransform エフェクトは、ターゲットオブジェクトでのすべての変換関連アニメーションを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="repeatDelay"/><Exclude kind="property" name="repeatBehavior"/><Exclude kind="property" name="repeatCount"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateTransform&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateTransform
    <b>Properties</b>
    id="ID"
    applyChangesPostLayout="false"
    autoCenterTransform="false"
    transformX="0"
    transformY="0"
    transformZ="0"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  AnimateTransform エフェクトは、ターゲットオブジェクトでのすべての変換関連アニメーションを制御します。重複したプロパティ値を変更する際の競合を回避するため、平行移動、拡大縮小、回転などの変換操作は、単一の操作に結合されて同時に実行されます。このエフェクトは、ターゲットでの現在の変換エフェクトをすべてそのターゲット用の単一のエフェクトインスタンスに結合することによって機能します。つまり、同じ Parallel エフェクト内の複数の変換エフェクトは結合されます（Sequence 内の変換エフェクトは個別に実行されます）。
 
  <p>こうした複数の変換エフェクトの結合は内部的に行われますが、これにより、考慮しなければならない特定の制約が適用されます。</p>
 
  <ul>
    <li>ターゲットオブジェクトの <codeph>transformCenter</codeph> は、そのターゲットにおいてすべての変換エフェクトにグローバルに適用されるため、すべてのターゲットで同じ値に設定される必要があります。</li>
    <li>変換エフェクトは、繰り返しパラメーターを無視します。これは、単一の Transform エフェクトによるエフェクトが、同じターゲットで実行されている他のすべての Transform エフェクトに影響するためです。ただし、エフェクトを CompositeEffect 内にカプセル化することによって繰り返すことができます。</li>
    <li>AnimateTransform クラスのサブクラスでは変換エフェクトの単純な操作を簡単に行うことができますが、基になるキーフレームの時間と値を完全に制御してきめ細かく操作するには、AnimateTransform エフェクトを直接使用します。</li>
  </ul>
  
  <p>さらに、このエフェクトとそのサブクラスでは、ターゲットに UIComponent 型または GraphicElement 型（あるいはそれらのクラスのサブクラス）を使用する必要があるという制約があります（同様に定義されて実装された <codeph>transformAround()</codeph> 関数と <codeph>transformPointToParent()</codeph> 関数を持つ、その他のオブジェクトの型を使用することもできます）。</p>
  
  <p>このエフェクトは直接使用するためのものではなく、サブクラスによって使用される共通機能を公開します。変換エフェクトを使用するには、サブクラスのエフェクト（Move、Move3D、Scale、Scale3D、Rotate、Rotate3D）を使用します。</p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateTransformInstance"><linktext>spark.effects.supportClasses.AnimateTransformInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateTransform:AnimateTransform"><apiName>AnimateTransform</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateTransform:autoCenterTransform"><apiName>autoCenterTransform</apiName><shortdesc>
      エフェクトの再生時にターゲットの中心付近 (width/2, height/2) で変換エフェクトを発生させるかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      エフェクトの再生時にターゲットの中心付近 <codeph>(width/2, height/2)</codeph> で変換エフェクトを発生させるかどうかを指定します。フラグが設定されていない場合、変換の中心は、オブジェクトの変換の中心（<codeph>transformX, transformY, transformZ</codeph>）と、このエフェクトの <codeph>transformX、transformY、transformZ</codeph> プロパティによって決定されます。つまり、変換の中心はターゲットオブジェクトの変換の中心であり、この <codeph>transformX、transformY、transformZ</codeph> プロパティが、エフェクトにあるそれらの値（設定されている場合）によってオーバーライドされます。
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformX"><linktext>mx.core.UIComponent.transformX</linktext></link><link href="" invalidHref="mx.core.xml#UIComponent/transformY"><linktext>mx.core.UIComponent.transformY</linktext></link><link href="" invalidHref="mx.core.xml#UIComponent/transformZ"><linktext>mx.core.UIComponent.transformZ</linktext></link><link href="spark.effects.xml#AnimateTransform/transformX"><linktext>transformX</linktext></link><link href="spark.effects.xml#AnimateTransform/transformY"><linktext>transformY</linktext></link><link href="spark.effects.xml#AnimateTransform/transformZ"><linktext>transformZ</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:transformX"><apiName>transformX</apiName><shortdesc>
      autoCenterTransform プロパティによってオーバーライドされない場合、変換の中心の x 座標を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      <codeph>autoCenterTransform</codeph> プロパティによってオーバーライドされない場合、変換の中心の x 座標を設定します。
     
      <p><codeph>autoCenterTransform</codeph> が <codeph>false</codeph> の場合、変換の中心はターゲットオブジェクトの <codeph>transformX</codeph>、<codeph>transformY</codeph>、<codeph>transformZ</codeph> プロパティによって決定されますが、これらの各プロパティは、このエフェクトで各プロパティを設定することによってオーバーライドできます。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformX"><linktext>mx.core.UIComponent.transformX</linktext></link><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>autoCenterTransform</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:transformY"><apiName>transformY</apiName><shortdesc>
      autoCenterTransform プロパティによってオーバーライドされない場合、変換の中心の y 座標を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      <codeph>autoCenterTransform</codeph> プロパティによってオーバーライドされない場合、変換の中心の y 座標を設定します。
     
      <p><codeph>autoCenterTransform</codeph> が <codeph>false</codeph> の場合、変換の中心はターゲットオブジェクトの <codeph>transformX</codeph>、<codeph>transformY</codeph>、<codeph>transformZ</codeph> プロパティによって決定されますが、これらの各プロパティは、このエフェクトで各プロパティを設定することによってオーバーライドできます。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformY"><linktext>mx.core.UIComponent.transformY</linktext></link><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>autoCenterTransform</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:transformZ"><apiName>transformZ</apiName><shortdesc>
      autoCenterTransform プロパティによってオーバーライドされない場合、変換の中心の z 座標を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      <codeph>autoCenterTransform</codeph> プロパティによってオーバーライドされない場合、変換の中心の z 座標を設定します。
      
      <p><codeph>autoCenterTransform</codeph> が <codeph>false</codeph> の場合、変換の中心はターゲットオブジェクトの <codeph>transformX</codeph>、<codeph>transformY</codeph>、<codeph>transformZ</codeph> プロパティによって決定されますが、これらの各プロパティは、このエフェクトで各プロパティを設定することによってオーバーライドできます。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/transformZ"><linktext>mx.core.UIComponent.transformZ</linktext></link><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>autoCenterTransform</linktext></link></related-links></apiValue><apiValue id="spark.effects:AnimateTransform:applyChangesPostLayout:get"><apiName>applyChangesPostLayout</apiName><shortdesc> 
      AnimateTransform のサブクラスでは、このフラグを使用して、Layout Manager によって使用された変換値をエフェクトが変更するかどうか、つまりレイアウトが実行された後で使用された値を変更するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc> 
      AnimateTransform のサブクラスでは、このフラグを使用して、Layout Manager によって使用された変換値をエフェクトが変更するかどうか、つまりレイアウトが実行された後で使用された値を変更するかどうかを指定します。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:AnimateColor"><apiName>AnimateColor</apiName><shortdesc>
  AnimateColor エフェクトは、チャンネルごとに指定された開始カラー値と終了カラー値の間を補間することによって、時間の経過に伴うカラープロパティの変化をアニメーション化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:AnimateColor&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:AnimateColor
    <b>Properties</b>
    id="ID"
    colorFrom="no default"
    colorPropertyName="color"
    colorTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:Animate</apiBaseClassifier></apiClassifierDef><apiDesc>
  AnimateColor エフェクトは、チャンネルごとに指定された開始カラー値と終了カラー値の間を補間することによって、時間の経過に伴うカラープロパティの変化をアニメーション化します。カラープロパティをアニメーション化するときは、Animate やその他のエフェクトではなく、このエフェクトを使用します。 
  
  </apiDesc><example conref="AnimateColorEffectExample.mxml"><swfblock conref="examples/AnimateColorEffectExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.effects.supportClasses.xml#AnimateColorInstance"><linktext>spark.effects.supportClasses.AnimateColorInstance</linktext></link></related-links><apiConstructor id="spark.effects:AnimateColor:AnimateColor"><apiName>AnimateColor</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:AnimateColor:colorFrom"><apiName>colorFrom</apiName><shortdesc>
      開始カラー値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>4.294967295E9</apiData><apiType value="uint"/><apiDefaultValue>0xFFFFFF
      
      </apiDefaultValue></apiValueDef><apiDesc>
      開始カラー値です。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateColor:colorPropertyName"><apiName>colorPropertyName</apiName><shortdesc>
      このアニメーションによって影響を受けるターゲットオブジェクトのカラープロパティの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>color</apiData><apiType value="String"/><apiDefaultValue>"color"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      このアニメーションによって影響を受けるターゲットオブジェクトのカラープロパティの名前です。カラープロパティは、32 ビットのカラー値を受け取るプロパティです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:AnimateColor:colorTo"><apiName>colorTo</apiName><shortdesc>
     終了カラー値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>4.294967295E9</apiData><apiType value="uint"/><apiDefaultValue>0xFFFFFF
      
      </apiDefaultValue></apiValueDef><apiDesc>
     終了カラー値です。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:Rotate3D"><apiName>Rotate3D</apiName><shortdesc>
  Rotate3D クラスは、x、y、または z 軸を中心にしてターゲットオブジェクトを 3 次元で回転させます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="property" name="motionPaths"/><DefaultProperty name="motionPaths"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Rotate3D&gt;</code> tag
  inherits all of the tag attributes of its superclass,
  and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Rotate3D
    <b>Properties</b>
    id="ID"
    angleXFrom="no default"
    angleXTo="no default"
    angleYFrom="no default"
    angleYTo="no default"
    angleZFrom="no default"
    angleZTo="no default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.effects:AnimateTransform3D</apiBaseClassifier></apiClassifierDef><apiDesc>
  Rotate3D クラスは、x、y、または z 軸を中心にしてターゲットオブジェクトを 3 次元で回転させます。回転は、ターゲットの変換の中心を中心にして行われます。 
 
  <p>すべての AnimateTransform に基づくエフェクトと同様、このエフェクトは UIComponent と GraphicElement のサブクラスでのみ動作します。これは、それらのクラスにある特定の変換関数にこうしたエフェクトが依存しているためです。また、同じターゲット上で並行して実行する複数の変換エフェクトは、単一のエフェクトインスタンスとして実行されます。したがって、変換エフェクトは関係するエフェクトによって設定される変換の中心を共有します。</p>
  
  </apiDesc><example conref="Rotate3DEffectExample.mxml"><swfblock conref="examples/Rotate3DEffectExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.effects:Rotate3D:Rotate3D"><apiName>Rotate3D</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>このエフェクトでアニメーション化するオブジェクトを表します。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.effects:Rotate3D:angleXFrom"><apiName>angleXFrom</apiName><shortdesc> 
      x 軸を中心とした、ターゲットオブジェクトの回転の開始角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      x 軸を中心とした、ターゲットオブジェクトの回転の開始角度です（度単位）。有効な値の範囲は 0 ～ 360 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleXTo"><apiName>angleXTo</apiName><shortdesc> 
      x 軸を中心とした、ターゲットオブジェクトの回転の終了角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      x 軸を中心とした、ターゲットオブジェクトの回転の終了角度です（度単位）。正数または負数を指定できます。
     
      <p><codeph>angleTo</codeph> の値が <codeph>angleFrom</codeph> の値以下の場合、ターゲットは反時計回りに回転します。 そうでない場合は、時計回りに回転します。 ターゲットを複数回回転させる場合は、この値を大きい正数または小さい負数に設定します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleYFrom"><apiName>angleYFrom</apiName><shortdesc> 
      y 軸を中心とした、ターゲットオブジェクトの回転の開始角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      y 軸を中心とした、ターゲットオブジェクトの回転の開始角度です（度単位）。有効な値の範囲は 0 ～ 360 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleYTo"><apiName>angleYTo</apiName><shortdesc> 
      y 軸を中心とした、ターゲットオブジェクトの回転の終了角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      y 軸を中心とした、ターゲットオブジェクトの回転の終了角度です（度単位）。正数または負数を指定できます。
     
      <p><codeph>angleTo</codeph> の値が <codeph>angleFrom</codeph> の値以下の場合、ターゲットは反時計回りに回転します。 そうでない場合は、時計回りに回転します。 ターゲットを複数回回転させる場合は、この値を大きい正数または小さい負数に設定します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleZFrom"><apiName>angleZFrom</apiName><shortdesc> 
      z 軸を中心とした、ターゲットオブジェクトの回転の開始角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      z 軸を中心とした、ターゲットオブジェクトの回転の開始角度です（度単位）。有効な値の範囲は 0 ～ 360 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:Rotate3D:angleZTo"><apiName>angleZTo</apiName><shortdesc> 
      z 軸を中心とした、ターゲットオブジェクトの回転の終了角度です（度単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
      z 軸を中心とした、ターゲットオブジェクトの回転の終了角度です（度単位）。正数または負数を指定できます。
     
      <p><codeph>angleTo</codeph> の値が <codeph>angleFrom</codeph> の値以下の場合、ターゲットは反時計回りに回転します。 そうでない場合は、時計回りに回転します。 ターゲットを複数回回転させる場合は、この値を大きい正数または小さい負数に設定します。</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.effects:WipeDirection"><apiName>WipeDirection</apiName><shortdesc>
  WipeDirection クラスは、Wipe クラスの direction プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  WipeDirection クラスは、Wipe クラスの <codeph>direction</codeph> プロパティの値を定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.effects.xml#Wipe"><linktext>spark.effects.Wipe</linktext></link></related-links><apiValue id="spark.effects:WipeDirection:DOWN"><apiName>DOWN</apiName><shortdesc>
      上から開始して下に移動するワイプ方向です。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>down</apiData><apiType value="String"/></apiValueDef><apiDesc>
      上から開始して下に移動するワイプ方向です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:WipeDirection:LEFT"><apiName>LEFT</apiName><shortdesc>
      右から開始して左に移動するワイプ方向です。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
      右から開始して左に移動するワイプ方向です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:WipeDirection:RIGHT"><apiName>RIGHT</apiName><shortdesc>
      左から開始して右に移動するワイプ方向です。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
      左から開始して右に移動するワイプ方向です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.effects:WipeDirection:UP"><apiName>UP</apiName><shortdesc>
      下から開始して上に移動するワイプ方向です。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>up</apiData><apiType value="String"/></apiValueDef><apiDesc>
      下から開始して上に移動するワイプ方向です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>