<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.events"><apiName>spark.events</apiName><apiDetail/><apiClassifier id="spark.events:PopUpEvent"><apiName>PopUpEvent</apiName><shortdesc>
  PopUpEvent クラスは、SkinnablePopUpContainer によって送出されたイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  PopUpEvent クラスは、SkinnablePopUpContainer によって送出されたイベントを表します。
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:PopUpEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:PopUpEvent:CLOSE</apiEventType><adobeApiEventClassifier>spark.events:PopUpEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:PopUpEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:PopUpEvent:OPEN</apiEventType><adobeApiEventClassifier>spark.events:PopUpEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:PopUpEvent:PopUpEvent"><apiName>PopUpEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>commit</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>リスナーが SkinnablePopUpContainer からのデータをコミットする必要があるかどうかを指定します。<codeph>PopUpEvent.CLOSE</codeph> イベントでのみ使用されます。
     
      </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>コミットする データ。 <codeph>PopUpEvent.CLOSE</codeph> イベントでのみ使用されます。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:PopUpEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      PopUpEvent.CLOSE 定数により、PopUpEvent オブジェクトの type プロパティ値が close イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      PopUpEvent.CLOSE 定数により、PopUpEvent オブジェクトの <codeph>type</codeph> プロパティ値が <codeph>close</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>commit</codeph></entry><entry>リスナーがデータをコミットする必要があるかどうかを指定します。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>データ</codeph></entry><entry>SkinnablePopUpContainer からアプリケーションに返されるデータを表します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>PopUpEvent.OPEN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:PopUpEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
      PopUpEvent.OPEN 定数により、PopUpEvent オブジェクトの type プロパティ値が open イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
      PopUpEvent.OPEN 定数により、PopUpEvent オブジェクトの <codeph>type</codeph> プロパティ値が <codeph>open</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>commit</codeph></entry><entry>使用されません</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>データ</codeph></entry><entry>使用されません</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>PopUpEvent.OPEN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:PopUpEvent:commit"><apiName>commit</apiName><shortdesc>
      イベントリスナーが data プロパティに返されるデータをコミットする必要があるかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      イベントリスナーが <codeph>data</codeph> プロパティに返されるデータをコミットする必要があるかどうかを指定します。<codeph>PopUpEvent.CLOSE</codeph> イベントでのみ使用されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:PopUpEvent:data"><apiName>data</apiName><shortdesc>
      コミットする データ。 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef><apiDesc>
      コミットする データ。 <codeph>PopUpEvent.CLOSE</codeph> イベントでのみ使用されます。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridCaretEvent"><apiName>GridCaretEvent</apiName><shortdesc>
  GridCaretEvent クラスは、ユーザー操作の結果として Spark の DataGrid コントロールでキャレットが変更されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  GridCaretEvent クラスは、ユーザー操作の結果として Spark の DataGrid コントロールでキャレットが変更されたときに送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.xml#Grid"><linktext>spark.components.Grid</linktext></link><link href="spark.components.gridClasses.xml#GridSelectionMode"><linktext>spark.components.gridClasses.GridSelectionMode</linktext></link></related-links><adobeApiEvent id="spark.events:GridCaretEvent:CARET_CHANGE_caretChange"><apiName>caretChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridCaretEvent:CARET_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:GridCaretEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:GridCaretEvent:GridCaretEvent"><apiName>GridCaretEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata><asCustoms><spark.events.GridSelectionEventKind>
     
      </spark.events.GridSelectionEventKind></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldRowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>キャレット位置の変更前の 0 から始まる列インデックスです。 <codeph>selectionMode</codeph> が <codeph>SelectionMode.SINGLE_ROW</codeph> または <codeph>SelectionMode.MULTIPLE_ROWS</codeph> である場合、-1 になります。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldColumnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>キャレット位置の変更前の 0 から始まる行インデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>newRowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>キャレット位置の変更後の 0 から始まる列インデックスです。 <codeph>selectionMode</codeph> が <codeph>SelectionMode.SINGLE_ROW</codeph> または <codeph>SelectionMode.MULTIPLE_ROWS</codeph> である場合、-1 になります。
     
      </apiDesc></apiParam><apiParam><apiItemName>newColumnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>キャレット位置の変更後の 0 から始まる行インデックスです。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail><related-links><link href="spark.components.xml#DataGrid/columns"><linktext>spark.components.DataGrid.columns</linktext></link><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link></related-links></apiConstructor><apiValue id="spark.events:GridCaretEvent:CARET_CHANGE"><apiName>CARET_CHANGE</apiName><shortdesc>
      GridSelectionEvent.CARET_CHANGE 定数は、イベントオブジェクトの type プロパティ値を caretChange イベント用に定義し、現在のキャレット位置が変更されたところであることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>caretChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridSelectionEvent.CARET_CHANGE</codeph> 定数は、イベントオブジェクトの <codeph>type</codeph> プロパティ値を <codeph>caretChange</codeph> イベント用に定義し、現在のキャレット位置が変更されたところであることを示します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newColumnIndex</codeph></entry><entry>キャレット位置の変更後の 0 から始まる列インデックスです。 <codeph>selectionMode</codeph> が行ベースである場合、-1 になります。</entry></row><row><entry><codeph>newRowIndex</codeph></entry><entry>キャレット位置の変更後の 0 から始まる行インデックスです。</entry></row><row><entry><codeph>oldColumnIndex</codeph></entry><entry>キャレット位置の変更前の 0 から始まる列インデックスです。 <codeph>selectionMode</codeph> が行ベースである場合、-1 になります。</entry></row><row><entry><codeph>oldRowIndex</codeph></entry><entry>キャレット位置の変更前の 0 から始まる行インデックスです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdCaretEvent.CARET_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridCaretEvent:newColumnIndex"><apiName>newColumnIndex</apiName><shortdesc>
      キャレット位置の変更後の 0 から始まる列インデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      キャレット位置の変更後の 0 から始まる列インデックスです。  
     
      <p><codeph>selectionMode</codeph> が <codeph>SelectionMode.SINGLE_ROW</codeph> または <codeph>SelectionMode.MULTIPLE_ROWS</codeph> である場合、使用されていないことを示す -1 になります。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/columns"><linktext>spark.components.DataGrid.columns</linktext></link><link href="spark.components.xml#Grid/columns"><linktext>spark.components.Grid.columns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridCaretEvent:newRowIndex"><apiName>newRowIndex</apiName><shortdesc>
      キャレット位置の変更後の 0 から始まる行インデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      キャレット位置の変更後の 0 から始まる行インデックスです。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#Grid/dataProvider"><linktext>spark.components.Grid.dataProvider</linktext></link></related-links></apiValue><apiValue id="spark.events:GridCaretEvent:oldColumnIndex"><apiName>oldColumnIndex</apiName><shortdesc>
      キャレット位置の変更前の 0 から始まる列インデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      キャレット位置の変更前の 0 から始まる列インデックスです。      
     
      <p><codeph>selectionMode</codeph> が <codeph>SelectionMode.SINGLE_ROW</codeph> または <codeph>SelectionMode.MULTIPLE_ROWS</codeph> である場合、使用されていないことを示す -1 になります。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/columns"><linktext>spark.components.DataGrid.columns</linktext></link><link href="spark.components.xml#Grid/columns"><linktext>spark.components.Grid.columns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridCaretEvent:oldRowIndex"><apiName>oldRowIndex</apiName><shortdesc>
      キャレット位置の変更前の 0 から始まる行インデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
     
      </apiDefaultValue></apiValueDef><apiDesc>
      キャレット位置の変更前の 0 から始まる行インデックスです。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#Grid/dataProvider"><linktext>spark.components.Grid.dataProvider</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:DropDownEvent"><apiName>DropDownEvent</apiName><shortdesc>
  DropDownEvent クラスは、open イベントおよび close イベントのイベントリスナーに渡されたイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  DropdownEvent クラスは、<codeph>open</codeph> イベントおよび <codeph>close</codeph> イベントのイベントリスナーに渡されたイベントオブジェクトを表します。
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:DropDownEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:DropDownEvent:CLOSE</apiEventType><adobeApiEventClassifier>spark.events:DropDownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:DropDownEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:DropDownEvent:OPEN</apiEventType><adobeApiEventClassifier>spark.events:DropDownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:DropDownEvent:DropDownEvent"><apiName>DropDownEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>イベントをトリガーした入力アクションの種類を示す値です。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:DropDownEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      DropdownEvent.CLOSE 定数により、close イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>DropdownEvent.CLOSE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>close</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>イベントをトリガーした入力アクションの種類を示す値です。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:DropDownEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
      DropdownEvent.OPEN 定数により、open イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>DropdownEvent.OPEN</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>open</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>イベントをトリガーした入力アクションの種類を示す値です。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:DropDownEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      ユーザーの操作に対する応答としてコントロールが開かれたり閉じられたりした場合、このプロパティには入力アクションのタイプを示す値が含まれます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      ユーザーの操作に対する応答としてコントロールが開かれたり閉じられたりした場合、このプロパティには入力アクションのタイプを示す値が含まれます。 値は、<codeph>InteractionInputType.MOUSE</codeph> または <codeph>InteractionInputType.KEYBOARD</codeph> のいずれかです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:IndexChangeEvent"><apiName>IndexChangeEvent</apiName><shortdesc>
  IndexChangeEvent クラスは、Spark コンポーネントでインデックスが変化したときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  IndexChangeEvent クラスは、Spark コンポーネントでインデックスが変化したときに送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#ListBase"><linktext>spark.components.supportClasses.ListBase</linktext></link><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link></related-links><adobeApiEvent id="spark.events:IndexChangeEvent:CARET_CHANGE_caretChange"><apiName>caretChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:IndexChangeEvent:CARET_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:IndexChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:IndexChangeEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:IndexChangeEvent:CHANGE</apiEventType><adobeApiEventClassifier>spark.events:IndexChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:IndexChangeEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:IndexChangeEvent:CHANGING</apiEventType><adobeApiEventClassifier>spark.events:IndexChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:IndexChangeEvent:IndexChangeEvent"><apiName>IndexChangeEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>変更前の 0 から始まるインデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>変更後の 0 から始まるインデックスです。
     
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:IndexChangeEvent:CARET_CHANGE"><apiName>CARET_CHANGE</apiName><shortdesc>
      IndexChangeEvent.CARET_CHANGE 定数は、caretChange イベントのイベントオブジェクトの type プロパティ値を定義します。この値は、現在フォーカスされているアイテムが変更されようとしていることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>caretChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>IndexChangeEvent.CARET_CHANGE</codeph> 定数は、<codeph>caretChange</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。この値は、現在フォーカスされているアイテムが変更されようとしていることを示します。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>選択したアイテムの変更後の 0 から始まるインデックスです。</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>選択したアイテムの変更前の 0 から始まるインデックスです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangeEvent.CARET_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      IndexChangeEvent.CHANGE 定数は、change イベントのイベントオブジェクトの type プロパティ値を定義します。この値は、List ベースのコントロールで選択項目が変更された場合のように、インデックスが変化したことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>IndexChangeEvent.CHANGE</codeph> 定数は、<codeph>change</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。この値は、List ベースのコントロールで選択項目が変更された場合のように、インデックスが変化したことを示します。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>変更後の 0 から始まるインデックスです。</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>変更前の 0 から始まるインデックスです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangeEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      IndexChangeEvent.CHANGING 定数は、changing イベントのイベントオブジェクトの type プロパティ値を定義します。この値は、現在の選択項目が変更されようとしていることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>IndexChangeEvent.CHANGING</codeph> 定数は、<codeph>changing</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。この値は、現在の選択項目が変更されようとしていることを示します。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>選択したアイテムの変更後の 0 から始まるインデックスです。</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>選択したアイテムの変更前の 0 から始まるインデックスです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangeEvent.CHANGING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:newIndex"><apiName>newIndex</apiName><shortdesc>
      変更後の 0 から始まるインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      変更後の 0 から始まるインデックスです。 <codeph>change</codeph> イベントの場合は、現在の子のインデックスです。  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:oldIndex"><apiName>oldIndex</apiName><shortdesc>
      変更前の 0 から始まるインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      変更前の 0 から始まるインデックスです。 <codeph>change</codeph> イベントの場合は、前の子のインデックスです。 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridItemEditorEvent"><apiName>GridItemEditorEvent</apiName><shortdesc>
  GridItemEditorEvent クラスは、アイテムエディターのライフサイクルにわたって送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  GridItemEditorEvent クラスは、アイテムエディターのライフサイクルにわたって送出されるイベントを表します。
 
  <p>ライフサイクルは、<codeph>GRID_ITEM_EDITOR_SESSION_STARTING</codeph> イベントの送出と共に開始します。 イベントリスナーで <codeph>preventDefault()</codeph> メソッドを呼び出すことで、編集セッションを終了するイベントをキャンセルできます。</p>
 
  <p>アイテムエディターが開かれると、エディターが開かれたことをリスナーに通知するために <codeph>GRID_ITEM_EDITOR_SESSION_START</codeph> が送出されます。</p>
 
  <p>編集セッションを保存またはキャンセルできます。 セッションが保存された場合は、<codeph>GRID_ITEM_EDITOR_SESSION_SAVE</codeph> イベントが送出されます。 エディターがキャンセルされた場合は、<codeph>GRID_ITEM_EDITOR_SESSION_CANCEL</codeph> イベントが送出されます。 </p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.gridClasses.xml#IGridItemEditor"><linktext>spark.components.gridClasses.IGridItemEditor</linktext></link><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/itemEditor"><linktext>spark.components.gridClasses.GridColumn.itemEditor</linktext></link></related-links><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_CANCEL_gridItemEditorSessionCancel"><apiName>gridItemEditorSessionCancel</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_CANCEL</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_SAVE_gridItemEditorSessionSave"><apiName>gridItemEditorSessionSave</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_SAVE</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_STARTING_gridItemEditorSessionStarting"><apiName>gridItemEditorSessionStarting</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_STARTING</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_START_gridItemEditorSessionStart"><apiName>gridItemEditorSessionStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_START</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><apiConstructor id="spark.events:GridItemEditorEvent:GridItemEditorEvent"><apiName>GridItemEditorEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="uint"/><apiData>-1</apiData><apiDesc>編集されている列の 0 から始まるインデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="uint"/><apiData>-1</apiData><apiDesc>編集されている列の 0 から始まるインデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>column</apiItemName><apiOperationClassifier>spark.components.gridClasses:GridColumn</apiOperationClassifier><apiData>null</apiData><apiDesc>編集されている列です。
       
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiConstructor><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_CANCEL"><apiName>GRID_ITEM_EDITOR_SESSION_CANCEL</apiName><shortdesc>
      GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_CANCEL 定数により、イベントオブジェクトの type プロパティ値が cancelridItemEditor イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionCancel</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_CANCEL</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>cancelridItemEditor</codeph> イベント用に定義されます。 データを保存せずにアイテムエディターが閉じられた後に送出されます。  
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>編集されたが変更はされていないアイテムの 0 から始まる列インデックスです。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>編集されたが変更はされていないアイテムの 0 から始まる行インデックスです。</entry></row><row><entry><codeph>column</codeph></entry><entry>編集されたセルの列です。
         </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_CANCEL</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_SAVE"><apiName>GRID_ITEM_EDITOR_SESSION_SAVE</apiName><shortdesc>
      GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_SAVE 定数により、イベントオブジェクトの type プロパティ値が saveGridItemEditor イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionSave</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_SAVE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>saveGridItemEditor</codeph> イベント用に定義されます。 アイテムエディター内のデータがデータプロバイダーに保存され、エディターが閉じられた後に送出されます。  
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>変更されたアイテムの 0 から始まる列インデックスです。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>変更されたアイテムの 0 から始まる行インデックスです。</entry></row><row><entry><codeph>column</codeph></entry><entry>編集されたセルの列です。
         </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_SAVE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_STARTING"><apiName>GRID_ITEM_EDITOR_SESSION_STARTING</apiName><shortdesc>
      GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_STARTING 定数により、イベントオブジェクトの type プロパティ値が startGridItemEditorSession イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionStarting</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_STARTING</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>startGridItemEditorSession</codeph> イベント用に定義されます。 新規のアイテムエディターセッションが要求されたときに送出されます。リスナーはセルが編集可能かどうかを動的に判断し、編集可能でない場合は <codeph>preventDefault()</codeph> メソッドを呼び出すことにより編集をキャンセルできます。 リスナーは、グリッド列に異なるアイテムエディターを割り当てることにより、使用されるエディターを動的に変更することもできます。
     
      <p>このイベントがキャンセルされた場合、アイテムエディターは作成されません。</p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>要求されたアイテムエディターの 0 から始まる列インデックスです。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>要求されたアイテムエディターの 0 から始まる行インデックスです。</entry></row><row><entry><codeph>column</codeph></entry><entry>編集要求に関連付けられているセルの列です。
         </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_STARTING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_START"><apiName>GRID_ITEM_EDITOR_SESSION_START</apiName><shortdesc>
      GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_START 定数により、イベントオブジェクトの type プロパティ値が openGridItemEditor イベント用に定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_START</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>openGridItemEditor</codeph> イベント用に定義されます。 アイテムエディターが開かれた直後に送出されます。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>アイテムエディターの 0 から始まる列インデックスです。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>アイテムエディターの 0 から始まる行インデックスです。</entry></row><row><entry><codeph>column</codeph></entry><entry>編集されているセルの列です。
         </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_START</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc> 
      編集されている列の 0 から始まるインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc> 
      編集されている列の 0 から始まるインデックスです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridItemEditorEvent:column"><apiName>column</apiName><shortdesc>
      編集されているセルの列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:GridColumn</apiValueClassifier></apiValueDef><apiDesc>
      編集されているセルの列です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridItemEditorEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      編集されている行のインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      編集されている行のインデックスです。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:TextOperationEvent"><apiName>TextOperationEvent</apiName><shortdesc>
  TextOperationEvent クラスは、文字の挿入、削除、貼り付け、テキスト属性の変更などのユーザー操作によりテキストコンテンツが変更されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  TextOperationEvent クラスは、文字の挿入、削除、貼り付け、テキスト属性の変更などのユーザー操作によりテキストコンテンツが変更されたときに送出されるイベントを表します。
  
  <p>このイベントは、SkinnableTextBase クラスのサブクラスによって送出されます。これには、RichEditableText や RichEditableText を使用するクラス（ComboBox、TextInput、TextArea など）が含まれます。ユーザー操作のない Text コントロール（RichText や Label など）からは、このタイプのイベントは送出されません。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#RichEditableText"><linktext>spark.components.RichEditableText</linktext></link><link href="spark.components.xml#TextArea"><linktext>spark.components.TextArea</linktext></link><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.components.xml#TextInput"><linktext>spark.components.TextInput</linktext></link><link href="spark.components.supportClasses.xml#SkinnableTextBase"><linktext>spark.components.supportClasses.SkinnableTextBase</linktext></link></related-links><adobeApiEvent id="spark.events:TextOperationEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TextOperationEvent:CHANGE</apiEventType><adobeApiEventClassifier>spark.events:TextOperationEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TextOperationEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TextOperationEvent:CHANGING</apiEventType><adobeApiEventClassifier>spark.events:TextOperationEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:TextOperationEvent:TextOperationEvent"><apiName>TextOperationEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>operation</apiItemName><apiType value="flashx.textLayout.operations:FlowOperation"/><apiData>null</apiData><apiDesc>ユーザーによりテキストに対して実行される編集操作を表す FlowOperation オブジェクトです。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:TextOperationEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      TextOperationEvent.CHANGE 定数により、change イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TextOperationEvent.CHANGE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>change</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>operation</codeph></entry><entry>ユーザーによりテキストに対して実行される編集操作を記述する FlowOperation オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TextOperationEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      TextOperationEvent.CHANGING 定数により、changing イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TextOperationEvent.CHANGING</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>changing</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>operation</codeph></entry><entry>ユーザーによりテキストに対して実行される編集操作を記述する FlowOperation オブジェクトです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TextOperationEvent:operation"><apiName>operation</apiName><shortdesc>
      ユーザーによりテキストに対して実行される編集操作を表す FlowOperation オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flashx.textLayout.operations:FlowOperation"/></apiValueDef><apiDesc>
      ユーザーによりテキストに対して実行される編集操作を表す FlowOperation オブジェクトです。
     
      <p>これには FlowOperation のサブクラス（InsertTextOperation、DeleteTextOperation、SplitParagraphOperation、CutOperation、PasteOperation、UndoOperation など）も含まれます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flashx.textLayout.operations.InsertTextOperation.xml"><linktext>flashx.textLayout.operations.InsertTextOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.DeleteTextOperation.xml"><linktext>flashx.textLayout.operations.DeleteTextOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.SplitParagraphOperation.xml"><linktext>flashx.textLayout.operations.SplitParagraphOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.PasteOperation.xml"><linktext>flashx.textLayout.operations.PasteOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.CutOperation.xml"><linktext>flashx.textLayout.operations.CutOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.UndoOperation.xml"><linktext>flashx.textLayout.operations.UndoOperation</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:RendererExistenceEvent"><apiName>RendererExistenceEvent</apiName><shortdesc>
  RendererExistenceEvent クラスは、Spark の DataGroup のレンダラーが追加または削除されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  RendererExistenceEvent クラスは、Spark の DataGroup のレンダラーが追加または削除されたときに送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGroup"><linktext>spark.components.DataGroup</linktext></link></related-links><adobeApiEvent id="spark.events:RendererExistenceEvent:RENDERER_ADD_rendererAdd"><apiName>rendererAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:RendererExistenceEvent:RENDERER_ADD</apiEventType><adobeApiEventClassifier>spark.events:RendererExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:RendererExistenceEvent:RENDERER_REMOVE_rendererRemove"><apiName>rendererRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:RendererExistenceEvent:RENDERER_REMOVE</apiEventType><adobeApiEventClassifier>spark.events:RendererExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:RendererExistenceEvent:RendererExistenceEvent"><apiName>RendererExistenceEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>renderer</apiItemName><apiType value="mx.core:IVisualElement"/><apiData>null</apiData><apiDesc>追加または削除されたアイテムレンダラーへの参照です。
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>レンダラーが追加または削除されたデータプロバイダー内のインデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>レンダラーが視覚化するデータアイテムです。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:RendererExistenceEvent:RENDERER_ADD"><apiName>RENDERER_ADD</apiName><shortdesc>
      RendererExistenceEvent.RENDERER_ADD 定数により、rendererAdd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rendererAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>RendererExistenceEvent.RENDERER_ADD</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>rendererAdd</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>data</codeph></entry><entry>レンダラーが視覚化するデータアイテムです。</entry></row><row><entry><codeph>index</codeph></entry><entry>追加されたレンダラーのデータプロバイダーインデックスです。</entry></row><row><entry><codeph>renderer</codeph></entry><entry>追加されたレンダラーへの参照が含まれます。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:RENDERER_REMOVE"><apiName>RENDERER_REMOVE</apiName><shortdesc>
      RendererExistenceEvent.RENDERER_REMOVE 定数により、rendererRemove イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rendererRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>RendererExistenceEvent.RENDERER_REMOVE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>rendererRemove</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>data</codeph></entry><entry>レンダラーが視覚化していたデータアイテムです。</entry></row><row><entry><codeph>index</codeph></entry><entry>削除されるレンダラーのデータプロバイダーインデックスです。</entry></row><row><entry><codeph>renderer</codeph></entry><entry>削除されようとしているレンダラーへの参照が含まれます。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:data"><apiName>data</apiName><shortdesc>
      レンダラーのデータアイテムです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      レンダラーのデータアイテムです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:index"><apiName>index</apiName><shortdesc>
      アイテムレンダラーが追加または削除されたインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      アイテムレンダラーが追加または削除されたインデックスです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:renderer"><apiName>renderer</apiName><shortdesc>
      追加または削除されたアイテムレンダラーへの参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:IVisualElement"/></apiValueDef><apiDesc>
      追加または削除されたアイテムレンダラーへの参照です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:ListEvent"><apiName>ListEvent</apiName><shortdesc>
  MouseEvent への応答として ButtonBar や List などの ListBase コンポーネントによって送出される ListEvent は、受信したマウスイベントのプロパティを使用して作成されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  MouseEvent への応答として ButtonBar や List などの ListBase コンポーネントによって送出される ListEvent は、受信したマウスイベントのプロパティを使用して作成されます。 リストイベントの x,y 位置、つまり localX および localY プロパティの値は、ビュー内にスクロールされているコンポーネントの部分ではなく、コンポーネント全体を基準に定義されます。 同様に、イベントの行および列インデックスが、ビュー内にスクロールされていないセルに対応している可能性があります。
 
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:ListEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ListEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>spark.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:ListEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ListEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>spark.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:ListEvent:ListEvent"><apiName>ListEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>このイベントが送出された基となるマウス操作を識別します。
     
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>List を基準にしたイベントの x 座標です。
     
      </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>List を基準にしたイベントの y 座標です。
     
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>この ListEvent をトリガーした MouseEvent の <codeph>relatedObject</codeph> プロパティです。
     
      </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Ctrl キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Alt キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>itemIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Shift キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Ctrl キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>spark.components:IItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>使用されません。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。通常は Flex コントロールによって呼び出され、アプリケーションコードでは使用されません。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:ListEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      ListEvent.ITEM_ROLL_OUT 定数は、itemRollOut イベントの ListEvent オブジェクトの type プロパティ値を定義します。このイベントは、ユーザーがマウスポインターをコントロール内の可視アイテムの外側に移動したことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_ROLL_OUT 定数は、ListEvent オブジェクトの <codeph>type</codeph> プロパティ値を <codeph>itemRollOut</codeph> イベント用に定義します。このイベントは、ユーザーがマウスポインターをコントロール内の可視アイテムの外側に移動したことを示します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>itemIndex</codeph></entry><entry>イベントが発生したアイテムレンダラーによって表示されるアイテムのデータプロバイダーインデックスです。</entry></row><row><entry><codeph>item</codeph></entry><entry>アイテムレンダラーのデータプロバイダーアイテムです。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このアイテムを表示したアイテムレンダラーです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      ListEvent.ITEM_ROLL_OVER 定数は、itemRollOver イベントの ListEvent オブジェクトの type プロパティ値を定義します。このイベントは、ユーザーがコントロール内の可視アイテムにマウスポインターを合わせたことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_ROLL_OVER 定数は、ListEvent オブジェクトの <codeph>type</codeph> プロパティ値を <codeph>itemRollOver</codeph> イベント用に定義します。このイベントは、ユーザーがコントロール内の可視アイテムにマウスポインターを合わせたことを示します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>itemIndex</codeph></entry><entry>イベントが発生したアイテムレンダラーによって表示されるアイテムのデータプロバイダーインデックスです。</entry></row><row><entry><codeph>item</codeph></entry><entry>アイテムレンダラーのデータプロバイダーアイテムです。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このアイテムを表示したアイテムレンダラーです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:itemIndex"><apiName>itemIndex</apiName><shortdesc>
      アイテムレンダラーが表示しているデータアイテムのインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      アイテムレンダラーが表示しているデータアイテムのインデックスです。 このプロパティを使用してデータプロバイダーアイテムにアクセスできます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      アイテムを表示しているアイテムレンダラーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:IItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      アイテムを表示しているアイテムレンダラーです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:item"><apiName>item</apiName><shortdesc>
      アイテムレンダラーが表示しているデータプロバイダーアイテムです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      アイテムレンダラーが表示しているデータプロバイダーアイテムです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:ElementExistenceEvent"><apiName>ElementExistenceEvent</apiName><shortdesc>
  ElementExistenceEvent クラスは、Group のエレメントが作成または破棄されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  ElementExistenceEvent クラスは、Group のエレメントが作成または破棄されたときに送出されるイベントを表します。 
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Group"><linktext>spark.components.Group</linktext></link></related-links><adobeApiEvent id="spark.events:ElementExistenceEvent:ELEMENT_ADD_elementAdd"><apiName>elementAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ElementExistenceEvent:ELEMENT_ADD</apiEventType><adobeApiEventClassifier>spark.events:ElementExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:ElementExistenceEvent:ELEMENT_REMOVE_elementRemove"><apiName>elementRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ElementExistenceEvent:ELEMENT_REMOVE</apiEventType><adobeApiEventClassifier>spark.events:ElementExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:ElementExistenceEvent:ElementExistenceEvent"><apiName>ElementExistenceEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>element</apiItemName><apiType value="mx.core:IVisualElement"/><apiData>null</apiData><apiDesc>追加または削除されたエレメントへの参照です。
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>エレメントが追加または削除されたインデックスです。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:ElementExistenceEvent:ELEMENT_ADD"><apiName>ELEMENT_ADD</apiName><shortdesc>
      ElementExistenceEvent.ELEMENT_ADD 定数により、elementAdd イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>elementAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>ElementExistenceEvent.ELEMENT_ADD</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>elementAdd</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>element</codeph></entry><entry>追加されたビジュアルエレメントへの参照が含まれます。</entry></row><row><entry><codeph>index</codeph></entry><entry>ビジュアルエレメントが追加されたインデックスです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ElementExistenceEvent:ELEMENT_REMOVE"><apiName>ELEMENT_REMOVE</apiName><shortdesc>
      ElementExistenceEvent.ELEMENT_REMOVE 定数により、elementRemove イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>elementRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>ElementExistenceEvent.ELEMENT_REMOVE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>elementRemove</codeph> イベント用に定義されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>element</codeph></entry><entry>削除されようとしているビジュアルエレメントへの参照です。</entry></row><row><entry><codeph>index</codeph></entry><entry>削除されるビジュアルエレメントのインデックスです。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ElementExistenceEvent:element"><apiName>element</apiName><shortdesc>
      追加または削除されたビジュアルエレメントへの参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:IVisualElement"/></apiValueDef><apiDesc>
      追加または削除されたビジュアルエレメントへの参照です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ElementExistenceEvent:index"><apiName>index</apiName><shortdesc>
      エレメントが追加または削除されたインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      エレメントが追加または削除されたインデックスです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridSortEvent"><apiName>GridSortEvent</apiName><shortdesc>
  GridSortEvent クラスは、DataGrid の列の見出しをユーザーがクリックした結果、Spark の DataGrid コントロールのデータプロバイダーがソートされるときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  GridSortEvent クラスは、DataGrid の列の見出しをユーザーがクリックした結果、Spark の DataGrid コントロールのデータプロバイダーがソートされるときに送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link><link href="spark.components.xml#GridColumnHeaderGroup"><linktext>spark.components.GridColumnHeaderGroup</linktext></link></related-links><adobeApiEvent id="spark.events:GridSortEvent:SORT_CHANGE_sortChange"><apiName>sortChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSortEvent:SORT_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:GridSortEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridSortEvent:SORT_CHANGING_sortChanging"><apiName>sortChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSortEvent:SORT_CHANGING</apiEventType><adobeApiEventClassifier>spark.events:GridSortEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></adobeApiEvent><apiConstructor id="spark.events:GridSortEvent:GridSortEvent"><apiName>GridSortEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndices</apiItemName><apiType value="Vector$int"/><apiDesc>ソートされた列の列インデックスのベクトルです。
     
      </apiDesc></apiParam><apiParam><apiItemName>oldSortFields</apiItemName><apiType value="Array"/><apiDesc>最後のソートの ISortFields の配列です。
     
      </apiDesc></apiParam><apiParam><apiItemName>newSortFields</apiItemName><apiType value="Array"/><apiDesc>このソートの ISortFields の配列です。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:GridSortEvent:SORT_CHANGE"><apiName>SORT_CHANGE</apiName><shortdesc>
      GridSortEvent.SORT_CHANGE 定数は、イベントオブジェクトの type プロパティ値を sortChange イベント用に定義し、ソートフィルターがグリッドの dataProvider コレクションに適用されたところであることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>sortChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridSortEvent.SORT_CHANGE</codeph> 定数は、イベントオブジェクトの <codeph>type</codeph> プロパティ値を <codeph>sortChange</codeph> イベント用に定義し、ソートフィルターがグリッドの <codeph>dataProvider</codeph> コレクションに適用されたところであることを示します。
     
      <p>一般に、列ヘッダーのマウスクリックによってソートがトリガーされると、<codeph>columnIndices</codeph> の最後のインデックスが列のインデックスになります。インタラクティブソートは必ずしもマウスクリックによってトリガーされるとは限らないことに注意してください。</p>
     
      <p>このイベントは、ユーザーがコントロールを操作したときに送出されます。データプロバイダーのコレクションをプログラムでソートすると、コンポーネントは <codeph>sortChange</codeph> イベントを送出しません。 </p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndices</codeph></entry><entry>ソートされた列の列インデックスのベクトルです。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myDataGrid.addEventListener()</codeph> を使用すると、myDataGrid の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newSortFields</codeph></entry><entry>このソートの ISortFields の配列です。</entry></row><row><entry><codeph>oldSortFields</codeph></entry><entry>最後のソートの ISortFields の配列です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SORT_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:SORT_CHANGING"><apiName>SORT_CHANGING</apiName><shortdesc>
      GridSortEvent.SORT_CHANGING 定数は、イベントオブジェクトの type プロパティ値を sortChanging イベント用に定義し、ソートフィルターがグリッドの dataProvider コレクションに適用されようとしていることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>sortChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridSortEvent.SORT_CHANGING</codeph> 定数は、イベントオブジェクトの <codeph>type</codeph> プロパティ値を <codeph>sortChanging</codeph> イベント用に定義し、ソートフィルターがグリッドの <codeph>dataProvider</codeph> コレクションに適用されようとしていることを示します。ソートされないようにするには、このイベントに対して preventDefault() を呼び出します。ソートのデフォルトの動作を変更する場合は、<codeph>columnIndices</codeph> と <codeph>newSortFields</codeph> を変更します。
     
      <p>一般に、列ヘッダーのマウスクリックによってソートがトリガーされると、<codeph>columnIndices</codeph> の最後のインデックスが列のインデックスになります。インタラクティブソートは必ずしもマウスクリックによってトリガーされるとは限らないことに注意してください。</p>
     
      <p>このイベントは、ユーザーがコントロールを操作したときに送出されます。データプロバイダーのコレクションをプログラムでソートすると、コンポーネントは <codeph>sortChanging</codeph> イベントを送出しません。 </p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndices</codeph></entry><entry>ソートされる列の列インデックスのベクトルです。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myDataGrid.addEventListener()</codeph> を使用すると、myDataGrid の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>newSortFields</codeph></entry><entry>このソートの ISortFields の配列です。</entry></row><row><entry><codeph>oldSortFields</codeph></entry><entry>最後のソートの ISortFields の配列です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SORT_CHANGING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:columnIndices"><apiName>columnIndices</apiName><shortdesc>
      ソートされた列の列インデックスのベクトルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Vector$int"/></apiValueDef><apiDesc>
      ソートされた列の列インデックスのベクトルです。<codeph>type</codeph> が <codeph>GridSelectionEvent.SORT_CHANGING</codeph> の場合は、この値を変更できます。変更した値は、グリッドの <codeph>columnHeaderGroup</codeph> の <codeph>visibleSortIndicatorIndices</codeph> を更新するために使用されます。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/columnHeaderGroup"><linktext>spark.components.DataGrid.columnHeaderGroup</linktext></link><link href="spark.components.xml#GridColumnHeaderGroup/visibleSortIndicatorIndices"><linktext>spark.components.GridColumnHeaderGroup.visibleSortIndicatorIndices</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/columnIndex"><linktext>spark.components.gridClasses.GridColumn.columnIndex</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:newSortFields"><apiName>newSortFields</apiName><shortdesc>
      このソートの ISortFields の配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      このソートの ISortFields の配列です。<codeph>type</codeph> が <codeph>GridSelectionEvent.SORT_CHANGING</codeph> の場合は、この値を変更できます。変更した値は、グリッドの <codeph>dataProvider</codeph> をソートするために使用されます。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortCompareFunction"><linktext>spark.components.gridClasses.GridColumn.sortCompareFunction</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortDescending"><linktext>spark.components.gridClasses.GridColumn.sortDescending</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortField"><linktext>spark.components.gridClasses.GridColumn.sortField</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:oldSortFields:get"><apiName>oldSortFields</apiName><shortdesc>
      最後のソートの ISortFields の配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      最後のソートの ISortFields の配列です。これは <codeph>null</codeph> に指定することができます。この配列の要素は変更しないでください。  
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortCompareFunction"><linktext>spark.components.gridClasses.GridColumn.sortCompareFunction</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortDescending"><linktext>spark.components.gridClasses.GridColumn.sortDescending</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortField"><linktext>spark.components.gridClasses.GridColumn.sortField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:LoaderInvalidationEvent"><apiName>LoaderInvalidationEvent</apiName><shortdesc>
  LoaderInvalidationEvent クラスは、ContentRequest のインスタンスに、その最初のリクエストが無効にされたことを通知するために送出されるイベントを表しています。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  LoaderInvalidationEvent クラスは、ContentRequest のインスタンスに、その最初のリクエストが無効にされたことを通知するために送出されるイベントを表しています。
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:LoaderInvalidationEvent:INVALIDATE_LOADER_invalidateLoader"><apiName>invalidateLoader</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:LoaderInvalidationEvent:INVALIDATE_LOADER</apiEventType><adobeApiEventClassifier>spark.events:LoaderInvalidationEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:LoaderInvalidationEvent:LoaderInvalidationEvent"><apiName>LoaderInvalidationEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>content</apiItemName><apiType value="any"/><apiDesc>無効にするコンテンツです。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:LoaderInvalidationEvent:INVALIDATE_LOADER"><apiName>INVALIDATE_LOADER</apiName><shortdesc>
      LoaderInvalidationEvent.INVALIDATE_LOADER 定数は、invalidateLoader イベントのイベントオブジェクトの type プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalidateLoader</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>LoaderInvalidationEvent.INVALIDATE_LOADER</codeph> 定数は、<codeph>invalidateLoader</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティの値を定義します。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>content</codeph></entry><entry>コンテンツリクエストを無効にするコンテンツです。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myDataGrid.addEventListener()</codeph> を使用すると、myDataGrid の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>LoaderInvalidationEvent.INVALIDATE_LOADER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:LoaderInvalidationEvent:content"><apiName>content</apiName><shortdesc>
      コンテンツリクエストを無効にするコンテンツです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef><apiDesc>
      コンテンツリクエストを無効にするコンテンツです。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridSelectionEvent"><apiName>GridSelectionEvent</apiName><shortdesc>
  GridSelectionEvent クラスは、ユーザー操作の結果として Spark の DataGrid コントロールで選択範囲が変更されたときに送出されるイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  GridSelectionEvent クラスは、ユーザー操作の結果として Spark の DataGrid コントロールで選択範囲が変更されたときに送出されるイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.events.xml#GridSelectionEventKind"><linktext>spark.events.GridSelectionEventKind</linktext></link><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.xml#Grid"><linktext>spark.components.Grid</linktext></link></related-links><adobeApiEvent id="spark.events:GridSelectionEvent:SELECTION_CHANGE_selectionChange"><apiName>selectionChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSelectionEvent:SELECTION_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:GridSelectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridSelectionEvent:SELECTION_CHANGING_selectionChanging"><apiName>selectionChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSelectionEvent:SELECTION_CHANGING</apiEventType><adobeApiEventClassifier>spark.events:GridSelectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></adobeApiEvent><apiConstructor id="spark.events:GridSelectionEvent:GridSelectionEvent"><apiName>GridSelectionEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata><asCustoms><spark.events.GridSelectionEventKind>
     
      </spark.events.GridSelectionEventKind></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>changing イベントの種類です。 有効な値は定数として <codeph>GridSelectionEventKind</codeph> クラスに定義されています。 この値は、イベントのどのプロパティが使用されるかを決定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>selectionChange</apiItemName><apiOperationClassifier>spark.components.gridClasses:CellRegion</apiOperationClassifier><apiData>null</apiData><apiDesc>現在の選択範囲に対して提示された、または受け入れられた変更です。 現在の選択範囲を判別するには、Spark の DataGrid の選択メソッドを使用します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></apiConstructor><apiValue id="spark.events:GridSelectionEvent:SELECTION_CHANGE"><apiName>SELECTION_CHANGE</apiName><shortdesc>
      GridSelectionEvent.SELECTION_CHANGE 定数は、イベントオブジェクトの type プロパティ値を selectionChange イベント用に定義し、現在の選択項目が変更されたところであることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridSelectionEvent.SELECTION_CHANGE</codeph> 定数は、イベントオブジェクトの <codeph>type</codeph> プロパティ値を <codeph>selectionChange</codeph> イベント用に定義し、現在の選択項目が変更されたところであることを示します。
     
      <p>このイベントは、ユーザーがコントロールを操作したときに送出されます。データプロバイダーのコレクションをプログラムでソートすると、コンポーネントは <codeph>selectionChange</codeph> イベントを送出しません。 </p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry>kind<codeph/></entry><entry>changing イベントの種類です。 有効な値は定数として GridSelectionEventKind クラスに定義されています。 この値は、イベントのどのプロパティが使用されるかを決定します。</entry></row><row><entry><codeph>selectionChange</codeph></entry><entry>ユーザー操作によってトリガーされた、完了した選択範囲の変更です。現在の選択範囲を判別するには、DataGrid の選択メソッドを使用します。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SELECTION_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSelectionEvent:SELECTION_CHANGING"><apiName>SELECTION_CHANGING</apiName><shortdesc>
      GridSelectionEvent.SELECTION_CHANGING 定数は、selectionChanging イベントのイベントオブジェクトの type プロパティ値を定義し、現在の選択項目が変更されようとしていることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>GridSelectionEvent.SELECTION_CHANGING</codeph> 定数は、<codeph>selectionChanging</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義し、現在の選択項目が変更されようとしていることを示します。 選択項目が変更されないようにするには、このイベント時に preventDefault() を呼び出します。
     
      <p>このイベントは、ユーザーがコントロールを操作したときに送出されます。データプロバイダーのコレクションをプログラムでソートすると、コンポーネントは <codeph>selectionChanging</codeph> イベントを送出しません。 </p>
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry>kind<codeph/></entry><entry>changing イベントの種類です。 有効な値は定数として GridSelectionEventKind クラスに定義されています。 この値は、イベントのどのプロパティが使用されるかを決定します。</entry></row><row><entry><codeph>selectionChange</codeph></entry><entry>ユーザー操作によってトリガーされる、次に起こる選択範囲の変更です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SELECTION_CHANGING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSelectionEvent:kind"><apiName>kind</apiName><shortdesc>
      発生したイベントの種類を示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      発生したイベントの種類を示します。 プロパティ値は GridSelectionEventKind クラスのいずれかの値、またはイベントの種類が不明であることを示す <codeph>null</codeph> になります。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.events.xml#GridSelectionEventKind"><linktext>spark.events.GridSelectionEventKind</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSelectionEvent:selectionChange"><apiName>selectionChange</apiName><shortdesc>
      ユーザー操作によってトリガーされた、次に起こる、または完了した選択範囲の変更です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:CellRegion</apiValueClassifier></apiValueDef><apiDesc>
      ユーザー操作によってトリガーされた、次に起こる、または完了した選択範囲の変更です。この変更が現在の選択範囲に対して追加される場合、すべての選択範囲を表すことにはなりません。 選択範囲を判別するには、DataGrid の選択メソッドを使用します。
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:TrackBaseEvent"><apiName>TrackBaseEvent</apiName><shortdesc>
  TrackBase コンポーネントから送出されたイベントを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  TrackBase コンポーネントから送出されたイベントを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#TrackBase"><linktext>spark.components.supportClasses.TrackBase</linktext></link></related-links><adobeApiEvent id="spark.events:TrackBaseEvent:THUMB_DRAG_thumbDrag"><apiName>thumbDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TrackBaseEvent:THUMB_DRAG</apiEventType><adobeApiEventClassifier>spark.events:TrackBaseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TrackBaseEvent:THUMB_PRESS_thumbPress"><apiName>thumbPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TrackBaseEvent:THUMB_PRESS</apiEventType><adobeApiEventClassifier>spark.events:TrackBaseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TrackBaseEvent:THUMB_RELEASE_thumbRelease"><apiName>thumbRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TrackBaseEvent:THUMB_RELEASE</apiEventType><adobeApiEventClassifier>spark.events:TrackBaseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:TrackBaseEvent:TrackBaseEvent"><apiName>TrackBaseEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:TrackBaseEvent:THUMB_DRAG"><apiName>THUMB_DRAG</apiName><shortdesc>
      TrackBaseEvent.THUMB_DRAG 定数により、thumbDrag イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TrackBaseEvent.THUMB_DRAG</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>thumbDrag</codeph> イベント用に定義されます。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TrackBaseEvent:THUMB_PRESS"><apiName>THUMB_PRESS</apiName><shortdesc>
      TrackBaseEvent.THUMB_PRESS 定数により、thumbPress イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TrackBaseEvent.THUMB_PRESS</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>thumbPress</codeph> イベント用に定義されます。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TrackBaseEvent:THUMB_RELEASE"><apiName>THUMB_RELEASE</apiName><shortdesc>
      TrackBaseEvent.THUMB_RELEASE 定数により、thumbRelease イベントのイベントオブジェクトの type プロパティ値が定義されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TrackBaseEvent.THUMB_RELEASE</codeph> 定数により、イベントオブジェクトの <codeph>type</codeph> プロパティ値が <codeph>thumbRelease</codeph> イベント用に定義されます。 
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridEvent"><apiName>GridEvent</apiName><shortdesc>
  GridEvent クラスは、MouseEvent クラスを拡張して、グリッドセルに対するイベントの相対位置に基づくグリッド固有の追加情報を含めます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  GridEvent クラスは、MouseEvent クラスを拡張して、グリッドセルに対するイベントの相対位置に基づくグリッド固有の追加情報を含めます。この情報の内容は次のとおりです。
 
  <ul>
    <li>セルの行インデックスと列インデックス。</li>
    <li>セルの GridColumn オブジェクト。</li>
    <li>セルの行に対応するデータプロバイダーアイテム。</li>
    <li>アイテムレンダラーです。</li>  
  </ul>
 
  <p>グリッドイベントは、マウスイベントと 1 対 1 で対応します。 これらは Grid 下位要素から Grid そのものに「バブル」されたマウスイベントに応じて送出されます。 最も大きな違いは、マウスダウン、ドラッグ、マウスアップという一連の操作全体が、ドラッグおよびマウスアップの部分がグリッド上で発生しなかった場合でも、グリッドイベントのイベントリスナーによって常に認識されるという点です。 <codeph>gridMouseDrag</codeph> イベントは、ボタンを押した状態でのマウス移動イベントに対応します。</p> 
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.xml#Grid"><linktext>spark.components.Grid</linktext></link><link href="spark.components.gridClasses.xml#GridSelectionMode"><linktext>spark.components.gridClasses.GridSelectionMode</linktext></link></related-links><adobeApiEvent id="spark.events:GridEvent:GRID_CLICK_gridClick"><apiName>gridClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:click"><linktext>flash.display.InteractiveObject.click</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_DOUBLE_CLICK_gridDoubleClick"><apiName>gridDoubleClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:doubleClick"><linktext>flash.display.InteractiveObject.doubleClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_MOUSE_DOWN_gridMouseDown"><apiName>gridMouseDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_MOUSE_DOWN</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseDown"><linktext>flash.display.InteractiveObject.mouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_MOUSE_DRAG_gridMouseDrag"><apiName>gridMouseDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_MOUSE_DRAG</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_MOUSE_UP_gridMouseUp"><apiName>gridMouseUp</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_MOUSE_UP</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseUp"><linktext>flash.display.InteractiveObject.mouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_ROLL_OUT_gridRollOut"><apiName>gridRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_ROLL_OUT</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_ROLL_OVER_gridRollOver"><apiName>gridRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_ROLL_OVER</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOver"><linktext>flash.display.InteractiveObject.rollOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_CLICK_separatorClick"><apiName>separatorClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_DOUBLE_CLICK_separatorDoubleClick"><apiName>separatorDoubleClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_MOUSE_DOWN_separatorMouseDown"><apiName>separatorMouseDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_MOUSE_DOWN</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_MOUSE_DRAG_separatorMouseDrag"><apiName>separatorMouseDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_MOUSE_DRAG</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_MOUSE_UP_separatorMouseUp"><apiName>separatorMouseUp</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_MOUSE_UP</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_ROLL_OUT_separatorRollOut"><apiName>separatorRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_ROLL_OUT</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_ROLL_OVER_separatorRollOver"><apiName>separatorRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_ROLL_OVER</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:GridEvent:GridEvent"><apiName>GridEvent</apiName><shortdesc>
      マウスイベントに応じて Grid クラスによって送出される GridEvents は、受信したマウスイベントのプロパティを使用して構築されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>このイベントが送出された基となるマウス操作を識別します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>グリッドを基準にしたイベントの x 座標です。
     
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>グリッドを基準にしたイベントの y 座標です。
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>イベントが発生した行のインデックス、または -1 です。
     
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが発生した列のインデックス、または -1 です。
     
      </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが発生した列、または null です。
     
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>rowIndex</codeph> のデータプロバイダーアイテムです。
     
      </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>この GridEvent をトリガーした MouseEvent の <codeph>relatedObject</codeph> プロパティです。
     
      </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>イベントが発生した表示されているアイテムレンダラー、または null です。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Ctrl キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Alt キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>column</apiItemName><apiOperationClassifier>spark.components.gridClasses:GridColumn</apiOperationClassifier><apiData>null</apiData><apiDesc>Shift キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Ctrl キーが押されているかどうかを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>spark.components.gridClasses:IGridItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>使用されません。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      マウスイベントに応じて Grid クラスによって送出される GridEvents は、受信したマウスイベントのプロパティを使用して構築されます。グリッドイベントの x,y 位置、つまり <codeph>localX</codeph> および <codeph>localY</codeph> プロパティの値は、ビュー内にスクロールされているグリッドの部分ではなく、グリッド全体を基準に定義されます。 同様に、イベントの行および列インデックスが、ビュー内にスクロールされていないセルに対応している可能性があります。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:GridEvent:GRID_CLICK"><apiName>GRID_CLICK</apiName><shortdesc>
      GridEvent の gridClick の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>gridClick</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:click"><linktext>flash.display.InteractiveObject.click</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_DOUBLE_CLICK"><apiName>GRID_DOUBLE_CLICK</apiName><shortdesc>
      GridEvent の gridDoubleClick の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridDoubleClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>gridDoubleClick</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_DOUBLE_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:doubleClick"><linktext>flash.display.InteractiveObject.doubleClick</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_MOUSE_DOWN"><apiName>GRID_MOUSE_DOWN</apiName><shortdesc>
      GridEvent の gridMouseDown の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridMouseDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>gridMouseDown</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_MOUSE_DOWN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseDown"><linktext>flash.display.InteractiveObject.mouseDown</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_MOUSE_DRAG"><apiName>GRID_MOUSE_DRAG</apiName><shortdesc>
      GridEvent の gridMouseDrag の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridMouseDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>gridMouseDrag</codeph> の <codeph>type</codeph> プロパティ値です。 このイベントは、リスナーによって <codeph>mouseDown</codeph> イベントが処理され、かつマウスボタンを押したままマウスを移動している間のみ送出されます。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_MOUSE_DRAG</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:GRID_MOUSE_UP"><apiName>GRID_MOUSE_UP</apiName><shortdesc>
      GridEvent の gridMouseUp の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridMouseUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>gridMouseUp</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_MOUSE_UP</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseUp"><linktext>flash.display.InteractiveObject.mouseUp</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_ROLL_OUT"><apiName>GRID_ROLL_OUT</apiName><shortdesc>
      GridEvent の gridRollOut の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>gridRollOut</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_ROLL_OVER"><apiName>GRID_ROLL_OVER</apiName><shortdesc>
      GridEvent の gridRollOver の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>gridRollOver</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOver"><linktext>flash.display.InteractiveObject.rollOver</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_CLICK"><apiName>SEPARATOR_CLICK</apiName><shortdesc>
      GridEvent の separatorClick の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>separatorClick</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_DOUBLE_CLICK"><apiName>SEPARATOR_DOUBLE_CLICK</apiName><shortdesc>
      GridEvent の separatorDoubleClick の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorDoubleClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>separatorDoubleClick</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_DOUBLE_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_MOUSE_DOWN"><apiName>SEPARATOR_MOUSE_DOWN</apiName><shortdesc>
      GridEvent の separatorMouseDown の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorMouseDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>separatorMouseDown</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_MOUSE_DOWN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_MOUSE_DRAG"><apiName>SEPARATOR_MOUSE_DRAG</apiName><shortdesc>
      GridEvent の separatorMouseDrag の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorMouseDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>separatorMouseDrag</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_MOUSE_DRAG</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_MOUSE_UP"><apiName>SEPARATOR_MOUSE_UP</apiName><shortdesc>
      GridEvent の separatorMouseUp の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorMouseUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>separatorMouseUp</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_MOUSE_UP</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_ROLL_OUT"><apiName>SEPARATOR_ROLL_OUT</apiName><shortdesc>
      GridEvent の separatorRollOut の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>separatorRollOut</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_ROLL_OVER"><apiName>SEPARATOR_ROLL_OVER</apiName><shortdesc>
      GridEvent の separatorRollOver の type プロパティ値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      GridEvent の <codeph>separatorRollOver</codeph> の <codeph>type</codeph> プロパティ値です。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>column</codeph></entry><entry>イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>grid</codeph></entry><entry>このイベントに関連付けられているグリッドです。</entry></row><row><entry><codeph>item</codeph></entry><entry>この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      イベントが発生した列のインデックスです。グリッド列に対してイベントが発生しなかった場合は -1 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:column"><apiName>column</apiName><shortdesc>
      イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:GridColumn</apiValueClassifier></apiValueDef><apiDesc>
      イベントが発生した列です。列に対してイベントが発生しなかった場合は null です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:IGridItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      このセルを表示したアイテムレンダラーです。表示されているセルに対してこのイベントが発生しなかった場合は null です。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:item"><apiName>item</apiName><shortdesc>
      この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      この行のデータプロバイダーアイテムです。グリッド行に対してイベントが発生しなかった場合は null です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      イベントが発生した行のインデックスです。グリッド行に対してイベントが発生しなかった場合は -1 です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:grid:get"><apiName>grid</apiName><shortdesc>
      このイベントに関連付けられているグリッドです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Grid</apiValueClassifier></apiValueDef><apiDesc>
      このイベントに関連付けられているグリッドです。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridSelectionEventKind"><apiName>GridSelectionEventKind</apiName><shortdesc>
  GridSelectionEventKind クラスは、spark.events.GridSelectionEvent クラスの有効な kind プロパティ値の定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  GridSelectionEventKind クラスは、spark.events.GridSelectionEvent クラスの有効な <codeph>kind</codeph> プロパティ値の定数を定義します。 これらの定数は、選択範囲に対して行われた変更の種類を示します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.events.xml#GridSelectionEvent/kind"><linktext>spark.events.GridSelectionEvent.kind</linktext></link><link href="spark.events.xml#GridSelectionEvent"><linktext>spark.events.GridSelectionEvent</linktext></link></related-links><apiValue id="spark.events:GridSelectionEventKind:ADD_CELL"><apiName>ADD_CELL</apiName><shortdesc> 
      このセルを現在の選択範囲に追加する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addCell</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      このセルを現在の選択範囲に追加する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:ADD_ROW"><apiName>ADD_ROW</apiName><shortdesc> 
      この行を現在の選択範囲に追加する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addRow</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      この行を現在の選択範囲に追加する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:CLEAR_SELECTION"><apiName>CLEAR_SELECTION</apiName><shortdesc> 
      現在の選択範囲をクリアする必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>clearSelection</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      現在の選択範囲をクリアする必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:REMOVE_CELL"><apiName>REMOVE_CELL</apiName><shortdesc> 
      このセルを現在の選択範囲から削除する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeCell</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      このセルを現在の選択範囲から削除する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:REMOVE_ROW"><apiName>REMOVE_ROW</apiName><shortdesc> 
      この行を現在の選択範囲から削除する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeRow</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      この行を現在の選択範囲から削除する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SELECT_ALL"><apiName>SELECT_ALL</apiName><shortdesc> 
      グリッド全体を選択する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectAll</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      グリッド全体を選択する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_CELL_REGION"><apiName>SET_CELL_REGION</apiName><shortdesc> 
      現在の選択範囲をこのセル領域に設定する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setCellRegion</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      現在の選択範囲をこのセル領域に設定する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_CELL"><apiName>SET_CELL</apiName><shortdesc> 
      現在の選択範囲をこのセルに設定する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setCell</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      現在の選択範囲をこのセルに設定する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_ROWS"><apiName>SET_ROWS</apiName><shortdesc> 
      現在の選択範囲をこれらの行に設定する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setRows</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      現在の選択範囲をこれらの行に設定する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_ROW"><apiName>SET_ROW</apiName><shortdesc> 
      現在の選択範囲をこの行に設定する必要があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setRow</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      現在の選択範囲をこの行に設定する必要があることを示します。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:TitleWindowBoundsEvent"><apiName>TitleWindowBoundsEvent</apiName><shortdesc>
  TitleWindowBoundsEvent クラスは、移動またはサイズ変更によって Spark TitleWindow の境界が変化したときに送出されるイベントオブジェクトを表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  TitleWindowBoundsEvent クラスは、移動またはサイズ変更によって Spark TitleWindow の境界が変化したときに送出されるイベントオブジェクトを表します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TitleWindow"><linktext>spark.components.TitleWindow</linktext></link></related-links><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_END_windowMoveEnd"><apiName>windowMoveEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_END</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_START_windowMoveStart"><apiName>windowMoveStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_START</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_windowMove"><apiName>windowMove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVE</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVING_windowMoving"><apiName>windowMoving</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVING</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:TitleWindowBoundsEvent:TitleWindowBoundsEvent"><apiName>TitleWindowBoundsEvent</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>イベントタイプ。イベントの基となるアクションを示します。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントが表示リスト階層を上方にバブルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>イベントに関連付けられた動作をキャンセルできるかどうかを指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>beforeBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>アクションが発生する前のウィンドウの境界です。このイベントがキャンセル可能な場合、<codeph>beforeBounds</codeph> はウィンドウの現在の境界です。それ以外の場合は、変更が発生する前の境界です。
     
      </apiDesc></apiParam><apiParam><apiItemName>afterBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>アクションが発生した後のウィンドウの境界です。このイベントがキャンセル可能な場合、<codeph>afterBounds</codeph> はウィンドウの将来の境界です。それ以外の場合は、現在の境界です。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_END"><apiName>WINDOW_MOVE_END</apiName><shortdesc>
      TitleWindowBoundsEvent.WINDOW_MOVE_END 定数は、windowMoveEnd イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMoveEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TitleWindowBoundsEvent.WINDOW_MOVE_END</codeph> 定数は、<codeph>windowMoveEnd</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>開始時のオブジェクトの境界です。</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>終了時のオブジェクトの境界です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_START"><apiName>WINDOW_MOVE_START</apiName><shortdesc>
      TitleWindowBoundsEvent.WINDOW_MOVE_START 定数は、windowMoveStart イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMoveStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TitleWindowBoundsEvent.WINDOW_MOVE_START</codeph> 定数は、<codeph>windowMoveStart</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>開始時のオブジェクトの境界です。</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE"><apiName>WINDOW_MOVE</apiName><shortdesc>
      TitleWindowBoundsEvent.WINDOW_MOVE 定数は、windowMove イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TitleWindowBoundsEvent.WINDOW_MOVE</codeph> 定数は、<codeph>windowMove</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>オブジェクトの以前の境界です。</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>オブジェクトの現在の境界です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVING"><apiName>WINDOW_MOVING</apiName><shortdesc>
      TitleWindowBoundsEvent.WINDOW_MOVING 定数は、windowMoving イベントのイベントオブジェクトの type プロパティ値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMoving</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>TitleWindowBoundsEvent.WINDOW_MOVING</codeph> 定数は、<codeph>windowMoving</codeph> イベントのイベントオブジェクトの <codeph>type</codeph> プロパティ値を定義します。
     
      <p>イベントオブジェクトの各プロパティには次の値が設定されています。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>プロパティ</entry><entry>値</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>イベント処理を行うイベントリスナーの定義用オブジェクトを表します。 例えば、イベントリスナーの登録に <codeph>myButton.addEventListener()</codeph> を使用すると、myButton の値は <codeph>currentTarget</codeph> となります。 </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>オブジェクトの現在の境界です。</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>オブジェクトが現在のカーソル位置に移動した場合の、オブジェクトの将来の境界です。</entry></row><row><entry><codeph>target</codeph></entry><entry>イベントを送出したオブジェクトを表します。このオブジェクトは必ずしもイベントを受け取るオブジェクトとは限りません。 イベントを受け取るオブジェクトに常にアクセスするには、<codeph>currentTarget</codeph> プロパティを使用してください。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:afterBounds"><apiName>afterBounds</apiName><shortdesc>
      アクションが発生した後のオブジェクトの境界です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      アクションが発生した後のオブジェクトの境界です。このイベントがキャンセル可能な場合、<codeph>afterBounds</codeph> はウィンドウの将来の境界です。それ以外の場合は、現在の境界です。
     
      <p>次のリストでは、様々なイベントタイプに対してこのプロパティがどのように設定されるかを示します。</p>
     
      <ul>
        <li><codeph>WINDOW_MOVE</codeph> - ウィンドウの現在の境界。</li>
        <li><codeph>WINDOW_MOVE_END</codeph> - ドラッグ前のウィンドウの最後の境界。</li>
        <li><codeph>WINDOW_MOVE_START </codeph> - null。</li>
        <li><codeph>WINDOW_MOVING</codeph> - ウィンドウが現在のカーソル位置に移動した場合の、ウィンドウの将来の境界。</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:beforeBounds"><apiName>beforeBounds</apiName><shortdesc>
      アクションが発生する前のオブジェクトの境界です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      アクションが発生する前のオブジェクトの境界です。このイベントがキャンセル可能な場合、<codeph>beforeBounds</codeph> はウィンドウの現在の境界です。それ以外の場合は、変更が発生する前の境界です。
     
      <p>次のリストでは、様々なイベントタイプに対してこのプロパティがどのように設定されるかを示します。</p>
     
      <ul>
        <li><codeph>WINDOW_MOVE</codeph> - ウィンドウの以前の境界。</li>
        <li><codeph>WINDOW_MOVE_END</codeph> - ドラッグ前のウィンドウの開始境界。</li>
        <li><codeph>WINDOW_MOVE_START </codeph> - ウィンドウの開始境界。</li>
        <li><codeph>WINDOW_MOVING</codeph> - ウィンドウの現在の境界。</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>