<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.events"><apiName>spark.events</apiName><apiDetail/><apiClassifier id="spark.events:PopUpEvent"><apiName>PopUpEvent</apiName><shortdesc>
  Die PopUpEvent-Klasse stellt das Ereignis dar, das vom SkinnablePopUpContainer zugewiesen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die PopUpEvent-Klasse stellt das Ereignis dar, das vom SkinnablePopUpContainer zugewiesen wurde.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:PopUpEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:PopUpEvent:CLOSE</apiEventType><adobeApiEventClassifier>spark.events:PopUpEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:PopUpEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:PopUpEvent:OPEN</apiEventType><adobeApiEventClassifier>spark.events:PopUpEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:PopUpEvent:PopUpEvent"><apiName>PopUpEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>commit</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob der Listener die Daten aus dem SkinnablePopUpContainer übergeben soll. Nur mit <codeph>PopUpEvent.CLOSE</codeph>-Ereignis verwendet.
     
      </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Die zu übergebenden Daten. Nur mit <codeph>PopUpEvent.CLOSE</codeph>-Ereignis verwendet.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:PopUpEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      Die PopUpEvent.CLOSE-Konstante definiert den Wert der type-Eigenschaft des PopUpEvent-Objekts für ein close-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die PopUpEvent.CLOSE-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des PopUpEvent-Objekts für ein <codeph>close</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>commit</codeph></entry><entry>Gibt an, ob der Listener die Daten übergeben soll.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>Daten</codeph></entry><entry>Alle Daten, die vom SkinnablePopUpContainer an die Anwendung zurückgegeben werden.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>PopUpEvent.OPEN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:PopUpEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
      Die PopUpEvent.OPEN-Konstante definiert den Wert der type-Eigenschaft des PopUpEvent-Objekts für ein open-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die PopUpEvent.OPEN-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des PopUpEvent-Objekts für ein <codeph>open</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>commit</codeph></entry><entry>Nicht verwendet</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>Daten</codeph></entry><entry>Nicht verwendet</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>PopUpEvent.OPEN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:PopUpEvent:commit"><apiName>commit</apiName><shortdesc>
      Gibt an, ob der Ereignis-Listener die Daten, die in die data-Eigenschaft zurückgegeben wurden, übergeben soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Gibt an, ob der Ereignis-Listener die Daten, die in die <codeph>data</codeph>-Eigenschaft zurückgegeben wurden, übergeben soll. Nur mit <codeph>PopUpEvent.CLOSE</codeph>-Ereignis verwendet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:PopUpEvent:data"><apiName>data</apiName><shortdesc>
      Die zu übergebenden Daten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef><apiDesc>
      Die zu übergebenden Daten. Nur mit <codeph>PopUpEvent.CLOSE</codeph>-Ereignis verwendet.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridCaretEvent"><apiName>GridCaretEvent</apiName><shortdesc>
  Die GridCaretEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich das Einfügezeichen infolge einer Benutzerinteraktion in einem Spark-DataGrid-Steuerelement ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die GridCaretEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich das Einfügezeichen infolge einer Benutzerinteraktion in einem Spark-DataGrid-Steuerelement ändert.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.xml#Grid"><linktext>spark.components.Grid</linktext></link><link href="spark.components.gridClasses.xml#GridSelectionMode"><linktext>spark.components.gridClasses.GridSelectionMode</linktext></link></related-links><adobeApiEvent id="spark.events:GridCaretEvent:CARET_CHANGE_caretChange"><apiName>caretChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridCaretEvent:CARET_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:GridCaretEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:GridCaretEvent:GridCaretEvent"><apiName>GridCaretEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata><asCustoms><spark.events.GridSelectionEventKind>
     
      </spark.events.GridSelectionEventKind></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldRowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die auf null basierende Spaltenindexposition der Position des Einfügezeichens vor der Änderung. Wenn der <codeph>selectionMode</codeph> entweder <codeph>SelectionMode.SINGLE_ROW</codeph> oder <codeph>SelectionMode.MULTIPLE_ROWS</codeph> ist, ergibt sich der Wert „-1“.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldColumnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die auf null basierende Zeilenindexposition der Position des Einfügezeichens vor der Änderung.
     
      </apiDesc></apiParam><apiParam><apiItemName>newRowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die auf null basierende Spaltenindexposition der Position des Einfügezeichens nach der Änderung. Wenn der <codeph>selectionMode</codeph> entweder <codeph>SelectionMode.SINGLE_ROW</codeph> oder <codeph>SelectionMode.MULTIPLE_ROWS</codeph> ist, ergibt sich der Wert „-1“.
     
      </apiDesc></apiParam><apiParam><apiItemName>newColumnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die auf null basierende Zeilenindexposition der Position des Einfügezeichens nach der Änderung.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail><related-links><link href="spark.components.xml#DataGrid/columns"><linktext>spark.components.DataGrid.columns</linktext></link><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link></related-links></apiConstructor><apiValue id="spark.events:GridCaretEvent:CARET_CHANGE"><apiName>CARET_CHANGE</apiName><shortdesc>
      Die GridSelectionEvent.CARET_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts eines caretChange-Ereignisses. Mit diesem Ereignis wird die eben erfolgte Änderung der aktuellen Position des Einfügezeichens angegeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>caretChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridSelectionEvent.CARET_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts eines <codeph>caretChange</codeph>-Ereignisses. Mit diesem Ereignis wird die gerade erfolgte Änderung der aktuellen Position des Einfügezeichens angegeben.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>newColumnIndex</codeph></entry><entry>Die auf null basierende Spaltenindexposition der Position des Einfügezeichens nach der Änderung. Sie hat den Wert „-1“, wenn der <codeph>selectionMode</codeph> zeilenbasiert ist.</entry></row><row><entry><codeph>newRowIndex</codeph></entry><entry>Die auf null basierende Zeilenindexposition der Position des Einfügezeichens nach der Änderung.</entry></row><row><entry><codeph>oldColumnIndex</codeph></entry><entry>Die auf null basierende Spaltenindexposition der Position des Einfügezeichens vor der Änderung. Sie hat den Wert „-1“, wenn der <codeph>selectionMode</codeph> zeilenbasiert ist.</entry></row><row><entry><codeph>oldRowIndex</codeph></entry><entry>Die auf null basierende Zeilenindexposition der Position des Einfügezeichens vor der Änderung.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GridCaretEvent.CARET_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridCaretEvent:newColumnIndex"><apiName>newColumnIndex</apiName><shortdesc>
      Die auf null basierende Spaltenindexposition der Position des Einfügezeichens nach der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die auf null basierende Spaltenindexposition der Position des Einfügezeichens nach der Änderung.  
     
      <p>Wenn als <codeph>selectionMode</codeph> <codeph>SelectionMode.SINGLE_ROW</codeph> oder <codeph>SelectionMode.MULTIPLE_ROWS</codeph> eingestellt ist, nimmt dies den Wert -1 an, um anzuzeigen, dass dies nicht verwendet wird.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/columns"><linktext>spark.components.DataGrid.columns</linktext></link><link href="spark.components.xml#Grid/columns"><linktext>spark.components.Grid.columns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridCaretEvent:newRowIndex"><apiName>newRowIndex</apiName><shortdesc>
      Die auf null basierende Zeilenindexposition der Position des Einfügezeichens nach der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die auf null basierende Zeilenindexposition der Position des Einfügezeichens nach der Änderung.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#Grid/dataProvider"><linktext>spark.components.Grid.dataProvider</linktext></link></related-links></apiValue><apiValue id="spark.events:GridCaretEvent:oldColumnIndex"><apiName>oldColumnIndex</apiName><shortdesc>
      Die auf null basierende Spaltenindexposition der Position des Einfügezeichens vor der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die auf null basierende Spaltenindexposition der Position des Einfügezeichens vor der Änderung.      
     
      <p>Wenn für <codeph>selectionMode</codeph> is <codeph>SelectionMode.SINGLE_ROW</codeph> oder <codeph>SelectionMode.MULTIPLE_ROWS</codeph> eingestellt ist, ist dieser Wert -1, um anzuzeigen, dass dies nicht verwendet wird.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/columns"><linktext>spark.components.DataGrid.columns</linktext></link><link href="spark.components.xml#Grid/columns"><linktext>spark.components.Grid.columns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridCaretEvent:oldRowIndex"><apiName>oldRowIndex</apiName><shortdesc>
      Die auf null basierende Zeilenindexposition der Position des Einfügezeichens vor der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Die auf null basierende Zeilenindexposition der Position des Einfügezeichens vor der Änderung.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#Grid/dataProvider"><linktext>spark.components.Grid.dataProvider</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:DropDownEvent"><apiName>DropDownEvent</apiName><shortdesc>
  Die DropdownEvent-Klasse stellt das Ereignisobjekt dar, das für open- und close-Ereignisse an den Ereignis-Listener übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DropdownEvent-Klasse stellt das Ereignisobjekt dar, das für <codeph>open</codeph>- und <codeph>close</codeph>-Ereignisse an den Ereignis-Listener übergeben wird.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:DropDownEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:DropDownEvent:CLOSE</apiEventType><adobeApiEventClassifier>spark.events:DropDownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:DropDownEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:DropDownEvent:OPEN</apiEventType><adobeApiEventClassifier>spark.events:DropDownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:DropDownEvent:DropDownEvent"><apiName>DropDownEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Ein Wert, der den Typ der Eingabeaktion angibt, durch die das Ereignis ausgelöst wurde.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:DropDownEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      Die DropdownEvent.CLOSE-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein close-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>DropdownEvent.CLOSE</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>close</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Ein Wert, der den Typ der Eingabeaktion angibt, durch die das Ereignis ausgelöst wurde.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:DropDownEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
      Die DropdownEvent.OPEN-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein open-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>DropdownEvent.OPEN</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>open</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Ein Wert, der den Typ der Eingabeaktion angibt, durch die das Ereignis ausgelöst wurde.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:DropDownEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Wenn das Steuerelement durch eine Benutzeraktion geöffnet oder geschlossen wird, enthält diese Eigenschaft einen Wert, der den Typ der Eingabeaktion angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Wenn das Steuerelement durch eine Benutzeraktion geöffnet oder geschlossen wird, enthält diese Eigenschaft einen Wert, der den Typ der Eingabeaktion angibt. Der Wert lautet entweder <codeph>InteractionInputType.MOUSE</codeph> oder <codeph>InteractionInputType.KEYBOARD</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:IndexChangeEvent"><apiName>IndexChangeEvent</apiName><shortdesc>
  Die IndexChangeEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich in einer Spark-Komponente eine Indexposition ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die IndexChangeEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich in einer Spark-Komponente eine Indexposition ändert.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#ListBase"><linktext>spark.components.supportClasses.ListBase</linktext></link><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link></related-links><adobeApiEvent id="spark.events:IndexChangeEvent:CARET_CHANGE_caretChange"><apiName>caretChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:IndexChangeEvent:CARET_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:IndexChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:IndexChangeEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:IndexChangeEvent:CHANGE</apiEventType><adobeApiEventClassifier>spark.events:IndexChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:IndexChangeEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:IndexChangeEvent:CHANGING</apiEventType><adobeApiEventClassifier>spark.events:IndexChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:IndexChangeEvent:IndexChangeEvent"><apiName>IndexChangeEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die auf null basierende Indexposition vor der Änderung.
     
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die auf null basierende Indexposition nach der Änderung.
     
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:IndexChangeEvent:CARET_CHANGE"><apiName>CARET_CHANGE</apiName><shortdesc>
      Die IndexChangeEvent.CARET_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein caretChange-Ereignis, das angibt, dass das aktuell im Fokus befindliche Objekt im Begriff ist, sich zu ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>caretChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>IndexChangeEvent.CARET_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>caretChange</codeph>-Ereignis, das angibt, dass das aktuell im Fokus befindliche Objekt im Begriff ist, sich zu ändern. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Die auf null basierende Indexposition des ausgewählten Elements nach der Änderung.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Die auf null basierende Indexposition des ausgewählten Elements vor der Änderung.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>IndexChangeEvent.CARET_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      Die IndexChangeEvent.CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts eines Change-Ereignisses. Mit diesem Ereignis wird angegeben, dass sich eine Indexposition geändert hat, z. B. wenn sich bei einem listenbasierten Steuerelement die Auswahl ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>IndexChangeEvent.CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts eines <codeph>Change</codeph>-Ereignisses. Mit diesem Ereignis wird angegeben, dass sich eine Indexposition geändert hat, z. B. wenn sich bei einem listenbasierten Steuerelement die Auswahl ändert. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Die auf null basierende Indexposition nach der Änderung.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Die auf null basierende Indexposition vor der Änderung.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>IndexChangeEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      Die IndexChangeEvent.CHANGING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein changing-Ereignis. Mit diesem Ereignis wird angegeben, dass sich die aktuelle Auswahl demnächst ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>IndexChangeEvent.CHANGING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>changing</codeph>-Ereignis. Mit diesem Ereignis wird angegeben, dass sich die aktuelle Auswahl demnächst ändert. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Die auf null basierende Indexposition des ausgewählten Elements nach der Änderung.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Die auf null basierende Indexposition des ausgewählten Elements vor der Änderung.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>IndexChangeEvent.CHANGING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:newIndex"><apiName>newIndex</apiName><shortdesc>
      Die auf null basierende Indexposition nach der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die auf null basierende Indexposition nach der Änderung. Bei <codeph>change</codeph>-Ereignissen handelt es sich um die Indexposition des aktuellen, untergeordneten Elements.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:IndexChangeEvent:oldIndex"><apiName>oldIndex</apiName><shortdesc>
      Die auf null basierende Indexposition vor der Änderung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die auf null basierende Indexposition vor der Änderung. Bei <codeph>change</codeph>-Ereignissen handelt es sich um die Indexposition des vorherigen untergeordneten Elements. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridItemEditorEvent"><apiName>GridItemEditorEvent</apiName><shortdesc>
  Die GridItemEditorEvent-Klasse stellt Ereignisse dar, die im Lebenszyklus eines Elementeditors ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die GridItemEditorEvent-Klasse stellt Ereignisse dar, die im Lebenszyklus eines Elementeditors ausgelöst werden.
 
  <p>Am Anfang des Lebenszyklus steht die Auslösung eines <codeph> GRID_ITEM_EDITOR_SESSION_STARTING</codeph>-Ereignisses. Sie können das Ereignis abbrechen und damit die Bearbeitungssitzung beenden, indem Sie im Ereignis-Listener die <codeph>preventDefault()</codeph>-Methode aufrufen.</p>
 
  <p>Nach dem Öffnen des Elementeditors wird <codeph>GRID_ITEM_EDITOR_SESSION_START</codeph> ausgelöst, um die Listener darauf hinzuweisen, dass der Editor geöffnet wurde.</p>
 
  <p>Die Bearbeitungssitzung kann gespeichert oder abgebrochen werden. Wenn die Sitzung gespeichert wird, wird das <codeph>GRID_ITEM_EDITOR_SESSION_SAVE</codeph>-Ereignis ausgelöst. Wenn der Editor abgebrochen wird, wird ein <codeph>GRID_ITEM_EDITOR_SESSION_CANCEL</codeph>-Ereignis ausgelöst. </p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.gridClasses.xml#IGridItemEditor"><linktext>spark.components.gridClasses.IGridItemEditor</linktext></link><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/itemEditor"><linktext>spark.components.gridClasses.GridColumn.itemEditor</linktext></link></related-links><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_CANCEL_gridItemEditorSessionCancel"><apiName>gridItemEditorSessionCancel</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_CANCEL</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_SAVE_gridItemEditorSessionSave"><apiName>gridItemEditorSessionSave</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_SAVE</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_STARTING_gridItemEditorSessionStarting"><apiName>gridItemEditorSessionStarting</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_STARTING</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_START_gridItemEditorSessionStart"><apiName>gridItemEditorSessionStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_START</apiEventType><adobeApiEventClassifier>spark.events:GridItemEditorEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></adobeApiEvent><apiConstructor id="spark.events:GridItemEditorEvent:GridItemEditorEvent"><apiName>GridItemEditorEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="uint"/><apiData>-1</apiData><apiDesc>Die auf null basierende Indexposition der Spalte, die bearbeitet wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="uint"/><apiData>-1</apiData><apiDesc>Die auf null basierende Indexposition der Spalte, die bearbeitet wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>column</apiItemName><apiOperationClassifier>spark.components.gridClasses:GridColumn</apiOperationClassifier><apiData>null</apiData><apiDesc>Die zu bearbeitende Spalte.
       
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiConstructor><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_CANCEL"><apiName>GRID_ITEM_EDITOR_SESSION_CANCEL</apiName><shortdesc>
      Die GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_CANCEL-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein cancelridItemEditor-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionCancel</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_CANCEL</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>cancelridItemEditor</codeph>. Wird ausgelöst, wenn der Elementeditor geschlossen wurde, ohne dass die Daten gespeichert wurden.  
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Der auf null basierende Spaltenindex des Elements, das zwar bearbeitet, aber nicht geändert wurde.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Der auf null basierende Zeilenindex des Elements, das zwar bearbeitet, aber nicht geändert wurde.</entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte der Zelle, die bearbeitet wurde.
         </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_CANCEL</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_SAVE"><apiName>GRID_ITEM_EDITOR_SESSION_SAVE</apiName><shortdesc>
      Die GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_SAVE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein saveGridItemEditor-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionSave</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_SAVE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>saveGridItemEditor</codeph>-Ereignis. Wird ausgelöst, nachdem die Daten des Elementeditors im Datenprovider gespeichert und der Editor geschlossen wurde.  
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Der auf null basierende Spaltenindex des Elements, das geändert wurde.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Der auf null basierende Zeilenindex des Elements, das geändert wurde.</entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte der Zelle, die bearbeitet wurde.
         </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_SAVE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_STARTING"><apiName>GRID_ITEM_EDITOR_SESSION_STARTING</apiName><shortdesc>
      Die GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_STARTING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein startGridItemEditorSession-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionStarting</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_STARTING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>startGridItemEditorSession</codeph>-Ereignis. Wird ausgelöst, wenn eine neue Elementeditorsitzung angefordert wurde. Ein Listener kann dynamisch ermitteln, ob eine Zelle bearbeitet werden kann, und, wenn dies nicht der Fall ist, die Bearbeitung durch Aufrufen der <codeph>preventDefault()</codeph>-Methode abbrechen. Ein Listener kann außerdem einer Spalte in einem Raster einen anderen Elementeditor zuweisen und dadurch den verwendeten Editor dynamisch wechseln.
     
      <p>Wenn das Ereignis abgebrochen wird, wird der Elementeditor nicht erstellt.</p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Der auf null basierende Spaltenindex des angeforderten Elementeditors.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Der auf null basierende Zeilenindex des angeforderten Elementeditors.</entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte der zur Bearbeitungsanforderung gehörigen Zelle.
         </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_STARTING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:GRID_ITEM_EDITOR_SESSION_START"><apiName>GRID_ITEM_EDITOR_SESSION_START</apiName><shortdesc>
      Die GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein openGridItemEditor-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridItemEditorSessionStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>openGridItemEditor</codeph>-Ereignis. Wird direkt nach dem Öffnen des Elementeditors ausgelöst. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Der auf null basierende Spaltenindex des Elementeditors.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Der auf null basierende Zeilenindex des Elementeditors.</entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte der Zelle, die bearbeitet wird.
         </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>
         GridItemEditorEvent.GRID_ITEM_EDITOR_SESSION_START</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link></related-links></apiValue><apiValue id="spark.events:GridItemEditorEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc> 
      Die auf null basierende Indexposition der Spalte, die bearbeitet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc> 
      Die auf null basierende Indexposition der Spalte, die bearbeitet wird.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridItemEditorEvent:column"><apiName>column</apiName><shortdesc>
      Die Spalte der Zelle, die bearbeitet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:GridColumn</apiValueClassifier></apiValueDef><apiDesc>
      Die Spalte der Zelle, die bearbeitet wird.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridItemEditorEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Die Indexposition der Zeile, die bearbeitet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition der Zeile, die bearbeitet wird.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:TextOperationEvent"><apiName>TextOperationEvent</apiName><shortdesc>
  Die TextOperationEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich Textinhalte durch Benutzervorgänge wie das Einfügen von Zeichen, das Drücken der Rücktaste, das Einfügen oder das Ändern von Textattributen ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die TextOperationEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich Textinhalte durch Benutzervorgänge wie das Einfügen von Zeichen, das Drücken der Rücktaste, das Einfügen oder das Ändern von Textattributen ändern.
  
  <p>Dieses Ereignis wird von Unterklassen der SkinnableTextBase-Klasse ausgelöst. Hierzu zählen RichEditableText und Klassen, die RichEditableText wie ComboBox und TextInput oder TextArea verwenden. Textsteuerelemente ohne Benutzerinteraktionen, z. B. RichText und Label lösen keine derartigen Ereignisse aus.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#RichEditableText"><linktext>spark.components.RichEditableText</linktext></link><link href="spark.components.xml#TextArea"><linktext>spark.components.TextArea</linktext></link><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.components.xml#TextInput"><linktext>spark.components.TextInput</linktext></link><link href="spark.components.supportClasses.xml#SkinnableTextBase"><linktext>spark.components.supportClasses.SkinnableTextBase</linktext></link></related-links><adobeApiEvent id="spark.events:TextOperationEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TextOperationEvent:CHANGE</apiEventType><adobeApiEventClassifier>spark.events:TextOperationEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TextOperationEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TextOperationEvent:CHANGING</apiEventType><adobeApiEventClassifier>spark.events:TextOperationEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:TextOperationEvent:TextOperationEvent"><apiName>TextOperationEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>operation</apiItemName><apiType value="flashx.textLayout.operations:FlowOperation"/><apiData>null</apiData><apiDesc>Das FlowOperation-Objekt, das den Bearbeitungsvorgang darstellt, den der Benutzer am Text ausführt.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:TextOperationEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      Die TextOperationEvent.CHANGE-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein change-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TextOperationEvent.CHANGE</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>change</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>operation</codeph></entry><entry>Das FlowOperation-Objekt, das den Bearbeitungsvorgang beschreibt, den der Benutzer am Text ausführt.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TextOperationEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      Die TextOperationEvent.CHANGING-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein changing-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TextOperationEvent.CHANGING</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>changing</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>operation</codeph></entry><entry>Das FlowOperation-Objekt, das den Bearbeitungsvorgang beschreibt, den der Benutzer am Text ausführt.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TextOperationEvent:operation"><apiName>operation</apiName><shortdesc>
      Das FlowOperation-Objekt, das den Bearbeitungsvorgang darstellt, den der Benutzer am Text ausführt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flashx.textLayout.operations:FlowOperation"/></apiValueDef><apiDesc>
      Das FlowOperation-Objekt, das den Bearbeitungsvorgang darstellt, den der Benutzer am Text ausführt.
     
      <p>Dabei kann es sich um InsertTextOperation, DeleteTextOperation, SplitParagraphOperation, CutOperation, PasteOperation, UndoOperation oder sonstige Unterklassen von FlowOperation handeln.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flashx.textLayout.operations.InsertTextOperation.xml"><linktext>flashx.textLayout.operations.InsertTextOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.DeleteTextOperation.xml"><linktext>flashx.textLayout.operations.DeleteTextOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.SplitParagraphOperation.xml"><linktext>flashx.textLayout.operations.SplitParagraphOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.PasteOperation.xml"><linktext>flashx.textLayout.operations.PasteOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.CutOperation.xml"><linktext>flashx.textLayout.operations.CutOperation</linktext></link><link href="" invalidHref="flashx.textLayout.operations.UndoOperation.xml"><linktext>flashx.textLayout.operations.UndoOperation</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:RendererExistenceEvent"><apiName>RendererExistenceEvent</apiName><shortdesc>
  Die RendererExistenceEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn ein Renderer einer Spark DataGroup hinzugefügt oder entfernt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die RendererExistenceEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn ein Renderer einer Spark DataGroup hinzugefügt oder entfernt wird.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGroup"><linktext>spark.components.DataGroup</linktext></link></related-links><adobeApiEvent id="spark.events:RendererExistenceEvent:RENDERER_ADD_rendererAdd"><apiName>rendererAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:RendererExistenceEvent:RENDERER_ADD</apiEventType><adobeApiEventClassifier>spark.events:RendererExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:RendererExistenceEvent:RENDERER_REMOVE_rendererRemove"><apiName>rendererRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:RendererExistenceEvent:RENDERER_REMOVE</apiEventType><adobeApiEventClassifier>spark.events:RendererExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:RendererExistenceEvent:RendererExistenceEvent"><apiName>RendererExistenceEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>renderer</apiItemName><apiType value="mx.core:IVisualElement"/><apiData>null</apiData><apiDesc>Verweis auf den Elementrenderer, der hinzugefügt oder entfernt wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Indexposition im Datenprovider, an der der Renderer hinzugefügt oder entfernt wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Das Datenobjekt, das vom Renderer angezeigt wird. 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:RendererExistenceEvent:RENDERER_ADD"><apiName>RENDERER_ADD</apiName><shortdesc>
      Die RendererExistenceEvent.Renderer_ADD-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein rendererAdd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rendererAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>RendererExistenceEvent.Renderer_ADD</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>rendererAdd</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>data</codeph></entry><entry>Das Datenobjekt, das vom Renderer angezeigt wird. </entry></row><row><entry><codeph>index</codeph></entry><entry>Die Indexposition des Datenproviders für den hinzugefügten Renderer.</entry></row><row><entry><codeph>renderer</codeph></entry><entry>Enthält einen Verweis auf den hinzugefügten Renderer.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:RENDERER_REMOVE"><apiName>RENDERER_REMOVE</apiName><shortdesc>
      Die RendererExistenceEvent.RENDERER_REMOVE-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein rendererRemove-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rendererRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>RendererExistenceEvent.RENDERER_REMOVE</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>rendererRemove</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>data</codeph></entry><entry>Das Datenobjekt, das vom Renderer angezeigt wurde. </entry></row><row><entry><codeph>index</codeph></entry><entry>Die Indexposition des Datenproviders für den Renderer, der entfernt wird.</entry></row><row><entry><codeph>renderer</codeph></entry><entry>Enthält einen Verweis auf den Renderer, der entfernt wird.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:data"><apiName>data</apiName><shortdesc>
      Das Datenobjekt des Renderers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Das Datenobjekt des Renderers.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:index"><apiName>index</apiName><shortdesc>
      Die Indexposition, an der der Elementrenderer hinzugefügt oder entfernt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition, an der der Elementrenderer hinzugefügt oder entfernt wurde.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:RendererExistenceEvent:renderer"><apiName>renderer</apiName><shortdesc>
      Verweis auf den Elementrenderer, der hinzugefügt oder entfernt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:IVisualElement"/></apiValueDef><apiDesc>
      Verweis auf den Elementrenderer, der hinzugefügt oder entfernt wurde.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:ListEvent"><apiName>ListEvent</apiName><shortdesc>
  Durch ListBase-Komponenten als Reaktion auf MouseEvents ausgelöste ListEvents werden mit den Eigenschaften des eingehenden Mausereignisses erstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Durch ListBase-Komponenten als Reaktion auf MouseEvents ausgelöste ListEvents werden mit den Eigenschaften des eingehenden Mausereignisses erstellt. Die x/y-Position des Rasterereignisses, d. h., der Wert der localX- und der localY-Eigenschaft, wird in Bezug auf die gesamte Kompontente und nicht nur auf den Teil der Kompontente definiert, der per Bildlauf in die Ansicht geholt wurde. Analog dazu entsprechen Zeilen- und Spaltenindexpositionen unter Umständen einer Zelle, die nicht per Bildlauf in die Ansicht geholt wurde.
 
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:ListEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ListEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>spark.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:ListEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ListEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>spark.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:ListEvent:ListEvent"><apiName>ListEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Unterscheidet die Mausinteraktion, die das Auslösen dieses Ereignisses verursacht hat:
     
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Die x-Koordinate des Ereignisses bezogen auf die Liste.
     
      </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Die y-Koordinate des Ereignisses bezogen auf die Liste.
     
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Die <codeph>relatedObject</codeph>-Eigenschaft des MouseEvent, das dieses ListEvent ausgelöst hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob die Strg-Taste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Gibt an, ob die Alt-Taste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Gibt an, ob die Umschalttaste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Gibt an, ob die Strg-Taste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>spark.components:IItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Nicht verwendet.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor. Wird normalerweise durch das Flex-Steuerelement aufgerufen und nicht im Anwendungscode verwendet.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:ListEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      Die ListEvent.ITEM_ROLL_OUT-Konstante definiert den Wert der type-Eigenschaft des ListEvent-Objekts für ein itemRollOut-Ereignis. Mit diesem Ereignis wird angegeben, dass ein Rollout aus einem visuellen Element des Steuerelements erfolgte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die ListEvent.ITEM_ROLL_OUT-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des ListEvent-Objekts für ein <codeph>itemRollOut</codeph>-Ereignis. Mit diesem Ereignis wird angegeben, dass ein Rollout aus einem visuellen Element des Steuerelements erfolgte.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>itemIndex</codeph></entry><entry>Der vom Elementrenderer an der Stelle angezeigte Datenproviderindex, wo das Ereignis auftrat.</entry></row><row><entry><codeph>item</codeph></entry><entry>Das Datenproviderelement für den Elementrenderer.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der dieses Element angezeigt hat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>ListEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      Die ListEvent.ITEM_ROLL_OVER-Konstante definiert den Wert der type-Eigenschaft des ListEvent-Objekts für ein itemRollOver-Ereignis. Mit diesem Ereignis wird angegeben, dass ein Rollover über ein visuelles Element im Steuerelement erfolgte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die ListEvent.ITEM_ROLL_OVER-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des ListEvent-Objekts für ein <codeph>itemRollOver</codeph>-Ereignis. Mit diesem Ereignis wird angegeben, dass ein Rollover über ein visuelles Element im Steuerelement erfolgte.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>itemIndex</codeph></entry><entry>Der vom Elementrenderer an der Stelle angezeigte Datenproviderindex, wo das Ereignis auftrat.</entry></row><row><entry><codeph>item</codeph></entry><entry>Das Datenproviderelement für den Elementrenderer.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der dieses Element angezeigt hat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>Typ</codeph></entry><entry>ListEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:itemIndex"><apiName>itemIndex</apiName><shortdesc>
      Die Indexposition des vom Elementrenderer angezeigten Datenelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition des vom Elementrenderer angezeigten Datenelements. Sie können mit dieser Eigenschaft auf das Datenproviderelement zugreifen. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Der Elementrenderer, der das Element anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:IItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Der Elementrenderer, der das Element anzeigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ListEvent:item"><apiName>item</apiName><shortdesc>
      Das Datenproviderelement, das vom Elementrenderer angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.2"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Das Datenproviderelement, das vom Elementrenderer angezeigt wird.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:ElementExistenceEvent"><apiName>ElementExistenceEvent</apiName><shortdesc>
  Die ElementExistenceEvent-Klasse stellt die Ereignisse dar, die ausgelöst werden, wenn ein Element einer Gruppe erstellt oder entfernt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ElementExistenceEvent-Klasse stellt die Ereignisse dar, die ausgelöst werden, wenn ein Element einer Gruppe erstellt oder entfernt wird. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Group"><linktext>spark.components.Group</linktext></link></related-links><adobeApiEvent id="spark.events:ElementExistenceEvent:ELEMENT_ADD_elementAdd"><apiName>elementAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ElementExistenceEvent:ELEMENT_ADD</apiEventType><adobeApiEventClassifier>spark.events:ElementExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:ElementExistenceEvent:ELEMENT_REMOVE_elementRemove"><apiName>elementRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:ElementExistenceEvent:ELEMENT_REMOVE</apiEventType><adobeApiEventClassifier>spark.events:ElementExistenceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:ElementExistenceEvent:ElementExistenceEvent"><apiName>ElementExistenceEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>element</apiItemName><apiType value="mx.core:IVisualElement"/><apiData>null</apiData><apiDesc>Ein Verweis auf das Element, das hinzugefügt oder entfernt wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Die Indexposition, an der das Element hinzugefügt oder entfernt wurde.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:ElementExistenceEvent:ELEMENT_ADD"><apiName>ELEMENT_ADD</apiName><shortdesc>
      Die ElementExistenceEvent.ELEMENT_ADD-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein elementAdd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>elementAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>ElementExistenceEvent.ELEMENT_ADD</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>elementAdd</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>element</codeph></entry><entry>Enthält einen Verweis auf das hinzugefügte visuelle Element.</entry></row><row><entry><codeph>index</codeph></entry><entry>Die Indexposition, an der das visuelle Element hinzugefügt wurde.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ElementExistenceEvent:ELEMENT_REMOVE"><apiName>ELEMENT_REMOVE</apiName><shortdesc>
      Die ElementExistenceEvent.ELEMENT_REMOVE-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein elementRemove-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>elementRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>ElementExistenceEvent.ELEMENT_REMOVE</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>elementRemove</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>element</codeph></entry><entry>Ein Verweis auf das visuelle Element, das entfernt wird.</entry></row><row><entry><codeph>index</codeph></entry><entry>Die Indexposition des visuellen Elements, das entfernt wird.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ElementExistenceEvent:element"><apiName>element</apiName><shortdesc>
      Ein Verweis auf das visuelle Element, das hinzugefügt oder entfernt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:IVisualElement"/></apiValueDef><apiDesc>
      Ein Verweis auf das visuelle Element, das hinzugefügt oder entfernt wurde.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:ElementExistenceEvent:index"><apiName>index</apiName><shortdesc>
      Die Indexposition, an der das Element hinzugefügt oder entfernt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition, an der das Element hinzugefügt oder entfernt wurde.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridSortEvent"><apiName>GridSortEvent</apiName><shortdesc>
  Die GridSortEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn der Datenprovider eines Spark-DataGrid-Steuerelements sortiert wird, weil der Benutzer auf die Überschrift einer Spalte im DataGrid geklickt hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die GridSortEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn der Datenprovider eines Spark-DataGrid-Steuerelements sortiert wird, weil der Benutzer auf die Überschrift einer Spalte im DataGrid geklickt hat.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.gridClasses.xml#GridColumn"><linktext>spark.components.gridClasses.GridColumn</linktext></link><link href="spark.components.xml#GridColumnHeaderGroup"><linktext>spark.components.GridColumnHeaderGroup</linktext></link></related-links><adobeApiEvent id="spark.events:GridSortEvent:SORT_CHANGE_sortChange"><apiName>sortChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSortEvent:SORT_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:GridSortEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridSortEvent:SORT_CHANGING_sortChanging"><apiName>sortChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSortEvent:SORT_CHANGING</apiEventType><adobeApiEventClassifier>spark.events:GridSortEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></adobeApiEvent><apiConstructor id="spark.events:GridSortEvent:GridSortEvent"><apiName>GridSortEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndices</apiItemName><apiType value="Vector$int"/><apiDesc>Vektor von Spaltenindexpositionen der sortierten Spalten.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldSortFields</apiItemName><apiType value="Array"/><apiDesc>Das Array von ISortFields für die letzte Sortierung.
     
      </apiDesc></apiParam><apiParam><apiItemName>newSortFields</apiItemName><apiType value="Array"/><apiDesc>Das Array von ISortFields für diese Sortierung.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:GridSortEvent:SORT_CHANGE"><apiName>SORT_CHANGE</apiName><shortdesc>
      Die GridSortEvent.SORT_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein sortChange-Ereignis, wobei angegeben wird, dass ein Sortierungsfilter auf die dataProvider-Sammlung des Rasters angewendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>sortChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridSortEvent.SORT_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>sortChange</codeph>-Ereignis. Dieses zeigt an, dass ein Sortierfilter auf die <codeph>dataProvider</codeph>-Sammlung des Rasters angewendet wurde.
     
      <p>Wenn eine Spaltenüberschrift durch einen Mausklick ausgelöst wird, ist die letzte Indexposition der <codeph>columnIndices</codeph> in der Regel die Indexposition der Spalte. Beachten Sie, dass interaktive Sortierungen nicht unbedingt von einem Mausklick ausgelöst werden.</p>
     
      <p>Dieses Ereignis wird ausgelöst, wenn der Benutzer mit dem Steuerelement interagiert. Wenn Sie die Sammlung des Datenproviders programmgesteuert sortieren, löst die Komponente kein <codeph>sortChange</codeph>-Ereignis aus. </p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndices</codeph></entry><entry>Vektor von Spaltenindexpositionen der sortierten Spalten.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myDataGrid.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert myDataGrid auf. </entry></row><row><entry><codeph>newSortFields</codeph></entry><entry>Das Array von ISortFields für diese Sortierung.</entry></row><row><entry><codeph>oldSortFields</codeph></entry><entry>Das Array von ISortFields für die letzte Sortierung.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SORT_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:SORT_CHANGING"><apiName>SORT_CHANGING</apiName><shortdesc>
      Die GridSortEvent.SORT_CHANGING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein sortChanging-Ereignis, wobei angegeben wird, dass ein Sortierungsfilter in Kürze auf die dataProvider-Sammlung des Rasters angewendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>sortChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridSortEvent.SORT_CHANGING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>sortChanging</codeph>-Ereignis, wobei angegeben wird, dass ein Sortierungsfilter in Kürze auf die <codeph>dataProvider</codeph>-Sammlung des Rasters angewendet wird. Rufen Sie preventDefault() für dieses Ereignis auf, um die Sortierung zu verhindern, oder ändern Sie <codeph>columnIndices</codeph> und <codeph>newSortFields</codeph>, wenn Sie das Standardverhalten der Sortierung ändern wollen.
     
      <p>Wenn eine Spaltenüberschrift durch einen Mausklick ausgelöst wird, ist die letzte Indexposition der <codeph>columnIndices</codeph> in der Regel die Indexposition der Spalte. Beachten Sie, dass interaktive Sortierungen nicht unbedingt von einem Mausklick ausgelöst werden.</p>
     
      <p>Dieses Ereignis wird ausgelöst, wenn der Benutzer mit dem Steuerelement interagiert. Wenn Sie die Sammlung des Datenproviders programmgesteuert sortieren, löst die Komponente kein <codeph>sortChanging</codeph>-Ereignis aus. </p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndices</codeph></entry><entry>Vektor der Spaltenindexpositionen der sortierten Spalten.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myDataGrid.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert myDataGrid auf. </entry></row><row><entry><codeph>newSortFields</codeph></entry><entry>Das Array von ISortFields für diese Sortierung.</entry></row><row><entry><codeph>oldSortFields</codeph></entry><entry>Das Array von ISortFields für die letzte Sortierung.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SORT_CHANGING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.xml#DataGrid/sortByColumns"><linktext>spark.components.DataGrid.sortByColumns</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:columnIndices"><apiName>columnIndices</apiName><shortdesc>
      Vektor von Spaltenindexpositionen der sortierten Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Vector$int"/></apiValueDef><apiDesc>
      Vektor von Spaltenindexpositionen der sortierten Spalten. Wenn der <codeph>Typ</codeph> <codeph>GridSelectionEvent.SORT_CHANGING</codeph> ist, kann dieser Wert modifiziert werden und zur Aktualisierung der <codeph>columnHeaderGroup</codeph> <codeph>visibleSortIndicatorIndices</codeph> des Rasters verwendet werden.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/columnHeaderGroup"><linktext>spark.components.DataGrid.columnHeaderGroup</linktext></link><link href="spark.components.xml#GridColumnHeaderGroup/visibleSortIndicatorIndices"><linktext>spark.components.GridColumnHeaderGroup.visibleSortIndicatorIndices</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/columnIndex"><linktext>spark.components.gridClasses.GridColumn.columnIndex</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:newSortFields"><apiName>newSortFields</apiName><shortdesc>
      Das Array von ISortFields für diese Sortierung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Das Array von ISortFields für diese Sortierung. Wenn der <codeph>Typ</codeph> <codeph>GridSelectionEvent.SORT_CHANGING</codeph> ist, kann dieser Wert modifiziert werden. Er wird dazu verwendet, den <codeph>dataProvider</codeph> des Rasters zu sortieren.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortCompareFunction"><linktext>spark.components.gridClasses.GridColumn.sortCompareFunction</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortDescending"><linktext>spark.components.gridClasses.GridColumn.sortDescending</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortField"><linktext>spark.components.gridClasses.GridColumn.sortField</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSortEvent:oldSortFields:get"><apiName>oldSortFields</apiName><shortdesc>
      Das Array von ISortFields für die letzte Sortierung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Das Array von ISortFields für die letzte Sortierung. Dies kann <codeph>null</codeph> sein. Die Elemente in diesem Array sollten nicht modifiziert werden.  
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/dataProvider"><linktext>spark.components.DataGrid.dataProvider</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortCompareFunction"><linktext>spark.components.gridClasses.GridColumn.sortCompareFunction</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortDescending"><linktext>spark.components.gridClasses.GridColumn.sortDescending</linktext></link><link href="spark.components.gridClasses.xml#GridColumn/sortField"><linktext>spark.components.gridClasses.GridColumn.sortField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:LoaderInvalidationEvent"><apiName>LoaderInvalidationEvent</apiName><shortdesc>
  Die LoaderInvalidationEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, um ContentRequest-Instanzen darauf hinzuweisen, dass die ursprüngliche Anforderung ungültig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die LoaderInvalidationEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, um ContentRequest-Instanzen darauf hinzuweisen, dass die ursprüngliche Anforderung ungültig ist.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="spark.events:LoaderInvalidationEvent:INVALIDATE_LOADER_invalidateLoader"><apiName>invalidateLoader</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:LoaderInvalidationEvent:INVALIDATE_LOADER</apiEventType><adobeApiEventClassifier>spark.events:LoaderInvalidationEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:LoaderInvalidationEvent:LoaderInvalidationEvent"><apiName>LoaderInvalidationEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>content</apiItemName><apiType value="any"/><apiDesc>Inhalt, für den wir ungültig machen. 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:LoaderInvalidationEvent:INVALIDATE_LOADER"><apiName>INVALIDATE_LOADER</apiName><shortdesc>
      Die LoaderInvalidationEvent.INVALIDATE_LOADER-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein invalidateLoader-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalidateLoader</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>LoaderInvalidationEvent.INVALIDATE_LOADER</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>invalidateLoader</codeph>-Ereignis. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>Inhalt</codeph></entry><entry>Der Inhalt, für den die Inhaltsanforderung ungültig gemacht wird.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myDataGrid.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert myDataGrid auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>LoaderInvalidationEvent.INVALIDATE_LOADER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:LoaderInvalidationEvent:content"><apiName>content</apiName><shortdesc>
      Der Inhalt, für den die Inhaltsanforderung ungültig gemacht wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef><apiDesc>
      Der Inhalt, für den die Inhaltsanforderung ungültig gemacht wird.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridSelectionEvent"><apiName>GridSelectionEvent</apiName><shortdesc>
  Die GridSelectionEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich die Auswahl in Folge einer Benutzerinteraktion in einem Spark-DataGrid-Steuerelement ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die GridSelectionEvent-Klasse stellt Ereignisse dar, die ausgelöst werden, wenn sich die Auswahl in Folge einer Benutzerinteraktion in einem Spark-DataGrid-Steuerelement ändert.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.events.xml#GridSelectionEventKind"><linktext>spark.events.GridSelectionEventKind</linktext></link><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.xml#Grid"><linktext>spark.components.Grid</linktext></link></related-links><adobeApiEvent id="spark.events:GridSelectionEvent:SELECTION_CHANGE_selectionChange"><apiName>selectionChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSelectionEvent:SELECTION_CHANGE</apiEventType><adobeApiEventClassifier>spark.events:GridSelectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridSelectionEvent:SELECTION_CHANGING_selectionChanging"><apiName>selectionChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridSelectionEvent:SELECTION_CHANGING</apiEventType><adobeApiEventClassifier>spark.events:GridSelectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></adobeApiEvent><apiConstructor id="spark.events:GridSelectionEvent:GridSelectionEvent"><apiName>GridSelectionEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata><asCustoms><spark.events.GridSelectionEventKind>
     
      </spark.events.GridSelectionEventKind></asCustoms></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Die Art des sich ändernden Ereignisses. Die gültigen Werte werden in der <codeph>GridSelectionEventKind</codeph>-Klasse als Konstanten definiert. Dieser Wert bestimmt, welche Eingenschaften im Ereignis verwendet werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>selectionChange</apiItemName><apiOperationClassifier>spark.components.gridClasses:CellRegion</apiOperationClassifier><apiData>null</apiData><apiDesc>Die vorgeschlagene oder akzeptierte Änderung an der aktuellen Auswahl. Bestimmen Sie mithilfe der Spark-DataGrid-Auswahlmethoden die aktuelle Auswahl.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></apiConstructor><apiValue id="spark.events:GridSelectionEvent:SELECTION_CHANGE"><apiName>SELECTION_CHANGE</apiName><shortdesc>
      Die GridSelectionEvent.SELECTION_CHANGE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein selectionChange-Ereignis, das anzeigt, welche aktuelle Auswahl geändert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridSelectionEvent.SELECTION_CHANGE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>selectionChange</codeph>-Ereignis, das anzeigt, welche aktuelle Auswahl geändert wurde.
     
      <p>Dieses Ereignis wird ausgelöst, wenn der Benutzer mit dem Steuerelement interagiert. Wenn Sie die Sammlung des Datenproviders programmgesteuert sortieren, löst die Komponente kein <codeph>selectionChange</codeph>-Ereignis aus. </p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry>kind<codeph/></entry><entry>Die Art des sich ändernden Ereignisses. Die gültigen Werte werden in der GridSelectionEventKind-Klasse als Konstanten definiert. Dieser Wert bestimmt, welche Eingenschaften im Ereignis verwendet werden.</entry></row><row><entry><codeph>selectionChange</codeph></entry><entry>Die gerade beendete Auswahländerung, die durch eine Benutzerinteraktion ausgelöst wurde. Bestimmen Sie mithilfe der DataGrid-Auswahlmethoden die aktuelle Auswahl.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SELECTION_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSelectionEvent:SELECTION_CHANGING"><apiName>SELECTION_CHANGING</apiName><shortdesc>
      Die GridSelectionEvent.SELECTION_CHANGING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein selectionChanging-Ereignis. Mit diesem Ereignis wird angegeben, dass sich die aktuelle Auswahl demnächst ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>GridSelectionEvent.SELECTION_CHANGING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts eines <codeph>selectionChanging</codeph>-Ereignisses. Mit diesem Ereignis wird angegeben, dass sich die aktuelle Auswahl demnächst ändert. Das Aufrufen von preventDefault() für dieses Ereignis verhindert, dass sich die Auswahl ändert.
     
      <p>Dieses Ereignis wird ausgelöst, wenn der Benutzer mit dem Steuerelement interagiert. Wenn Sie die Sammlung des Datenproviders programmgesteuert sortieren, löst die Komponente kein <codeph>selectionChanging</codeph>-Ereignis aus. </p>
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry>kind<codeph/></entry><entry>Die Art des sich ändernden Ereignisses. Die gültigen Werte werden in der GridSelectionEventKind-Klasse als Konstanten definiert. Dieser Wert bestimmt, welche Eingenschaften im Ereignis verwendet werden.</entry></row><row><entry><codeph>selectionChange</codeph></entry><entry>Die bevorstehende Auswahländerung, die durch eine Benutzerinteraktion ausgelöst wird.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GridSelectionEvent.SELECTION_CHANGING</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid/selectedCells"><linktext>spark.components.DataGrid.selectedCells</linktext></link><link href="spark.components.xml#DataGrid/selectedIndices"><linktext>spark.components.DataGrid.selectedIndices</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSelectionEvent:kind"><apiName>kind</apiName><shortdesc>
      Gibt die Art des aufgetretenen Ereignisses an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Gibt die Art des aufgetretenen Ereignisses an. Der Eigenschaftswert kann ein Wert der GridSelectionEventKind-Klasse oder <codeph>null</codeph> sein (zeigt an, dass die Art unbekannt ist).
     
      </apiDesc></apiValueDetail><related-links><link href="spark.events.xml#GridSelectionEventKind"><linktext>spark.events.GridSelectionEventKind</linktext></link></related-links></apiValue><apiValue id="spark.events:GridSelectionEvent:selectionChange"><apiName>selectionChange</apiName><shortdesc>
      Die bevorstehenden oder gerade beendeten Auswahländerungen, die durch eine Benutzerinteraktion ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:CellRegion</apiValueClassifier></apiValueDef><apiDesc>
      Die bevorstehenden oder gerade beendeten Auswahländerungen, die durch eine Benutzerinteraktion ausgelöst werden. Wenn diese Änderung der aktuellen Auswahl hinzugefügt wird, wird nicht die komplette Auswahl dargestellt. Bestimmen Sie mithilfe der DataGrid-Auswahlmethoden die Auswahl.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.events:TrackBaseEvent"><apiName>TrackBaseEvent</apiName><shortdesc>
  Stellt Ereignisse dar, die von einer TrackBase-Komponente ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Stellt Ereignisse dar, die von einer TrackBase-Komponente ausgelöst werden.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#TrackBase"><linktext>spark.components.supportClasses.TrackBase</linktext></link></related-links><adobeApiEvent id="spark.events:TrackBaseEvent:THUMB_DRAG_thumbDrag"><apiName>thumbDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TrackBaseEvent:THUMB_DRAG</apiEventType><adobeApiEventClassifier>spark.events:TrackBaseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TrackBaseEvent:THUMB_PRESS_thumbPress"><apiName>thumbPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TrackBaseEvent:THUMB_PRESS</apiEventType><adobeApiEventClassifier>spark.events:TrackBaseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TrackBaseEvent:THUMB_RELEASE_thumbRelease"><apiName>thumbRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TrackBaseEvent:THUMB_RELEASE</apiEventType><adobeApiEventClassifier>spark.events:TrackBaseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:TrackBaseEvent:TrackBaseEvent"><apiName>TrackBaseEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:TrackBaseEvent:THUMB_DRAG"><apiName>THUMB_DRAG</apiName><shortdesc>
      Die TrackBaseEvent.THUMB_DRAG-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein thumbDrag-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TrackBaseEvent.THUMB_DRAG</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>thumbDrag</codeph>-Ereignis. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TrackBaseEvent:THUMB_PRESS"><apiName>THUMB_PRESS</apiName><shortdesc>
      Die TrackBaseEvent.THUMB_PRESS-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein thumbPress-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TrackBaseEvent.THUMB_PRESS</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>thumbPress</codeph>-Ereignis. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TrackBaseEvent:THUMB_RELEASE"><apiName>THUMB_RELEASE</apiName><shortdesc>
      Die TrackBaseEvent.THUMB_RELEASE-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein thumbRelease-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TrackBaseEvent.THUMB_RELEASE</codeph>-Konstante definiert den Wert der Eigenschaft <codeph>Type</codeph> des Ereignisobjekts für ein <codeph>thumbRelease</codeph>-Ereignis. 
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridEvent"><apiName>GridEvent</apiName><shortdesc>
  Die GridEvent-Klasse erweitert die MouseEvent-Klasse, um zusätzliche rasterspezifische Informationen basierend auf der Position des Ereignisses relativ zu einer Rasterzelle aufzunehmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die GridEvent-Klasse erweitert die MouseEvent-Klasse, um zusätzliche rasterspezifische Informationen basierend auf der Position des Ereignisses relativ zu einer Rasterzelle aufzunehmen. Dies umfasst die folgenden Informationen:
 
  <ul>
    <li>Zeilen- unf Spaltenindex der Zelle.</li>
    <li>Das GridColumn-Objekt der Zelle.</li>
    <li>Das zur Zeile in der Zelle gehörige Datenproviderelement.</li>
    <li>Der Elementrenderer.</li>  
  </ul>
 
  <p>Ein Rasterereignis entspricht jeweils genau einem Mausereignis. Sie werden als Reaktion auf Mausereignisse ausgelöst, die von einem bestimmten untergeordneten Rasterelement zum Raster selbst „propagiert“ wurden. Ein signifikanter Unterschied liegt darin, dass Ereignis-Listenern für Rasterereignisse eine ganze Down-Drag-Up-Benutzeraktion angezeigt wird, selbst wenn die Drag- und Up-Teile der Aktion nicht über dem Raster auftreten. Das <codeph>gridMouseDrag</codeph>-Ereignis entspricht einem Mausbewegungsereignis bei gedrückter Taste.</p> 
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.xml#Grid"><linktext>spark.components.Grid</linktext></link><link href="spark.components.gridClasses.xml#GridSelectionMode"><linktext>spark.components.gridClasses.GridSelectionMode</linktext></link></related-links><adobeApiEvent id="spark.events:GridEvent:GRID_CLICK_gridClick"><apiName>gridClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:click"><linktext>flash.display.InteractiveObject.click</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_DOUBLE_CLICK_gridDoubleClick"><apiName>gridDoubleClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:doubleClick"><linktext>flash.display.InteractiveObject.doubleClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_MOUSE_DOWN_gridMouseDown"><apiName>gridMouseDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_MOUSE_DOWN</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseDown"><linktext>flash.display.InteractiveObject.mouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_MOUSE_DRAG_gridMouseDrag"><apiName>gridMouseDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_MOUSE_DRAG</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_MOUSE_UP_gridMouseUp"><apiName>gridMouseUp</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_MOUSE_UP</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseUp"><linktext>flash.display.InteractiveObject.mouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_ROLL_OUT_gridRollOut"><apiName>gridRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_ROLL_OUT</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:GRID_ROLL_OVER_gridRollOver"><apiName>gridRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:GRID_ROLL_OVER</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOver"><linktext>flash.display.InteractiveObject.rollOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_CLICK_separatorClick"><apiName>separatorClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_DOUBLE_CLICK_separatorDoubleClick"><apiName>separatorDoubleClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_MOUSE_DOWN_separatorMouseDown"><apiName>separatorMouseDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_MOUSE_DOWN</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_MOUSE_DRAG_separatorMouseDrag"><apiName>separatorMouseDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_MOUSE_DRAG</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_MOUSE_UP_separatorMouseUp"><apiName>separatorMouseUp</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_MOUSE_UP</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_ROLL_OUT_separatorRollOut"><apiName>separatorRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_ROLL_OUT</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:GridEvent:SEPARATOR_ROLL_OVER_separatorRollOver"><apiName>separatorRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:GridEvent:SEPARATOR_ROLL_OVER</apiEventType><adobeApiEventClassifier>spark.events:GridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:GridEvent:GridEvent"><apiName>GridEvent</apiName><shortdesc>
      Durch die Grid-Klasse als Reaktion auf Mausereignisse ausgelöste GridEvents werden mit den Eigenschaften des eingehenden Mausereignisses erstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Unterscheidet die Mausinteraktion, die das Auslösen dieses Ereignisses verursacht hat:
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die x-Koordinate des Ereignisses bezogen auf das Raster.
     
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die y-Koordinate des Ereignisses bezogen auf das Raster.
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“.
     
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“.
     
      </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Die Spalte, in der das Ereignis stattfand, oder „null“.
     
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Das Datenproviderelement bei <codeph>rowIndex</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Die <codeph>relatedObject</codeph>-Eigenschaft des MouseEvent, das dieses GridEvent ausgelöst hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Der sichtbare Elementrenderer, in dem das Ereignis stattfand, oder „null“.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Gibt an, ob die Strg-Taste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Gibt an, ob die Alt-Taste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>column</apiItemName><apiOperationClassifier>spark.components.gridClasses:GridColumn</apiOperationClassifier><apiData>null</apiData><apiDesc>Gibt an, ob die Umschalttaste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Gibt an, ob die Strg-Taste gedrückt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>spark.components.gridClasses:IGridItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Nicht verwendet.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Durch die Grid-Klasse als Reaktion auf Mausereignisse ausgelöste GridEvents werden mit den Eigenschaften des eingehenden Mausereignisses erstellt. Die x/y-Position des Rasterereignisses, d. h. der Wert der <codeph>localX</codeph>- und <codeph>localY</codeph>-Eigenschaften, wird in Bezug auf das gesamte Raster und nicht nur auf den Teil des Rasters definiert, der per Bildlauf in die Ansicht geholt wurde. Analog dazu entsprechen Zeilen- und Spaltenindexpositionen unter Umständen einer Zelle, die nicht per Bildlauf in die Ansicht geholt wurde.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:GridEvent:GRID_CLICK"><apiName>GRID_CLICK</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein gridClick-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>gridClick</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:click"><linktext>flash.display.InteractiveObject.click</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_DOUBLE_CLICK"><apiName>GRID_DOUBLE_CLICK</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein gridDoubleClick-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridDoubleClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>gridDoubleClick</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_DOUBLE_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:doubleClick"><linktext>flash.display.InteractiveObject.doubleClick</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_MOUSE_DOWN"><apiName>GRID_MOUSE_DOWN</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein gridMouseDown-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridMouseDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>gridMouseDown</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_MOUSE_DOWN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseDown"><linktext>flash.display.InteractiveObject.mouseDown</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_MOUSE_DRAG"><apiName>GRID_MOUSE_DRAG</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein gridMouseDrag-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridMouseDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>gridMouseDrag</codeph>-GridEvent. Dieses Ereignis wird nur ausgelöst, wenn ein Listener ein <codeph>mouseDown</codeph>-Ereignis verarbeitet hat, und dann auch nur, während die Maus bei gedrückter Taste bewegt wird.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_MOUSE_DRAG</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:GRID_MOUSE_UP"><apiName>GRID_MOUSE_UP</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein gridMouseUp-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridMouseUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>gridMouseUp</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_MOUSE_UP</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:mouseUp"><linktext>flash.display.InteractiveObject.mouseUp</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_ROLL_OUT"><apiName>GRID_ROLL_OUT</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein gridRollOut-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>gridRollOut</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:GRID_ROLL_OVER"><apiName>GRID_ROLL_OVER</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein gridRollOver-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gridRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>gridRollOver</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.GRID_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOver"><linktext>flash.display.InteractiveObject.rollOver</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_CLICK"><apiName>SEPARATOR_CLICK</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein separatorClick-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>separatorClick</codeph> GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_DOUBLE_CLICK"><apiName>SEPARATOR_DOUBLE_CLICK</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein separatorDoubleClick-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorDoubleClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>separatorDoubleClick</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_DOUBLE_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_MOUSE_DOWN"><apiName>SEPARATOR_MOUSE_DOWN</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein separatorMouseDown-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorMouseDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>separatorMouseDown</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_MOUSE_DOWN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_MOUSE_DRAG"><apiName>SEPARATOR_MOUSE_DRAG</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein separatorMouseDrag-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorMouseDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>separatorMouseDrag</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_MOUSE_DRAG</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_MOUSE_UP"><apiName>SEPARATOR_MOUSE_UP</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein separatorMouseUp-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorMouseUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>separatorMouseUp</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_MOUSE_UP</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.xml#InteractiveObject/event:rollOut"><linktext>flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_ROLL_OUT"><apiName>SEPARATOR_ROLL_OUT</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein separatorRollOut-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>separatorRollOut</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:SEPARATOR_ROLL_OVER"><apiName>SEPARATOR_ROLL_OVER</apiName><shortdesc>
      Der Wert der type-Eigenschaft für ein separatorRollOver-GridEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>separatorRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert der <codeph>type</codeph>-Eigenschaft für ein <codeph>separatorRollOver</codeph>-GridEvent.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>column</codeph></entry><entry>Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry>Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</entry></row><row><entry><codeph>grid</codeph></entry><entry>Das mit diesem Ereignis verknüpfte Grid.</entry></row><row><entry><codeph>item</codeph></entry><entry>Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row><row><entry><codeph>type</codeph></entry><entry>GirdEvent.SEPARATOR_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition der Spalte, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterspalte auftrat.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:column"><apiName>column</apiName><shortdesc>
      Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:GridColumn</apiValueClassifier></apiValueDef><apiDesc>
      Die Spalte, in der das Ereignis stattfand, oder „null“, falls das Ereignis nicht über einer Spalte auftrat.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.gridClasses:IGridItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Der Elementrenderer, der diese Zelle anzeigte, oder „null“, falls das Ereignis nicht über einer sichtbaren Zelle aufgetreten ist. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:item"><apiName>item</apiName><shortdesc>
      Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Datenprovider für diese Zeile oder „null“, falls das Ereignis nicht über einer Rasterzeile aufgetreten ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition der Zeile, in der das Ereignis stattfand, oder „-1“, falls das Ereignis nicht über einer Rasterzeile auftrat.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridEvent:grid:get"><apiName>grid</apiName><shortdesc>
      Das mit diesem Ereignis verknüpfte Grid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Grid</apiValueClassifier></apiValueDef><apiDesc>
      Das mit diesem Ereignis verknüpfte Grid.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:GridSelectionEventKind"><apiName>GridSelectionEventKind</apiName><shortdesc>
  Die GridSelectionEventKind-Klasse definiert Konstanten für gültige Werte der kind-Eigenschaft der spark.events.GridSelectionEvent-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die GridSelectionEventKind-Klasse definiert Konstanten für gültige Werte der <codeph>kind</codeph>-Eigenschaft der spark.events.GridSelectionEvent-Klasse. Diese Konstanten geben die Art der Änderung an, die an der Auswahl vorgenommen wurde.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.events.xml#GridSelectionEvent/kind"><linktext>spark.events.GridSelectionEvent.kind</linktext></link><link href="spark.events.xml#GridSelectionEvent"><linktext>spark.events.GridSelectionEvent</linktext></link></related-links><apiValue id="spark.events:GridSelectionEventKind:ADD_CELL"><apiName>ADD_CELL</apiName><shortdesc> 
      Gibt an, dass diese Zelle der aktuellen Auswahl hinzugefügt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addCell</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass diese Zelle der aktuellen Auswahl hinzugefügt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:ADD_ROW"><apiName>ADD_ROW</apiName><shortdesc> 
      Gibt an, dass diese Zeile der aktuellen Auswahl hinzugefügt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addRow</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass diese Zeile der aktuellen Auswahl hinzugefügt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:CLEAR_SELECTION"><apiName>CLEAR_SELECTION</apiName><shortdesc> 
      Gibt an, dass die aktuelle Auswahl gelöscht werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>clearSelection</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass die aktuelle Auswahl gelöscht werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:REMOVE_CELL"><apiName>REMOVE_CELL</apiName><shortdesc> 
      Gibt an, dass diese Zelle aus der aktuellen Auswahl entfernt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeCell</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass diese Zelle aus der aktuellen Auswahl entfernt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:REMOVE_ROW"><apiName>REMOVE_ROW</apiName><shortdesc> 
      Gibt an, dass diese Zeile aus der aktuellen Auswahl entfernt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeRow</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass diese Zeile aus der aktuellen Auswahl entfernt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SELECT_ALL"><apiName>SELECT_ALL</apiName><shortdesc> 
      Gibt an, dass das gesamte Raster ausgewählt werden soll. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectAll</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass das gesamte Raster ausgewählt werden soll. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_CELL_REGION"><apiName>SET_CELL_REGION</apiName><shortdesc> 
      Gibt an, dass die aktuelle Auswahl auf diesen Bereich der Zelle festgelegt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setCellRegion</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass die aktuelle Auswahl auf diesen Bereich der Zelle festgelegt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_CELL"><apiName>SET_CELL</apiName><shortdesc> 
      Gibt an, dass die aktuelle Auswahl auf diese Zelle festgelegt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setCell</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass die aktuelle Auswahl auf diese Zelle festgelegt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_ROWS"><apiName>SET_ROWS</apiName><shortdesc> 
      Gibt an, dass die aktuelle Auswahl auf diese Zeilen festgelegt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setRows</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass die aktuelle Auswahl auf diese Zeilen festgelegt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:GridSelectionEventKind:SET_ROW"><apiName>SET_ROW</apiName><shortdesc> 
      Gibt an, dass die aktuelle Auswahl auf diese Zeile festgelegt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setRow</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Gibt an, dass die aktuelle Auswahl auf diese Zeile festgelegt werden soll.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.events:TitleWindowBoundsEvent"><apiName>TitleWindowBoundsEvent</apiName><shortdesc>
  Die TitleWindowBoundsEvent-Klasse stellt Ereignisobjekte dar, die beim Ändern der Grenzen eines Spark-TitleWindow durch Verschieben oder Größenänderung ausgelöst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die TitleWindowBoundsEvent-Klasse stellt Ereignisobjekte dar, die beim Ändern der Grenzen eines Spark-TitleWindow durch Verschieben oder Größenänderung ausgelöst werden.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TitleWindow"><linktext>spark.components.TitleWindow</linktext></link></related-links><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_END_windowMoveEnd"><apiName>windowMoveEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_END</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_START_windowMoveStart"><apiName>windowMoveStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_START</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_windowMove"><apiName>windowMove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVE</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVING_windowMoving"><apiName>windowMoving</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events:TitleWindowBoundsEvent:WINDOW_MOVING</apiEventType><adobeApiEventClassifier>spark.events:TitleWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.events:TitleWindowBoundsEvent:TitleWindowBoundsEvent"><apiName>TitleWindowBoundsEvent</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp, der die Aktion angibt, durch die das Ereignis ausgelöst wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das Ereignis in der Anzeigelistenhierarchie propagiert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.
     
      </apiDesc></apiParam><apiParam><apiItemName>beforeBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Die Grenzen des Fensters vor der Aktion. Wenn dieses Ereignis abgebrochen werden kann, stellt <codeph>beforeBounds</codeph> die aktuellen Grenzen des Fensters dar. Andernfalls handelt es sich um die Grenzen, bevor eine Änderung auftritt.
     
      </apiDesc></apiParam><apiParam><apiItemName>afterBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Die Grenzen des Fensters nach der Aktion. Wenn dieses Ereignis abgebrochen werden kann, stellt <codeph>afterBounds</codeph> die künftigen Grenzen des Fensters dar. Andernfalls handelt sich um die aktuellen Grenzen.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_END"><apiName>WINDOW_MOVE_END</apiName><shortdesc>
      Die TitleWindowBoundsEvent.WINDOW_MOVE_END-Konstante definiert den Wert der Eigenschaft „Type“ des Ereignisobjekts für ein windowMoveEnd-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMoveEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TitleWindowBoundsEvent.WINDOW_MOVE_END</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>windowMoveEnd</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>Die Anfangsgrenzen des Objekts.</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>Die Endgrenzen des Objekts.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE_START"><apiName>WINDOW_MOVE_START</apiName><shortdesc>
      Die TitleWindowBoundsEvent.WINDOW_MOVE_START-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein windowMoveStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMoveStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TitleWindowBoundsEvent.WINDOW_MOVE_START</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>windowMoveStart</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>Die Anfangsgrenzen des Objekts.</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVE"><apiName>WINDOW_MOVE</apiName><shortdesc>
      Die TitleWindowBoundsEvent.WINDOW_MOVE-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein windowMove-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TitleWindowBoundsEvent.WINDOW_MOVE</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>windowMove</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>Die früheren Grenzen des Objekts.</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>Die aktuellen Grenzen des Objekts.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:WINDOW_MOVING"><apiName>WINDOW_MOVING</apiName><shortdesc>
      Die TitleWindowBoundsEvent.WINDOW_MOVING-Konstante definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein windowMoving-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>windowMoving</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die <codeph>TitleWindowBoundsEvent.WINDOW_MOVING</codeph>-Konstante definiert den Wert der <codeph>type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph>windowMoving</codeph>-Ereignis.
     
      <p>Die Eigenschaften des Ereignisobjekts haben die folgenden Werte:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Das Objekt, das den Ereignis-Listener definiert, der das Ereignis übernimmt. Wenn Sie beispielsweise <codeph>myButton.addEventListener()</codeph> zur Registrierung eines Ereignis-Listeners verwenden, weist <codeph>currentTarget</codeph> den Wert „myButton“ auf. </entry></row><row><entry><codeph>beforeBounds</codeph></entry><entry>Die aktuellen Grenzen des Objekts.</entry></row><row><entry><codeph>afterBounds</codeph></entry><entry>Die künftigen Grenzen des Objekts, wenn dieses an die aktuelle Cursorposition verschoben wird.</entry></row><row><entry><codeph>target</codeph></entry><entry>Das Objekt, von dem das Ereignis ausgelöst wurde. Dies ist nicht immer das Objekt, das auf das Ereignis wartet. Verwenden Sie die <codeph>currentTarget</codeph>-Eigenschaft, damit immer auf das Objekt, das auf das Ereignis wartet, zugegriffen wird.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:afterBounds"><apiName>afterBounds</apiName><shortdesc>
      Die Grenzen des Objekts nach der Aktion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Die Grenzen des Objekts nach der Aktion. Wenn dieses Ereignis abgebrochen werden kann, stellt <codeph>afterBounds</codeph> die künftigen Grenzen des Fensters dar. Andernfalls handelt sich um die aktuellen Grenzen.
     
      <p>Die folgende Liste stellt dar, wie diese Eigenschaft für die verschiedenen Ereignistypen festgelegt wird:</p>
     
      <ul>
        <li><codeph>WINDOW_MOVE</codeph>: Die aktuellen Grenzen des Fensters.</li>
        <li><codeph>WINDOW_MOVE_END</codeph>: Die endgültigen Grenzen des Fensters vor dem Ziehen.</li>
        <li><codeph>WINDOW_MOVE_START </codeph> - null.</li>
        <li><codeph>WINDOW_MOVING</codeph> - Die künftigen Grenzen des Fensters, wenn dieses an die aktuelle Cursorposition verschoben wird.</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.events:TitleWindowBoundsEvent:beforeBounds"><apiName>beforeBounds</apiName><shortdesc>
      Die Grenzen des Objekts vor der Aktion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Die Grenzen des Objekts vor der Aktion. Wenn dieses Ereignis abgebrochen werden kann, stellt <codeph>beforeBounds</codeph> die aktuellen Grenzen des Fensters dar. Andernfalls handelt es sich um die Grenzen, bevor eine Änderung auftritt.
     
      <p>Die folgende Liste stellt dar, wie diese Eigenschaft für die verschiedenen Ereignistypen festgelegt wird:</p>
     
      <ul>
        <li><codeph>WINDOW_MOVE</codeph>: Die früheren Grenzen des Fensters.</li>
        <li><codeph>WINDOW_MOVE_END</codeph>: Die Grenzen des Fensters zu Beginn, also vor dem Ziehen.</li>
        <li><codeph>WINDOW_MOVE_START</codeph>: Die Grenzen des Fensters zu Beginn.</li>
        <li><codeph>WINDOW_MOVING</codeph>: Die aktuellen Grenzen des Fensters.</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>