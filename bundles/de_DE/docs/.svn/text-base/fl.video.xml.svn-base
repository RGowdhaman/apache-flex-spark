<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="fl.video"><apiName>fl.video</apiName><apiDetail/><apiClassifier id="fl.video:DVRManager"><apiName>DVRManager</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	  
     
     </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:DVRManager:DVRManager"><apiName>DVRManager</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>nc</apiItemName><apiType value="flash.net:NetConnection"/><apiDesc>
		 
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
		  
         
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:DVRManager:checkInterval"><apiName>checkInterval</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
         
         </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>interval</apiItemName><apiType value="Number"/><apiDesc>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/><codeph/> 
         
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DVRManager:getStreamDuration"><apiName>getStreamDuration</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamName</apiItemName><apiType value="String"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         <codeph/> <codeph/> 
         
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:DVRManager:DVR_ERROR"><apiName>DVR_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dvrError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:DVR_EVENT"><apiName>DVR_EVENT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dvrEvent</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:DVR_STOP"><apiName>DVR_STOP</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dvrStop</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:currentDuration:get"><apiName>currentDuration</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:isRec:get"><apiName>isRec</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		   
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:nc:get"><apiName>nc</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc>
		  
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:offline:get"><apiName>offline</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:offset:get"><apiName>offset</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		  
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:totalDuration:get"><apiName>totalDuration</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
           
		  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:NCManagerDynamicStream"><apiName>NCManagerDynamicStream</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>
     </apiTipText></apiTipTexts><apiBaseInterface>fl.video:INCManager</apiBaseInterface><apiBaseClassifier>fl.video:NCManager</apiBaseClassifier></apiClassifierDef><apiDesc>
	  
	 
	 <p/>
	 
     <codeblock rev="3.0">
     import fl.video.
     VideoPlayer.iNCManagerClass = fl.video.NCManagerDynamicStream;
     </codeblock>
	 
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#NCManager"><linktext>NCManager</linktext></link></related-links><apiConstructor id="fl.video:NCManagerDynamicStream:NCManagerDynamicStream"><apiName>NCManagerDynamicStream</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiTipTexts><apiTipText>
         </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
         
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:NCManagerDynamicStream:connectDynamicStream"><apiName>connectDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiType value=""/><apiDesc>
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		  
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:NCManagerDynamicStream:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManagerDynamicStream/VERSION"><linktext>VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManagerDynamicStream:VERSION"><apiName>VERSION</apiName><shortdesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11. Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManagerDynamicStream/SHORT_VERSION"><linktext>SHORT_VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManagerDynamicStream:streamLength:get"><apiName>streamLength</apiName><shortdesc>
		 Die Länge des Streams in Millisekunden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiTipTexts><apiTipText>streamLength-Eigenschaft
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Die Länge des Streams in Millisekunden. Wenn die Methode <codeph>VideoPlayer.ncConnected()</codeph> nach ihrem Aufruf "undefined", <codeph>null</codeph> oder "kleiner als 0" zurückgibt, dann weiß das VideoPlayer-Objekt, dass keine Informationen zur Streamlänge vorhanden sind. Wenn Informationen zur Streamlänge zurückgegeben werden, überschreiben diese Informationen alle vorhandenen Informationen zur Streamlänge, einschließlich derer, die vom Parameter <codeph>totalTime</codeph> der Methode <codeph>VideoPlayer.play()</codeph> oder von der Methode <codeph>VideoPlayer.load()</codeph> festgelegt wurden. Informationen, die aus den Metadaten der FLV-Datei empfangen wurden, werden auch überschrieben.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamLength"><linktext>INCManager.streamLength</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:IVPEvent"><apiName>IVPEvent</apiName><shortdesc>
	 Die IVPEvent-Schnittstelle wird von Videoereignissen implementiert, die für ein bestimmtes VideoPlayer-Objekt in der FLVPlayback-Komponente gelten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>IVPEvent-Schnittstelle
     
     </apiTipText></apiTipTexts><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Die IVPEvent-Schnittstelle wird von Videoereignissen implementiert, die für ein bestimmtes VideoPlayer-Objekt in der FLVPlayback-Komponente gelten. Wenn mehrere VideoPlayer-Objekte in der FLVPlayback-Komponente verwendet werden, wird jedem Objekt ein unterschiedlicher Index zugewiesen. Diese Indizes werden mit den Eigenschaften <codeph>visibleVideoPlayerIndex</codeph> und <codeph>activeVideoPlayerIndex</codeph> sowie der Methode <codeph>getVideoPlayer()</codeph> verwendet. Wenn ein Ereignis ausgelöst wird, das spezifisch für ein einzelnes VideoPlayer-Objekt gilt, wird von der Ereignisklasse die IVPEvent-Schnittstelle implementiert. Die Eigenschaft <codeph>vp</codeph> entspricht dem Index des VideoPlayer-Objekts, das mit diesem Ereignis verknüpft ist.
     
     </apiDesc></apiClassifierDetail><apiValue id="fl.video:IVPEvent:fl.video:IVPEvent:type:get"><apiName>type</apiName><shortdesc>
         Der Typ des Ereignisses.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/><apiTipTexts><apiTipText>type-Eigenschaft
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
         Der Ereignistyp. Der Typ ist abhängig von der Groß- und Kleinschreibung.
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:IVPEvent:fl.video:IVPEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/><apiTipTexts><apiTipText>vp-Eigenschaft
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:AutoLayoutEvent"><apiName>AutoLayoutEvent</apiName><shortdesc>
     Flash&amp;#xAE; Player löst ein AutoLayoutEvent-Objekt aus, wenn der Video-Player automatisch angeordnet und seine Größe geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>fl.video:LayoutEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
     Flash<sup>®</sup> Player löst ein AutoLayoutEvent-Objekt aus, wenn der Video-Player automatisch angeordnet und seine Größe geändert wird. Ein Video-Player wird automatisch angeordnet, wenn für die Eigenschaft <codeph>maintainAspectRatio</codeph> oder die Eigenschaft <codeph>autoSize</codeph> der Wert <codeph>true</codeph> festgelegt ist, oder wenn eine neue FLV-Datei geladen wird. 
     
     <p>Es gibt nur einen Typ eines AutoLayoutEvent-Objekts: <codeph>AutoLayoutEvent.AUTO_LAYOUT</codeph>.</p>
     
     <p>Nach dem Versuch einer automatischen Anordnung eines Video-Players wird das Ereignisobjekt ausgelöst, auch wenn die Abmessungen nicht geändert wurden. </p>
     
     <p>Ein <codeph>LayoutEvent</codeph>-Objekt wird auch in diesen drei Szenarios ausgelöst:</p>
     <ul>
     <li>Wenn der Video-Player, der sich selbst angeordnet hat, sichtbar ist.</li>
     <li>Wenn zwei Video-Player unterschiedlicher Größe oder Position vorhanden sind und die Eigenschaft <codeph>visibleVideoPlayerIndex</codeph> von einem Video-Player auf den anderen umgeschaltet wird.</li>
     <li>Wenn Methoden oder Eigenschaften, die die Größe oder die Position des Video-Players ändern, aufgerufen werden, z. B. <codeph>setSize()</codeph>, <codeph>setScale()</codeph>, <codeph>width</codeph>, <codeph>height</codeph>, <codeph>scaleX</codeph>, <codeph>scaleY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph>.</li>
     </ul>
     
     <p>Wenn mehrere Video-Player-Instanzen verwendet werden, wird dieses Ereignis eventuell nicht auf den sichtbaren Video-Player angewendet.</p>
     
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#AutoLayoutEvent/AUTO_LAYOUT"><linktext>AUTO_LAYOUT</linktext></link></related-links><adobeApiEvent id="fl.video:AutoLayoutEvent:AUTO_LAYOUT_autoLayout"><apiName>autoLayout</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:AutoLayoutEvent:AUTO_LAYOUT</apiEventType><adobeApiEventClassifier>fl.video:AutoLayoutEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:autoLayout"><linktext>FLVPlayback.autoLayout</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:AutoLayoutEvent:AutoLayoutEvent"><apiName>AutoLayoutEvent</apiName><shortdesc>
         Erstellt ein Ereignisobjekt, das Informationen über autoLayout-Ereignisse enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Ereignis-Listener können über die übernommene <codeph>type</codeph>-Eigenschaft auf diese Informationen zugreifen. Es gibt nur einen Typ eines autoLayout-Ereignisses: <codeph>AutoLayoutEvent.AUTO_LAYOUT</codeph>.
         
         </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph>bubbles</codeph> auf diese Informationen zugreifen.
         
         </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph>cancelable</codeph> auf diese Informationen zugreifen.
         
         </apiDesc></apiParam><apiParam><apiItemName>oldBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Gibt die Werte der Eigenschaften <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> und <codeph>height</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>autoLayout</codeph> an. Ereignis-Listener können über die Eigenschaft <codeph>LayoutEvent.oldBounds</codeph> auf diese Informationen zugreifen.
         
         </apiDesc></apiParam><apiParam><apiItemName>oldRegistrationBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Gibt die Werte der Eigenschaften <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>autoLayout</codeph> an. Ereignis-Listener können über die Eigenschaft <codeph>LayoutEvent.oldRegistrationBounds</codeph> auf diese Informationen zugreifen.
         
         </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Erstellt ein Ereignisobjekt, das Informationen über <codeph>autoLayout</codeph>-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
         
         </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#LayoutEvent/oldBounds"><linktext>LayoutEvent.oldBounds</linktext></link><link href="fl.video.xml#LayoutEvent/oldRegistrationBounds"><linktext>LayoutEvent.oldRegistrationBounds</linktext></link></related-links></apiConstructor><apiValue id="fl.video:AutoLayoutEvent:AUTO_LAYOUT"><apiName>AUTO_LAYOUT</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines autoLayout-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>autoLayout</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>autoLayout</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>oldBounds</codeph></entry><entry>Die Werte der Eigenschaften <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> und <codeph>height</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>autoLayout</codeph>.</entry></row><row><entry><codeph>oldRegistrationBounds</codeph></entry><entry>Die Werte der Eigenschaften <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>autoLayout</codeph>.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:autoLayout"><linktext>FLVPlayback.autoLayout</linktext></link></related-links></apiValue><apiValue id="fl.video:AutoLayoutEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.
         
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/activeVideoPlayerIndex"><linktext>FLVPlayback.activeVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/visibleVideoPlayerIndex"><linktext>FLVPlayback.visibleVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/getVideoPlayer()"><linktext>FLVPlayback.getVideoPlayer()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:DynamicStreamItem"><apiName>DynamicStreamItem</apiName><shortdesc>
     
     </shortdesc><prolog><author>Adobe Systems Incorporated
     
     </author><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
     
       <codeph/> 
     
     </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:DynamicStreamItem:DynamicStreamItem"><apiName>DynamicStreamItem</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
           
		 <p> </p>
         <p><codeph/></p>
         
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:DynamicStreamItem:addStream"><apiName>addStream</apiName><shortdesc>
		  
         
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamName</apiItemName><apiType value="String"/><apiDesc>   <codeph/><codeph/>  <codeph/>
         
         </apiDesc></apiParam><apiParam><apiItemName>bitRate</apiItemName><apiType value="Number"/><apiDesc>   <codeph/>
		 
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		  
         
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:DynamicStreamItem:streams:get"><apiName>streams</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 <codeph/> <codeph/><codeph/><codeph/><codeph/><codeph/> 
         
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
         Flash&amp;#xAE; Player löst ein MetadataEvent-Objekt aus, wenn der Benutzer das Metadaten-Informationspaket der FLV-Datei ("NetStream.onMetaData") anfordert und wenn Cue-Points ("NetStream.onCuePoint") in der FLV-Datei erfasst werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
         Flash<sup>®</sup> Player löst ein MetadataEvent-Objekt aus, wenn der Benutzer das Metadaten-Informationspaket der FLV-Datei (<codeph>NetStream.onMetaData</codeph>) anfordert und wenn Cue-Points (<codeph>NetStream.onCuePoint</codeph>) in der FLV-Datei erfasst werden.
		 
		 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.net.xml#NetStream/event:onCuePoint"><linktext>NetStream.onCuePoint-Ereignis</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onMetaData"><linktext>NetStream.onMetaData-Ereignis</linktext></link></related-links><adobeApiEvent id="fl.video:MetadataEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:MetadataEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>fl.video:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:cuePoint"><linktext>cuePoint-Ereignis</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:MetadataEvent:METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:MetadataEvent:METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>fl.video:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:metadataReceived"><linktext>metadataReceived-Ereignis</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:MetadataEvent:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
		 Erstellt ein Ereignisobjekt, das Informationen über metadata-Ereignisse enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Ereignis-Listener können über die übernommene <codeph>type</codeph>-Eigenschaft auf diese Informationen zugreifen. Gültige Werte sind <codeph>MetadataEvent.CUE_POINT</codeph> und <codeph>MetadataEvent.METADATA_RECEIVED</codeph>.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph>bubbles</codeph> auf diese Informationen zugreifen.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph>cancelable</codeph> auf diese Informationen zugreifen.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Bestimmt die hinzuzufügenden dynamischen Eigenschaften.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Bestimmt den Index des VideoPlayer-Objekts.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Erstellt ein Ereignisobjekt, das Informationen über metadata-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:MetadataEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
		 Definiert den Wert der Eigenschaft "type" eines cuePoint-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>cuePoint</codeph>-Ereignisobjekts.
		 
		 <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 <adobetable class="innertable">
		     
		     
		     
		     
		     
		     
	         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>info</codeph></entry><entry>Das Objekt mit Eigenschaften, die den Cue-Point beschreiben.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:cuePoint"><linktext>cuePoint-Ereignis</linktext></link></related-links></apiValue><apiValue id="fl.video:MetadataEvent:METADATA_RECEIVED"><apiName>METADATA_RECEIVED</apiName><shortdesc>
		 Definiert den Wert der Eigenschaft "type" eines metadataReceived-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>metadataReceived</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>metadataReceived</codeph>-Ereignisobjekts.
		 
		 <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 <adobetable class="innertable">
		     
		     
		     
		     
		     
		     
	         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>info</codeph></entry><entry>Das Objekt mit Eigenschaften, die die FLV-Datei beschreiben.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:metadataReceived"><linktext>metadataReceived-Ereignis</linktext></link></related-links></apiValue><apiValue id="fl.video:MetadataEvent:info:get"><apiName>info</apiName><shortdesc>
		 Ein Objekt mit dynamischen Eigenschaften, das abhängig vom Ereignistyp hinzugefügt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
		 Ein Objekt mit dynamischen Eigenschaften, das abhängig vom Ereignistyp hinzugefügt wird.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.net.xml#NetStream/event:onCuePoint"><linktext>NetStream.onCuePoint-Ereignis</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onMetaData"><linktext>NetStream.onMetaData-Ereignis</linktext></link></related-links></apiValue><apiValue id="fl.video:MetadataEvent:vp:get"><apiName>vp</apiName><shortdesc>
		 Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/activeVideoPlayerIndex"><linktext>FLVPlayback.activeVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/visibleVideoPlayerIndex"><linktext>FLVPlayback.visibleVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/getVideoPlayer()"><linktext>FLVPlayback.getVideoPlayer()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:FMSCapabilities"><apiName>FMSCapabilities</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="fl.video:FMSCapabilities:FMSCapabilities"><apiName>FMSCapabilities</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>version</apiItemName><apiType value="String"/><apiData>2,0,0,0</apiData><apiDesc>        
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         <codeph/>  
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:FMSCapabilities:codecs:get"><apiName>codecs</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:dataStreamAccess:get"><apiName>dataStreamAccess</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:dvr:get"><apiName>dvr</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:dynamicStreaming:get"><apiName>dynamicStreaming</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:progressive:get"><apiName>progressive</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
           
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:version:get"><apiName>version</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoPlayer"><apiName>VideoPlayer</apiName><shortdesc>
	 Mit der VideoPlayer-Klasse können Sie einen Video-Player mit einer etwas kleineren SWF-Datei erstellen, als wenn Sie die FLV-Playback-Komponente verwendet hätten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>VideoPlayer-Klasse
     
     </apiTipText></apiTipTexts><apiBaseClassifier>flash.media:Video</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Mit der VideoPlayer-Klasse können Sie einen Video-Player mit einer etwas kleineren SWF-Datei erstellen, als wenn Sie die FLV-Playback-Komponente verwendet hätten. <codeph/> 
	 
     <p>Die FLVPlayback-Klasse enthält die VideoPlayer-Klasse. Verwenden Sie die FLVPlayback-Klasse in fast allen Fällen, weil die VideoPlayer-Klasse keine Funktionalität enthält, auf die nicht auch mit der FLVPlayback-Klasse zugegriffen werden kann.</p>
	 
	 <p> <codeph/><codeph/><codeph/> </p>
	 
	 <codeblock>var _forceNCManager:fl.video.NCManager;</codeblock>
	 
	 <p>Die NCManager-Klasse implementiert die INCManager-Schnittstelle. Sie kann durch eine benutzerdefinierte Klasse, die diese Schnittstelle implementiert, zum Verwalten der Netzwerkkommunikation ersetzt werden. In diesem Fall müssen Sie auch die folgende Anweisung hinzufügen, wobei Sie NCManager durch den Namen der zur Verfügung gestellten Klasse ersetzen:</p>
	 
	 <codeblock>fl.video.VideoPlayer.iNCManagerClass = fl.video.NCManager;</codeblock>
	 
	 <p>Wenn Sie die Standard-NCManager-Klasse verwenden, brauchen Sie diese Anweisung nicht hinzuzufügen.</p>
	 
     <p><b>Hinweis</b>: Sie können auch <codeph>iNCManagerClass</codeph> festlegen, um den Standard-fl.video.NCManager durch die FLVPlayback-Komponente zu ersetzen.</p>
	 
	 <p>Zur Verarbeitung mehrerer Streams für unterschiedliche Bandbreiten unterstützt NCManager einen Teilsatz von SMIL.</p>
	 
	 </apiDesc><example conref="VideoPlayerExample.as"/></apiClassifierDetail><related-links><link href="fl.video.xml#NCManager"><linktext>NCManager</linktext></link><link href="" invalidHref="fl.video.FLVPlayback.xml"><linktext>FLVPlayback</linktext></link></related-links><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.UNSUPPORTED_PLAYER_VERSION_unsupportedPlayerVersion"><apiName>unsupportedPlayerVersion</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType/><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	  <codeph/>
	 
	 <p><codeph/><codeph/></p>
	 
     </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/UNSUPPORTED_PLAYER_VERSION"><linktext/></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.STATE_CHANGE_stateChange"><apiName>stateChange</apiName><shortdesc>
	 Wird ausgelöst, wenn sich der Abspielstatus ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.STATE_CHANGE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>stateChange-Ereignis
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird ausgelöst, wenn sich der Abspielstatus ändert. Wenn ein <codeph>autoRewind</codeph>-Aufruf beendet ist, wird das Ereignis <codeph>stateChange</codeph> mit dem Zurückspulstatus ausgelöst. Das Ereignis <codeph>stateChange</codeph> startet erst, nachdem das Zurückspulen abgeschlossen ist. 
	 
	 <p>Mit diesem Ereignis können Sie nachverfolgen, wann die Wiedergabe in einen nicht interaktiven Status wechselt bzw. diesen verlässt, z. B. beim Herstellen der Verbindung, bei Größenänderungen oder beim Zurückspulen. Die Methoden <codeph>play()</codeph>, <codeph>pause()</codeph>, <codeph>stop()</codeph> und <codeph>seek()</codeph> stellen die auszuführenden Anfragen in eine Warteschlange, wenn der Player in den interaktiven Status wechselt.</p>
	 
	 <p>Das Ereignis <codeph>stateChange</codeph> ist vom Typ "VideoEvent" und verfügt über die Konstante <codeph>VideoEvent.STATE_CHANGE</codeph>.</p>
	 
     </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/STATE_CHANGE"><linktext>VideoEvent.STATE_CHANGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.AUTO_REWOUND_autoRewound"><apiName>autoRewound</apiName><shortdesc>
	 Wird ausgelöst, wenn der Abspielkopf zum Anfang des Video-Players bewegt wird, weil für die Eigenschaft "autoRewind" der Wert "true" festgelegt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.AUTO_REWOUND</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>autoRewound-Ereignis
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird ausgelöst, wenn der Abspielkopf zum Anfang des Video-Players bewegt wird, weil für die Eigenschaft <codeph>autoRewind</codeph> der Wert <codeph>true</codeph> festgelegt ist.
	 
	 <p>Das Ereignis <codeph>autoRewound</codeph> ist vom Typ "VideoEvent" und verfügt über die Konstante <codeph>VideoEvent.AUTO_REWOUND</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/AUTO_REWOUND"><linktext>VideoEvent.AUTO_REWOUND</linktext></link><link href="fl.video.xml#VideoPlayer/autoRewind"><linktext>autoRewind</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.LayoutEvent.LAYOUT_layout"><apiName>layout</apiName><shortdesc>
	 Wird ausgelöst, wenn der Video Player angeordnet oder seine Größe geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.LayoutEvent.LAYOUT</apiEventType><adobeApiEventClassifier>fl.video.LayoutEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>layout-Ereignis
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird ausgelöst, wenn der Video Player angeordnet oder seine Größe geändert wird. Es folgen zwei Layout-Szenarios:
	 <ul><li>Wenn der Video-Player entweder mit dem Ereignis <codeph>autoLayout</codeph>, durch Aufrufen der Methode <codeph>setScale()</codeph> oder <codeph>setSize()</codeph> oder durch Ändern der Eigenschaften <codeph>width</codeph>, <codeph>height</codeph>, <codeph>scaleX</codeph> und <codeph>scaleY</codeph> angeordnet wird.</li>
	 <li>Wenn zwei Video-Player unterschiedlicher Größe vorhanden sind und die Eigenschaft <codeph>visibleVideoPlayerIndex</codeph> von einem Video-Player auf den anderen umgeschaltet wird.</li>
	 </ul>  
	 
	 <p>Das Ereignis <codeph>layout</codeph> ist vom Typ "LayoutEvent" und verfügt über die Konstante <codeph>LayoutEvent.LAYOUT</codeph>.</p> 
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:autoLayout"><linktext>autoLayout-Ereignis</linktext></link><link href="fl.video.xml#LayoutEvent/LAYOUT"><linktext>LayoutEvent.LAYOUT</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/visibleVideoPlayerIndex"><linktext>FLVPlayback.visibleVideoPlayerIndex</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.READY_ready"><apiName>ready</apiName><shortdesc>
	 Dieses Ereignis wird ausgelöst, wenn eine FLV-Datei geladen wurde und angezeigt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.READY</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>ready-Ereignis
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Dieses Ereignis wird ausgelöst, wenn eine FLV-Datei geladen wurde und angezeigt werden kann. Es tritt ein, wenn zum ersten Mal der interaktive Status erreicht wird, nachdem Sie mit der Methode <codeph>play()</codeph> oder <codeph>load()</codeph> eine neue FLV-Datei geladen haben. Das Ereignis wird für jede geladene FLV-Datei nur einmal gestartet.
	 
	 <p>Das Ereignis <codeph>ready</codeph> ist vom Typ "VideoEvent" und verfügt über die Konstante <codeph>VideoEvent.READY</codeph>.</p> 
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link><link href="fl.video.xml#VideoEvent/READY"><linktext>VideoEvent.READY</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
	 Gibt den Fortschritt als Anzahl der heruntergeladenen Byte an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>fl.video.VideoProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>progress-Ereignis
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Gibt den Fortschritt als Anzahl der heruntergeladenen Byte an. Wird mit der Häufigkeit ausgelöst, die in der Eigenschaft <codeph>progressInterval</codeph> angegeben wurde, beginnend am Anfang des Ladevorgangs bis zu dem Zeitpunkt, wenn alle Byte geladen wurden oder es einen Netzwerkfehler gibt. Wird standardmäßig jede Viertelsekunde ausgelöst, beginnend beim Aufruf von "load" und bis zu dem Zeitpunkt, wenn alle Byte geladen wurden oder ein Netzwerkfehler aufgetreten ist. Verwenden Sie dieses Ereignis, um die Anzahl der geladenen Byte oder der Byte im Puffer zu überprüfen. 
	 
	 <p>Das Ereignis wird nur für progressive Downloads über HTTP ausgelöst. Es zeigt den Fortschritt als Anzahl der heruntergeladenen Byte an. Das event-Objekt verfügt über die Eigenschaften <codeph>bytesLoaded</codeph> und <codeph>bytesTotal</codeph>, die identisch mit den FLVPlayback-Eigenschaften desselben Namens sind.</p>
	 
	 <p>Das Ereignis <codeph>progress</codeph> ist vom Typ "VideoProgressEvent" und verfügt über die Konstante <codeph>VideoProgressEvent.PROGRESS</codeph>.</p> 
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoPlayer/bytesLoaded"><linktext>bytesLoaded</linktext></link><link href="fl.video.xml#VideoPlayer/bytesTotal"><linktext>bytesTotal</linktext></link><link href="fl.video.xml#VideoProgressEvent/PROGRESS"><linktext>VideoProgressEvent.PROGRESS</linktext></link><link href="fl.video.xml#VideoPlayer/progressInterval"><linktext>progressInterval</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><shortdesc>
	 Wird beim Abspielen der FLV-Datei mit der Häufigkeit, die in der playheadUpdateInterval-Eigenschaft festgelegt wurde, oder durch den Beginn des Zurückspulens ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiDefaultValue>0.25
	 
	 </apiDefaultValue><apiTipTexts><apiTipText>change-Ereignis
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird beim Abspielen der FLV-Datei mit der Häufigkeit, die in der Eigenschaft <codeph>playheadUpdateInterval</codeph> festgelegt wurde, oder durch den Beginn des Zurückspulens ausgelöst. Die Komponente löst dieses Ereignis nicht aus, wenn der Video-Player angehalten oder beendet wurde, es sei denn, es wird eine Suche ausgeführt. 
	 
	 <p>DasEreignis <codeph>playheadUpdate</codeph> ist vom Typ "VideoEvent" und verfügt über die Konstante <codeph>VideoEvent.PLAYHEAD_UPDATE</codeph>.</p> 
     
     </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/PLAYHEAD_UPDATE"><linktext>VideoEvent.PLAYHEAD_UPDATE</linktext></link><link href="fl.video.xml#VideoPlayer/playheadUpdateInterval"><linktext>playheadUpdateInterval</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.MetadataEvent.METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><shortdesc>
	 Wird ausgelöst, wenn die Metadaten der FLV-Datei zum ersten Mal erreicht werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.MetadataEvent.METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>fl.video.MetadataEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>metadataReceived-Ereignis
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird ausgelöst, wenn die Metadaten der FLV-Datei zum ersten Mal erreicht werden. Das Ereignisobjekt verfügt über die Eigenschaft <codeph>info</codeph>, die das info-Objekt enthält, das vom Rückruf des Ereignisses <codeph>NetStream.onMetaData</codeph> empfangen wurde.
	 
	 <p>Das Ereignis <codeph>metadataReceived</codeph> ist vom Typ "MetadataEvent" und verfügt über die Konstante <codeph>MetadataEvent.METADATA_RECEIVED</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#MetadataEvent/METADATA_RECEIVED"><linktext>MetadataEvent.METADATA_RECEIVED</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onMetaData"><linktext>NetStream.onMetaData-Ereignis</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.MetadataEvent.CUE_POINT_cuePoint"><apiName>cuePoint</apiName><shortdesc>
	 Wird ausgelöst, wenn ein Cue-Point erreicht wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.MetadataEvent.CUE_POINT</apiEventType><adobeApiEventClassifier>fl.video.MetadataEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>cuePoint-Ereignis
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird ausgelöst, wenn ein Cue-Point erreicht wird. Das Ereignisobjekt verfügt über die Eigenschaft <codeph>info</codeph>, die das info-Objekt enthält, das vom Rückruf des Ereignisses <codeph>NetStream.onCuePoint</codeph> für FLV-Datei-Cue-Points empfangen wurde. Bei ActionScript-Cue-Points enthält es das Objekt, das an die ActionScript-Cue-Point-Methoden oder Eigenschaften übergeben wurde.
	 
	 <p>Das Ereignis <codeph>cuePoint</codeph> ist vom Typ "MetadataEvent" und verfügt über die Konstante <codeph>MetadataEvent.CUE_POINT</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#MetadataEvent/CUE_POINT"><linktext>MetadataEvent.CUE_POINT</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onCuePoint"><linktext>NetStream.onCuePoint-Ereignis</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
	 Wird ausgelöst, wenn der Abspielvorgang abgeschlossen ist, weil der Player das Ende der FLV-Datei erreicht hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.COMPLETE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>complete-Ereignis
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird ausgelöst, wenn der Abspielvorgang abgeschlossen ist, weil der Player das Ende der FLV-Datei erreicht hat. Die Komponente löst dieses Ereignis nicht aus, wenn Sie die Methode <codeph>stop()</codeph> oder <codeph>pause()</codeph> aufrufen oder auf das entsprechende Steuerelement klicken. 
	 
	 <p>Verwendet die Anwendung progressiven Download, legt die Komponente die Eigenschaft <codeph>totalTime</codeph> nicht explizit fest. Die Komponente lädt eine FLV-Datei herunter, bei der die Dauer nicht in den Metadaten festgelegt ist. Der Video-Player legt vor dem Auslösen dieses Ereignisses für die Eigenschaft <codeph>totalTime</codeph> einen ungefähren Gesamtwert fest.</p>
	 
	 <p>Der Video-Player löst auch die Ereignisse <codeph>stateChange</codeph> und <codeph>stopped</codeph> aus.</p>
	 
	 <p>Das Ereignis <codeph>complete</codeph> ist vom Typ "VideoEvent" und verfügt über die Konstante <codeph>VideoEvent.COMPLETE</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoPlayer/event:stateChange"><linktext>stateChange-Ereignis</linktext></link><link href="fl.video.xml#VideoPlayer/stop()"><linktext>stop()</linktext></link><link href="fl.video.xml#VideoPlayer/pause()"><linktext>pause()</linktext></link><link href="fl.video.xml#VideoPlayer/totalTime"><linktext>totalTime</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
	 Wird durch die VideoPlayer-Instanz ausgelöst, wenn diese die NetConnection aufgrund einer Zeitüberschreitung oder nach dem Aufrufen der close()-Methode schließt, wenn Sie die load()- oder play()-Methode aufrufen, oder wenn Sie die source-Eigenschaft festlegen und die RTMP-Verbindung deshalb getrennt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.CLOSE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>close-Ereignis
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Wird durch die VideoPlayer-Instanz ausgelöst, wenn diese die NetConnection aufgrund einer Zeitüberschreitung oder nach dem Aufrufen der Methode <codeph>close()</codeph> schließt, wenn Sie die Methode <codeph>load()</codeph> oder <codeph>play()</codeph> aufrufen oder wenn Sie die Eigenschaft <codeph>source</codeph> festlegen und die RTMP-Verbindung deshalb getrennt wird. Die FLVPlayback-Instanz löst dieses Ereignis nur beim Streaming vom Flash Media Server (FMS) oder einem anderen Flash Video Streaming Service (FVSS) aus. 
	 
	 <p>Das Ereignis <codeph>close</codeph> ist vom Typ "VideoEvent" und verfügt über die Konstante <codeph>VideoEvent.CLOSE</codeph>.</p>
	 
 	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/CLOSE"><linktext>VideoEvent.CLOSE</linktext></link><link href="fl.video.xml#VideoPlayer/close()"><linktext>close()</linktext></link><link href="fl.video.xml#VideoPlayer/source"><linktext>source</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:VideoPlayer:VideoPlayer"><apiName>VideoPlayer</apiName><shortdesc>
		 Erstellt ein neues VideoPlayer-Objekt mit der angegebenen Breite und Höhe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>width</apiItemName><apiType value="int"/><apiData>320</apiData><apiDesc>Die Breite des Video-Players in Pixel.
		 </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="int"/><apiData>240</apiData><apiDesc>Die Höhe des Video-Players in Pixel.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Erstellt ein neues VideoPlayer-Objekt mit der angegebenen Breite und Höhe.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#INCManager"><linktext>INCManager</linktext></link><link href="fl.video.xml#NCManager"><linktext>NCManager</linktext></link></related-links></apiConstructor><apiOperation id="fl.video:VideoPlayer:flvplayback_internal:_playDynamicStream"><apiName>_playDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="flvplayback_internal"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>startTime</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>endTime</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>	 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:close"><apiName>close</apiName><shortdesc>
		 Erzwingt das Schließen des Video-Streams und der Flash Media Server-Verbindung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Erzwingt das Schließen des Video-Streams und der Flash Media Server-Verbindung. Diese Methode löst das Ereignis <codeph>close</codeph> aus. Normalerweise brauchen Sie diese Methode nicht direkt aufzurufen, weil die idleTimeout-Funktionalität den Stream schließt.
		 
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/idleTimeout"><linktext>idleTimeout</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:flvplayback_internal:handleDVRError"><apiName>handleDVRError</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="flvplayback_internal"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>e</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:load"><apiName>load</apiName><shortdesc>
		 Ähnelt der Methode "play()"; die FLV-Datei wird zwar geladen, aber nicht abgespielt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>Ein URL-String für die FLV-Datei, die Sie laden möchten. Wurde kein Wert für URL übergeben, wird ein Fehler mit der Meldung <codeph>null URL sent to VideoPlayer.load</codeph> (URL mit dem Wert "null" an VideoPlayer.load übergeben) ausgelöst.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>totalTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Die Länge einer FLV-Datei. Übergeben Sie 0, <codeph>null</codeph> oder "undefined", um die Länge aus den Metadaten, vom Server oder aus der XML automatisch zu erkennen. 
		  
		 </apiDesc></apiParam><apiParam><apiItemName>isLive</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Der Wert ist <codeph>true</codeph>, wenn Sie einen Live-Feed vom Flash Media Server (FMS) streamen. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Ähnelt der Methode <codeph>play()</codeph>; die FLV-Datei wird zwar geladen, aber nicht abgespielt. Die Größe wird automatisch geändert, falls zutreffend, und das erste Bild der FLV-Datei wird angezeigt. Nach dem anfänglichen Laden und automatischen Layout ist der Status <codeph>VideoState.PAUSED</codeph>.
		 
		 <p>Diese Methode verwendet dieselben Parameter wie die <codeph>play()</codeph>-Methode, Sie können die <codeph>load()</codeph>-Methode jedoch nicht ohne eine URL aufrufen. Falls Sie es tun, wird ein Fehler ausgegeben. Wenn sich der Video-Player in einem nicht interaktiven Status befindet, wird die Anforderung von der Methode <codeph>load()</codeph> in eine Warteschlange gestellt.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:ncConnected"><apiName>ncConnected</apiName><shortdesc>
		 Wird von INCManager aufgerufen, nachdem die Verbindung hergestellt wurde oder nachdem die Verbindung nach einem Aufruf der Methode "INCManager.connectToURL()" fehlgeschlagen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Wird von INCManager aufgerufen, nachdem die Verbindung hergestellt wurde oder nachdem die Verbindung nach einem Aufruf der Methode <codeph>INCManager.connectToURL()</codeph> fehlgeschlagen ist. Wenn die Verbindung fehlgeschlagen ist, legen Sie vor dem Aufrufen für die Eigenschaft <codeph>INCManager.netConnection</codeph> den Wert <codeph>null</codeph> oder "undefined" fest.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/ncReconnected()"><linktext>ncReconnected()</linktext></link><link href="fl.video.xml#INCManager/connectToURL()"><linktext>INCManager.connectToURL()</linktext></link><link href="fl.video.xml#NCManager/connectToURL()"><linktext>NCManager.connectToURL()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:ncReconnected"><apiName>ncReconnected</apiName><shortdesc>
		 Wird von INCManager aufgerufen, nachdem die neue Verbindung hergestellt wurde oder nachdem die Verbindung nach einem Aufruf der Methode "INCManager.reconnect()" fehlgeschlagen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Wird von INCManager aufgerufen, nachdem die neue Verbindung hergestellt wurde oder nachdem die Verbindung nach einem Aufruf der Methode <codeph>INCManager.reconnect()</codeph> fehlgeschlagen ist. Wenn die Verbindung fehlgeschlagen ist, legen Sie vor dem Aufrufen für die Eigenschaft <codeph>INCManager.netconnection</codeph> den Wert <codeph>null</codeph> fest.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>ncConnected()</linktext></link><link href="fl.video.xml#INCManager/reconnect()"><linktext>INCManager.reconnect()</linktext></link><link href="fl.video.xml#NCManager/reconnect()"><linktext>NCManager.reconnect()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:pause"><apiName>pause</apiName><shortdesc>
		 Hält die Videowiedergabe an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Hält die Videowiedergabe an. Wenn das Video angehalten oder beendet ist, hat dies keine Auswirkungen. Um die Wiedergabe erneut zu starten, rufen Sie <codeph>play()</codeph> auf. Akzeptiert keine Parameter.
		 
		 <p>Wenn der Player in einem nicht interaktiven Status ist, stellt die <codeph>pause()</codeph>-Methode die Anforderung in eine Warteschlange.</p>
		 
		 <p>Löst eine Ausnahme aus, wenn sie aufgerufen wird und kein Stream vorhanden ist. Bestimmen Sie mit dem Ereignis <codeph>stateChange</codeph> und der Eigenschaft <codeph>connected</codeph> den Zeitpunkt, wann es sicher ist, diese Methode aufzurufen.</p>
		 
         <p>Wenn der Player beendet wurde, hat ein Aufruf der <codeph>pause()</codeph>-Methode keine Auswirkungen und der Status des Players bleibt "stopped".</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:play"><apiName>play</apiName><shortdesc>
		 Löst das Abspielen des Videos aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Übergeben Sie einen URL-String, wenn Sie eine neue FLV-Datei laden und abspielen möchten. Wenn Sie bereits eine FLV-Datei geladen haben und sie weiterhin abspielen möchten, übergeben Sie den Wert <codeph>null</codeph>. 
		 
		 </apiDesc></apiParam><apiParam><apiItemName>totalTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Übergeben Sie die Länge der FLV-Datei. Übergeben Sie <codeph>0</codeph> oder <codeph>NaN</codeph>, um die Länge aus den Metadaten, vom Server oder aus der XML automatisch zu erkennen. Wenn die Eigenschaft <codeph>INCManager.streamLength</codeph> nicht <codeph>0</codeph>, <codeph>null</codeph> oder "undefined" ist, wenn die Eigenschaft <codeph>ncConnected</codeph> aufgerufen wird, hat dieser Wert Vorrang vor dem anderen Wert.  
		 
		 </apiDesc></apiParam><apiParam><apiItemName>isLive</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Übergeben Sie <codeph>true</codeph>, wenn Sie einen Live-Feed vom Flash Media Server (FMS) streamen. 
		 
		 </apiDesc></apiParam><apiTipTexts><apiTipText>play-Methode
		 
		 </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
		 Löst das Abspielen des Videos aus. Kann aufgerufen werden, während das Video angehalten oder beendet wurde oder abgespielt wird. Rufen Sie diese Methode ohne Argumente auf, um ein bereits geladenes Video abzuspielen oder eine URL zu übergeben, um einen neuen Stream zu laden.
		 
		 <p>Wenn der Player in einem nicht interaktiven Status ist, wird die Anforderung in eine Warteschlange gestellt.</p>
		 
		 <p>Löst eine Ausnahme aus, wenn es ohne Argumente aufgerufen wird und kein Stream vorhanden ist. Bestimmen Sie mit dem Ereignis <codeph>stateChange</codeph> und der Eigenschaft <codeph>connected</codeph> den Zeitpunkt, wann es sicher ist, diese Methode aufzurufen.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:play2"><apiName>play2</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiOperationClassifier>fl.video:DynamicStreamItem</apiOperationClassifier><apiDesc>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		   
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:playWhenEnoughDownloaded"><apiName>playWhenEnoughDownloaded</apiName><shortdesc>
		 Gibt die FLV-Datei wieder, wenn genügend Daten davon heruntergeladen wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiTipTexts><apiTipText>playWhenEnoughDownloaded-Methode
		 
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
		 Gibt die FLV-Datei wieder, wenn genügend Daten davon heruntergeladen wurden. Wenn die FLV-Datei heruntergeladen wurde oder Sie vom Flash Media Server (FMS) streamen, dann entspricht das Aufrufen der <codeph>playWhenEnoughDownloaded()</codeph>-Methode dem Aufrufen der <codeph>play()</codeph>-Methode ohne Parameter. Durch das Aufrufen dieser Methode wird die Wiedergabe nicht angehalten. In vielen Fällen sollten Sie also die Methode <codeph>pause()</codeph> vor dieser Methode aufrufen.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:seek"><apiName>seek</apiName><shortdesc>
		 Sucht einen bestimmten Zeitpunkt in der Datei, der in Sekunden angegeben und bis auf drei Dezimalstellen (Millisekunden) genau ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Wenn Zeit &lt; 0 oder <codeph>NaN</codeph> ist.
         </apiDesc><apiItemName>VideoError</apiItemName><apiOperationClassifier>fl.video:VideoError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>time</apiItemName><apiType value="Number"/><apiDesc>Eine Zahl, die in Sekunden angibt, wo der Abspielkopf platziert werden soll.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sucht einen bestimmten Zeitpunkt in der Datei, der in Sekunden angegeben und bis auf drei Dezimalstellen (Millisekunden) genau ist. Wird ein Video abgespielt, wird es von diesem Zeitpunkt ab weiter abgespielt. Ist ein Video angehalten, wird dieser Zeitpunkt gesucht. Das Video bleibt angehalten. Ist das Video beendet, wird dieser Zeitpunkt gesucht. Das Video wechselt in den Status "paused". Hat keine Auswirkungen bei Live-Streams.
		 
         <p>Die Eigenschaft <codeph>playheadTime</codeph> hat u. U. nicht sofort nach dem Aufrufen einer der Suchmethoden oder dem Festlegen von <codeph>playheadTime</codeph> zum Auslösen eines Suchlaufs den erwarteten Wert. Bei einem progressiven Download können Sie nur nach einem Schlüsselbild suchen; deshalb bringt ein Suchlauf Sie zu der Zeit des ersten Schlüsselbilds nach der angegebenen Zeit.</p>
		 
		 <p><b>Hinweis</b>: Beim Streaming führt eine Suche immer zu der exakt angegebenen Zeit, selbst wenn die FLV-Quelldatei an dieser Stelle über kein Schlüsselbild verfügt.</p>
		 
		 <p>Die Suche ist asynchron, sodass beim Aufrufen einer Suchmethode oder beim Festlegen der Eigenschaft <codeph>playheadTime</codeph> der Wert von <codeph>playheadTime</codeph> nicht sofort aktualisiert wird. Um die Zeit nach dem Abschluss der Suche abzurufen, warten Sie auf das Ereignis <codeph>seek</codeph>, welches erst ausgelöst wird, wenn die Eigenschaft <codeph>playheadTime</codeph> aktualisiert wurde.</p>
		 
		 <p>Löst eine Ausnahme aus, wenn sie aufgerufen wird und kein Stream vorhanden ist. Bestimmen Sie mit dem Ereignis <codeph>stateChange</codeph> und der Eigenschaft <codeph>connected</codeph> den Zeitpunkt, wann es sicher ist, diese Methode aufzurufen.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:setScale"><apiName>setScale</apiName><shortdesc>
		 Legt die scaleX-Eigenschaft und die scaleY-Eigenschaft gleichzeitig fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>scaleX</apiItemName><apiType value="Number"/><apiDesc>Eine Zahl, die die horizontale Skalierung darstellt.
		 </apiDesc></apiParam><apiParam><apiItemName>scaleY</apiItemName><apiType value="Number"/><apiDesc>Eine Zahl, die die vertikale Skalierung darstellt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Legt die Eigenschaften <codeph>scaleX</codeph> und <codeph>scaleY</codeph> gleichzeitig fest. Wenn Sie die Werte für <codeph>scaleX</codeph> oder <codeph>scaleY</codeph> individuell festlegen, werden zwei <codeph>autolayout</codeph>-Ereignisse ausgelöst, während durch Aufrufen der Methode <codeph>setScale()</codeph> nur ein <codeph>autolayout</codeph>-Ereignis ausgelöst wird. 
                 
		 <p>Wenn für die Eigenschaft <codeph>scaleMode</codeph> der Wert <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> oder <codeph>VideoScaleMode.NO_SCALE</codeph> festgelegt ist, verursacht das Aufrufen dieser Methode sofort ein <codeph>autolayout</codeph>-Ereignis.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/scaleX"><linktext>scaleX</linktext></link><link href="fl.video.xml#VideoPlayer/scaleY"><linktext>scaleY</linktext></link><link href="fl.video.xml#VideoScaleMode/MAINTAIN_ASPECT_RATIO"><linktext>VideoScaleMode.MAINTAIN_ASPECT_RATIO</linktext></link><link href="fl.video.xml#VideoScaleMode/NO_SCALE"><linktext>VideoScaleMode.NO_SCALE</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:setSize"><apiName>setSize</apiName><shortdesc>
		 Legt die Eigenschaften "width" und "height" gleichzeitig fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die Breite des Video-Players.
		 </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die Höhe des Video-Players.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Legt die Eigenschaften <codeph>width</codeph> und <codeph>height</codeph> gleichzeitig fest. Wenn Sie die Werte für <codeph>width</codeph> oder <codeph>height</codeph> individuell festlegen, werden zwei <codeph>autolayout</codeph>-Ereignisse ausgelöst, während durch Aufrufen der Methode <codeph>setSize()</codeph> nur ein <codeph>autolayout</codeph>-Ereignis ausgelöst wird. 
		 
		 <p>Wenn für die Eigenschaft <codeph>scaleMode</codeph> der Wert <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> oder <codeph>VideoScaleMode.NO_SCALE</codeph> festgelegt ist, dann verursacht der Aufruf dieser Methode sofort ein <codeph>autolayout</codeph>-Ereignis.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/width"><linktext>width</linktext></link><link href="fl.video.xml#VideoPlayer/height"><linktext>height</linktext></link><link href="fl.video.xml#VideoScaleMode/MAINTAIN_ASPECT_RATIO"><linktext>VideoScaleMode.MAINTAIN_ASPECT_RATIO</linktext></link><link href="fl.video.xml#VideoScaleMode/NO_SCALE"><linktext>VideoScaleMode.NO_SCALE</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:stop"><apiName>stop</apiName><shortdesc>
		 Beendet die Videowiedergabe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Beendet die Videowiedergabe. Wenn <codeph>autoRewind</codeph> auf <codeph>true</codeph> eingestellt ist, wird zum ersten Bild zurückgespult. Wenn das Video bereits beendet ist, hat dies keine Auswirkungen. Um die Wiedergabe erneut zu starten, rufen Sie <codeph>play()</codeph> auf. Akzeptiert keine Parameter.
		 
		 <p>Wenn der Player in einem nicht interaktiven Status ist, wird die Anforderung in eine Warteschlange gestellt.</p>
		 
		 <p>Löst eine Ausnahme aus, wenn sie aufgerufen wird und kein Stream vorhanden ist. Bestimmen Sie mit dem Ereignis <codeph>stateChange</codeph> und der Eigenschaft <codeph>connected</codeph> den Zeitpunkt, wann es sicher ist, diese Methode aufzurufen.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link><link href="fl.video.xml#VideoPlayer/autoRewind"><linktext>autoRewind</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiValue id="fl.video:VideoPlayer:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/VERSION"><linktext>VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:VERSION"><apiName>VERSION</apiName><shortdesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11. Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/SHORT_VERSION"><linktext>SHORT_VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:iNCManagerClass"><apiName>iNCManagerClass</apiName><shortdesc>
		 Damit alle VideoPlayer-Objekte Ihre benutzerdefinierte Klasse als die standardmäßige INCManager-Implementierung verwenden, legen Sie für die Eigenschaft "iNCManagerClass" das Klassenobjekt oder den Stringnamen Ihrer benutzerdefinierten Klasse fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>fl.video.NCManagerDynamicStream</apiData><apiType value="Object"/><apiDefaultValue>"fl.video.NCManager" as a string
		 
		 </apiDefaultValue><apiTipTexts><apiTipText>VideoPlayer-Klasse
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Damit alle VideoPlayer-Objekte Ihre benutzerdefinierte Klasse als die standardmäßige INCManager-Implementierung verwenden, legen Sie für die Eigenschaft <codeph>iNCManagerClass</codeph> das Klassenobjekt oder den Stringnamen Ihrer benutzerdefinierten Klasse fest. Die FLVPlayback-Klasse enthält die Definition der benutzerdefinierten Klasse, der Video-Player nicht. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:netStreamClientClass"><apiName>netStreamClientClass</apiName><shortdesc>
	Registriert eine benutzerdefinierte Klasse für die NetStream-Eigenschaft "client".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.115.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiType value="Object"/><apiException><apiDesc>Wenn diese Eigenschaft auf einen ungültigen Wert gesetzt wird, wird <codeph>VideoError.NETSTREAM_CLIENT_CLASS_UNSET</codeph> ausgegeben.
   </apiDesc><apiItemName>VideoError</apiItemName><apiOperationClassifier>fl.video:VideoError</apiOperationClassifier></apiException><apiDefaultValue>fl.video.VideoPlayerClient
   </apiDefaultValue></apiValueDef><apiDesc>
	Registriert eine benutzerdefinierte Klasse für die NetStream-Eigenschaft "client". Standardmäßig wird <codeph>fl.video.VideoPlayerClient</codeph> verwendet; diese Klasse verarbeitet die Meldungen <codeph>onMetaData()</codeph> und <codeph>onCuePoint()</codeph>. Um die benutzerdefinierte Verarbeitung anderer Meldungen hinzuzufügen, zum Beispiel <codeph>onImageData()</codeph> und <codeph>onTextData()</codeph>, können Sie eine eigene Klasse erstellen und den Wert dieser Eigenschaft auf die Klasse setzen.
	
	<p>Der Konstruktor für die Klasse muss eine <codeph>VideoPlayer</codeph>-Instanz als einzigen Parameter annehmen, und er muss eine boolesche ready-Eigenschaft aufweisen. Diese Eigenschaft sollte auf <codeph>false</codeph> gesetzt werden, während der Client noch auf erwartete Datenmeldungen am Anfang der Datei wartet. Wenn der VideoPlayer automatisch zurückspult, bevor diese Meldungen erhalten werden, werden sie möglicherweise nie empfangen. Standardmäßig gibt <codeph>fl.video.VideoPlayerClient</codeph> den Wert <codeph>true</codeph> von der "ready"-Eigenschaft zurück, sobald <codeph>onMetaData()</codeph> aufgerufen wird.</p>
	
	<p>Sie können die Eigenschaft auf das Klassenobjekt selbst (wie im folgenden Beispiel) oder auf den Stringnamen der Klasse setzen:</p>
	<codeblock>
        import fl.video.
        VideoPlayer.netStreamClientClass = MyCustomClient;
        </codeblock>
        <p>Beachten Sie, dass es nicht genügt, den Stringnamen der Klasse zu verwenden, um die Kompilierung der Klasse in die SWF-Datei zu erzwingen. Der Standardwert ist das Klassenobjekt <codeph>fl.video.VideoPlayerClient</codeph>, nicht der Stringname.</p>
	<p>Es wird dringend empfohlen, benutzerdefinierte Implementierungen als Unterklassen von <codeph>fl.video.VideoPlayer</codeph> zu konfigurieren. Andernfalls besteht das Risiko, dass Metadaten und Cue-Point-Verarbeitung, die in die VideoPlayer- und FLVPlayback-Komponente integriert sind, aufgeteilt werden.</p>
	
        
   </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:align:get"><apiName>align</apiName><shortdesc>
		 Gibt an, wie das Video relativ zu den registrationX-, registrationY-, registrationWidth- und registrationHeight-Eigenschaften angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>VideoAlign.CENTER
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gibt an, wie das Video relativ zu den <codeph>registrationX</codeph>-, <codeph>registrationY</codeph>-, <codeph>registrationWidth</codeph>- und <codeph>registrationHeight</codeph>-Eigenschaften angezeigt wird. Die Eigenschaft <codeph>align</codeph> löst dieses automatische Layout aus, wenn die Eigenschaft <codeph>scaleMode</codeph> auf <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> oder <codeph>VideoScaleMode.NO_SCALE</codeph> gesetzt ist. Wird diese Eigenschaft geändert, nachdem eine FLV-Datei geladen wurde, wird sofort ein automatisches Layout erstellt. Die Werte werden aus der VideoAlign-Klasse abgerufen.
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>scaleMode</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:autoRewind:get"><apiName>autoRewind</apiName><shortdesc>
		 Ein boolescher Wert; bei der Einstellung "true" wird die FLV-Datei beim Beenden der Wiedergabe zu Bild 1 zurückgespult, weil entweder das Ende des Streams erreicht oder die Methode "stop()" aufgerufen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
         
         </apiDefaultValue></apiValueDef><apiDesc>
		 Ein boolescher Wert; bei der Einstellung <codeph>true</codeph> wird die FLV-Datei beim Beenden der Wiedergabe zu Bild 1 zurückgespult, weil entweder das Ende des Streams erreicht oder die Methode <codeph>stop()</codeph> aufgerufen wurde. Diese Eigenschaft hat für Live-Streams keine Bedeutung.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:bufferTime:get"><apiName>bufferTime</apiName><shortdesc>
		 Eine Zahl, die angibt, wie viele Sekunden zwischengespeichert werden sollen, bevor ein Videostream abgespielt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Eine Zahl, die angibt, wie viele Sekunden zwischengespeichert werden sollen, bevor ein Videostream abgespielt wird. Für FLV-Dateien, die über RTMP gestreamt und deshalb nicht heruntergeladen und nur im Arbeitsspeicher zwischengespeichert werden, ist es u. U. wichtig, für diese Einstellung einen höheren Wert als den Standardwert 0,1 zu verwenden. Für eine FLV-Datei, die über HTTP progressiv heruntergeladen wird, ist der Vorteil beim Erhöhen dieses Werts nur gering; allerdings kann die Anzeige eines Videos mit hoher Qualität auf einem älteren, langsameren Computer damit verbessert werden.
		 
		 <p>Legen Sie bei bereits aufgenommenen Videos (keine Live-Videos) für die Eigenschaft <codeph>bufferTime</codeph> nicht den Wert <codeph>0</codeph> fest. Verwenden Sie die Standardzwischenspeicherzeit oder erhöhen Sie die Zwischenspeicherzeit.</p>
		 
		 <p>Diese Eigenschaft gibt nicht an, wie viel der FLV-Datei heruntergeladen werden muss, bevor die Wiedergabe beginnt.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/bufferTime"><linktext>FLVPlayback.bufferTime</linktext></link><link href="fl.video.xml#VideoPlayer/isLive"><linktext>isLive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
		 Eine Zahl, die angibt, wie viele Byte bereits heruntergeladen wurden, falls es sich um einen HTTP-Download handelt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/><apiTipTexts><apiTipText>Anzahl der bereits geladenen Byte.
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Eine Zahl, die angibt, wie viele Byte bereits heruntergeladen wurden, falls es sich um einen HTTP-Download handelt. Gibt "0" zurück, wenn kein Stream stattfindet, wenn der Stream vom Flash Media Server (FMS) erfolgt oder wenn die Informationen noch nicht verfügbar sind. Der Rückgabewert ist nur für HTTP-Downloads von Bedeutung.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
		 Eine Zahl, die angibt, wie viele Byte insgesamt bei einem HTTP-Download heruntergeladen werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/><apiTipTexts><apiTipText>Anzahl der zu ladenden Byte.
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Eine Zahl, die angibt, wie viele Byte insgesamt bei einem HTTP-Download heruntergeladen werden. Gibt "-1" zurück, wenn kein Stream stattfindet, wenn der Stream vom Flash Media Server (FMS) erfolgt oder wenn die Informationen noch nicht verfügbar sind. Der Rückgabewert ist nur für HTTP-Downloads von Bedeutung. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:dvrFixedDuration:get"><apiName>dvrFixedDuration</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		   
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrement"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrementVariance"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:dvrIncrement:get"><apiName>dvrIncrement</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		  
		  
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrementVariance"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:dvrIncrementVariance:get"><apiName>dvrIncrementVariance</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		   
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrement"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:dvrSnapToLive:get"><apiName>dvrSnapToLive</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		  
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:idleTimeout:get"><apiName>idleTimeout</apiName><shortdesc>
		 Die Dauer in Millisekunden, bevor Flash eine nicht aktive Verbindung zu einem Video-Server, wie z. B. Flash Media Server, trennt, weil das Abspielen angehalten oder beendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Die Dauer in Millisekunden, bevor Flash eine nicht aktive Verbindung zu einem Video-Server, wie z. B. Flash Media Server, trennt, weil das Abspielen angehalten oder beendet wurde. Diese Eigenschaft wirkt sich nicht auf FLV-Dateien aus, die über HTTP heruntergeladen werden.
		 
		 <p>Wenn diese Eigenschaft festgelegt wird, während ein Videostream bereits inaktiv ist, wird die Timeout-Zeit mit dem neuen Wert neu gestartet.</p>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:isDVR:get"><apiName>isDVR</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.0.0.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:isLive:get"><apiName>isLive</apiName><shortdesc>
		 Ein boolescher Wert; bei der Einstellung „true“ wird angegeben, dass es sich um einen Video-Livestream handelt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Ein boolescher Wert; bei der Einstellung <codeph>true</codeph> wird angegeben, dass es sich um einen Video-Livestream handelt. Diese Eigenschaft wirkt sich nur beim Streaming von einem Video-Server, wie z. B. Flash Media Server oder einem anderen Flash Video Streaming Service, aus. Der Wert dieser Eigenschaft wird bei HTTP-Downloads ignoriert.
		 
		 <p>Legen Sie für die Eigenschaft <codeph>isLive</codeph> den Wert <codeph>false</codeph> fest, wenn Sie einen bereits aufgenommenen Videostream an den Video-Player senden. Legen Sie <codeph>true</codeph> fest, wenn Sie Echtzeitdaten, z. B. eine Live-Broadcastübertragung, senden. Sie verbessern die Leistung, wenn Sie für die Eigenschaft <codeph>isLive</codeph> den Wert <codeph>false</codeph> festlegen und für die Eigenschaft <codeph>bufferTime</codeph> nicht den Wert <codeph>0</codeph> festlegen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/bufferTime"><linktext>bufferTime</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/isLive"><linktext>FLVPlayback.isLive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:isRTMP:get"><apiName>isRTMP</apiName><shortdesc>
		 Ein boolescher Wert; die Einstellung "true" bedeutet, dass die FLV-Datei vom Flash Media Server (FMS) mithilfe von RTMP gestreamt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Ein boolescher Wert; die Einstellung <codeph>true</codeph> bedeutet, dass die FLV-Datei vom Flash Media Server (FMS) mithilfe von RTMP gestreamt wird. Für jede andere FLV-Dateiquelle lautet der Wert <codeph>false</codeph>. 
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/isRTMP"><linktext>FLVPlayback.isRTMP</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:metadata:get"><apiName>metadata</apiName><shortdesc>
         Ein Objekt, bei dem es sich um ein Metadaten-Informationspaket handelt, das von einem Aufruf der Rückrufmethode "NetStream.onMetaData()" empfangen wird, falls verfügbar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
         Ein Objekt, bei dem es sich um ein Metadaten-Informationspaket handelt, das von einem Aufruf der Rückrufmethode <codeph>NetStream.onMetaData()</codeph> empfangen wird, falls verfügbar. Bereit, wenn das <codeph>metadataReceived</codeph>-Ereignis ausgelöst wird.
		 
		 <p>Wenn die FLV-Datei mit dem Flash 8-Encoder kodiert wurde, enthält die <codeph>metadata</codeph>-Eigenschaft die folgenden Informationen. Ältere FLV-Dateien enthalten nur die Werte für <codeph>height</codeph>, <codeph>width</codeph> und <codeph>duration</codeph>.</p>
		 
		 <adobetable class="innertable">
		 	
		 		
		 		
		 
		 
 		 
 		 
 		 
 		 
		 
 		 
 		 
		 <tgroup cols="2"><thead><row><entry><b>Parameter</b></entry><entry><b>Beschreibung</b></entry></row></thead><tbody><row><entry><codeph>canSeekToEnd</codeph></entry><entry>Ein boolescher Wert; die Einstellung <codeph>true</codeph> bedeutet, dass die FLV-Datei mit einem Schlüsselbild im letzten Bild kodiert wurde, das den Suchlauf bis zum Ende eines progressiv heruntergeladenen Movieclips ermöglicht. Der Wert lautet <codeph>false</codeph>, wenn die FLV-Datei nicht mit einem Schlüsselbild im letzten Bild kodiert wurde.</entry></row><row><entry><codeph>cuePoints</codeph></entry><entry>Ein Array von Objekten, eines für jeden in die FLV-Datei eingebetteten Cue-Point. Der Wert ist nicht definiert, wenn die FLV-Datei keine Cue-Points enthält. Jedes Objekt hat die folgenden Eigenschaften:
	       	
		 			<ul>
		 				<li><codeph>type</codeph>: Ein String, der den Typ des Cue-Points als "navigation" oder "event" angibt.</li>
		 				<li><codeph>name</codeph>: Ein String, der den Namen des Cue-Points angibt.</li>
		 				<li><codeph>time</codeph>: Eine Zahl, die die Zeit des Cue-Points in Sekunden mit einer Genauigkeit von drei Dezimalstellen (Millisekunden) angibt.</li>
		 				<li><codeph>parameters</codeph>: Ein optionales Objekt mit Name-Wert-Paaren, die vom Benutzer beim Erstellen des Cue-Points festgelegt wurden.</li>
		 			</ul>
		 		</entry></row><row><entry><codeph>audiocodecid</codeph></entry><entry>Eine Zahl, die den verwendeten Audio-Codec (Kodier-/Dekodiertechnik) angibt.</entry></row><row><entry><codeph>audiodelay</codeph></entry><entry> Eine Zahl, die für die Zeit <codeph>0</codeph> in der Quelldatei steht, von der die FLV-Datei codiert wurde. 
		 <p>Der Videoinhalt wird um eine kurze Zeitspanne verzögert, die für die Synchronisierung mit dem Audio erforderlich ist. Wenn der <codeph>audiodelay</codeph>-Wert beispielsweise <codeph>.038</codeph> lautet, startet das Video, das zum Zeitpunkt <codeph>0</codeph> in der Quelldatei gestartet ist, zum Zeitpunkt <codeph>.038</codeph> in der FLV-Datei..</p> 
		 <p>Beachten Sie, dass die FLVPlayback- und VideoPlayer-Klassen diese Verzögerung in ihren Zeiteinstellungen kompensieren. Das bedeutet, dass Sie weiterhin die Zeiteinstellungen verwenden können, die Sie in der Quelldatei verwendet haben.</p>
</entry></row><row><entry><codeph>audiodatarate</codeph></entry><entry>Eine Zahl, die die Datenrate des Audios in Kilobyte pro Sekunde angibt.</entry></row><row><entry><codeph>videocodecid</codeph></entry><entry>Eine Zahl, die die Codec-Version, mit der das Video kodiert wurde, angibt.</entry></row><row><entry><codeph>framerate</codeph></entry><entry>Eine Zahl, die die Bildrate der FLV-Datei angibt.</entry></row><row><entry><codeph>videodatarate</codeph></entry><entry>Eine Zahl, die die Video-Datenrate der FLV-Datei angibt.</entry></row><row><entry><codeph>height</codeph></entry><entry>Eine Zahl, die die Höhe der FLV-Datei angibt.</entry></row><row><entry><codeph>width</codeph></entry><entry>Eine Zahl, die die Breite der FLV-Datei angibt.</entry></row><row><entry><codeph>duration</codeph></entry><entry>Eine Zahl, die die Dauer der FLV-Datei in Sekunden angibt.</entry></row></tbody></tgroup></adobetable>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/metadata"><linktext>FLVPlayback.metadata</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:ncMgr:get"><apiName>ncMgr</apiName><shortdesc>
		 Ein INCManager-Objekt, das Zugriff auf eine Instanz der Klasse, die INCManager implementiert, bietet, wobei es sich um eine Schnittstelle zur NCManager-Klasse handelt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>fl.video:INCManager</apiValueClassifier></apiValueDef><apiDesc>
		 Ein INCManager-Objekt, das Zugriff auf eine Instanz der Klasse, die <codeph>INCManager</codeph> implementiert, bietet, wobei es sich um eine Schnittstelle zur NCManager-Klasse handelt.
		 
		 <p>Sie können diese Eigenschaft verwenden, um einen benutzerdefinierten INCManager, der eine benutzerdefinierte Initialisierung erfordert, zu implementieren</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/ncMgr"><linktext>FLVPlayback.ncMgr</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:netConnection:get"><apiName>netConnection</apiName><shortdesc>
		 Gestattet direkten Zugriff auf die vom Video-Player erstellte NetConnection-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc>
		 Gestattet direkten Zugriff auf die vom Video-Player erstellte NetConnection-Instanz.  
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:netStream:get"><apiName>netStream</apiName><shortdesc>
		 Gestattet direkten Zugriff auf die vom Video-Player erstellte NetStream-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetStream"/></apiValueDef><apiDesc>
		 Gestattet direkten Zugriff auf die vom Video-Player erstellte NetStream-Instanz.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
		 Eine Zahl, die die aktuelle Position (Zeit) des Abspielkopfs angibt. Diese Angabe erfolgt in Sekunden, wobei es sich auch um einen Bruchwert handeln kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiTipTexts><apiTipText>Die aktuelle Position des Abspielkopfs in Sekunden.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Eine Zahl, die die aktuelle Position (Zeit) des Abspielkopfs angibt. Diese Angabe erfolgt in Sekunden, wobei es sich auch um einen Bruchwert handeln kann. Das Festlegen dieser Eigenschaft löst eine Suche aus, bei der alle Einschränkungen einer Suche gelten.
		 
		 <p>Wenn sich die Zeit des Abspielkopfs ändert, was beim Abspielen der FLV-Datei jede Viertelsekunde passiert, löst die Komponente das Ereignis <codeph>playheadUpdate</codeph> aus.</p>
		 
		 <p>Aus verschiedenen Gründen hat die Eigenschaft <codeph>playheadTime</codeph> möglicherweise nicht sofort nach dem Aufrufen einer der Suchmethoden oder dem Festlegen von <codeph>playheadTime</codeph> zum Auslösen eines Suchlaufs den erwarteten Wert. Erstens können Sie bei einem progressiven Download nur nach einem Schlüsselbild suchen, so dass ein Suchlauf Sie zu der Zeit des ersten Schlüsselbilds nach der angegebenen Zeit bringt. (Beim Streaming führt eine Suche immer zur exakt angegebenen Zeit, selbst wenn die FLV-Quelldatei an dieser Stelle über kein Schlüsselbild verfügt.) Zweitens ist die Suche asynchron, sodass beim Aufrufen einer Suchmethode oder beim Einstellen der Eigenschaft "playheadTime" der Wert von <codeph>playheadTime</codeph> nicht sofort aktualisiert wird. Um die Zeit nach dem Abschluss der Suche abzurufen, warten Sie auf das Ereignis <codeph>seek</codeph>, welches erst ausgelöst wird, wenn die Eigenschaft <codeph>playheadTime</codeph> aktualisiert wurde.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/seek()"><linktext>seek()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/playheadTime"><linktext>FLVPlayback.playheadTime</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:playheadUpdateInterval:get"><apiName>playheadUpdateInterval</apiName><shortdesc>
		 Eine Zahl, die die Zeit (in Millisekunden) zwischen den einzelnen playheadUpdate-Ereignissen angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>250
         
         </apiDefaultValue></apiValueDef><apiDesc>
		 Eine Zahl, die die Zeit (in Millisekunden) zwischen den einzelnen <codeph>playheadUpdate</codeph>-Ereignissen angibt. Wenn Sie diese Eigenschaft beim Abspielen der FLV-Datei festlegen, wird der Timer zurückgesetzt. 
		 
		 <p>Da ActionScript-Cue-Points bei Aktualisierungen des Abspielkopfs starten, kann das Verringern des Werts für die Eigenschaft <codeph>playheadUpdateInterval</codeph> die Genauigkeit von ActionScript-Cue-Points erhöhen.</p>
		 
		 <p>Weil das Intervall für die Aktualisierung des Abspielkopfs durch einen Aufruf der globalen Methode <codeph>setInterval()</codeph> festgelegt wird, kann die Aktualisierung nicht häufiger ausgelöst werden, als es die Bildrate der SWF-Datei zulässt. Dies gilt für alle Intervalle, die auf diese Weise festgelegt werden. Beispiel: Bei der Standardbildrate von 12 Bildern pro Sekunde ist das niedrigste effektive Intervall, das Sie erstellen können, ungefähr 83 Millisekunden oder 1 Sekunde (1000 Millisekunden) geteilt durch 12.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/playheadUpdateInterval"><linktext>FLVPlayback.playheadUpdateInterval</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:progressInterval:get"><apiName>progressInterval</apiName><shortdesc>
		 Eine Zahl, die die Zeit (in Millisekunden) zwischen den einzelnen progress-Ereignissen angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Eine Zahl, die die Zeit (in Millisekunden) zwischen den einzelnen <codeph>progress</codeph>-Ereignissen angibt. Wenn Sie diese Eigenschaft beim Abspielen des Videostreams festlegen, wird der Timer neu gestartet. 
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:registrationHeight:get"><apiName>registrationHeight</apiName><shortdesc>
		 Die Höhe, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Die Höhe, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird. Verwechseln Sie die Eigenschaft <codeph>registrationHeight</codeph> nicht mit der Eigenschaft <codeph>height</codeph>. Die Eigenschaft <codeph>height</codeph> gibt die tatsächliche Höhe des Videoinhalts wieder.
		 
		 <p>Beispiel 1: Laden Sie eine FLV-Datei mit 80 x 80 mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>registrationX</codeph> = 100</li> 
		 <li><codeph>registrationY</codeph> = 100</li>
		 <li><codeph>registrationWidth</codeph> = 60</li> 
		 <li><codeph>registrationHeight</codeph> = 40</li>
		 <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Nach der automatischen Größenänderung erhalten Sie Folgendes:
		 <ul>
		 <li><codeph>x</codeph> = 90</li>
		 <li><codeph>y</codeph> = 80</li>
		 <li><codeph>width</codeph> = 80</li>
		 <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Beispiel 2: Laden Sie das gleiche Szenario wie in Beispiel 1, aber mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Sie erhalten Folgendes:
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Beispiel 3: Laden Sie das gleiche Szenario wie in Beispiel 2, aber mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Sie erhalten Werte, die den Registrierungswerten entsprechen:
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>Das Festlegen der Eigenschaft <codeph>registrationHeight</codeph> entspricht dem Festlegen der Eigenschaft <codeph>height</codeph> (und umgekehrt). Wenn Sie eine andere Eigenschaft festlegen oder irgendeine Methode aufrufen, die die Höhe ändert, wie z. B. <codeph>scaleX</codeph>, <codeph>setSize</codeph> und <codeph>setScale</codeph>, bleiben auch <codeph>height</codeph> und <codeph>registrationHeight</codeph> synchronisiert.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:registrationWidth:get"><apiName>registrationWidth</apiName><shortdesc>
		 Die Breite, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Die Breite, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird. Verwechseln Sie die Eigenschaft <codeph>registrationWidth</codeph> nicht mit der Eigenschaft <codeph>width</codeph>. Die Eigenschaft <codeph>width</codeph> gibt die tatsächliche Breite des Videoinhalts wieder.
		 
		 <p>Beispiel 1: Laden Sie eine FLV-Datei mit 80 x 80 mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>registrationX</codeph> = 100</li> 
		 <li><codeph>registrationY</codeph> = 100</li>
		 <li><codeph>registrationWidth</codeph> = 60</li> 
		 <li><codeph>registrationHeight</codeph> = 40</li>
		 <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Nach der automatischen Größenänderung erhalten Sie Folgendes:
		 <ul>
		 <li><codeph>x</codeph> = 90</li>
		 <li><codeph>y</codeph> = 80</li>
		 <li><codeph>width</codeph> = 80</li>
		 <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Beispiel 2: Laden Sie das gleiche Szenario wie in Beispiel 1, aber mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Sie erhalten Folgendes:
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Beispiel 3: Laden Sie das gleiche Szenario wie in Beispiel 2, aber mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Sie erhalten Werte, die den Registrierungswerten entsprechen:
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>Das Festlegen der <codeph>registrationWidth</codeph>-Eigenschaft entspricht dem Festlegen der <codeph>width</codeph>-Eigenschaft (und umgekehrt). Wenn Sie eine andere Eigenschaft festlegen oder irgendeine Methode aufrufen, die die Breite ändert, wie z. B. <codeph>scaleX</codeph>, <codeph>setSize</codeph> und <codeph>setScale</codeph>, bleiben auch <codeph>width</codeph> und <codeph>registrationWidth</codeph> synchronisiert.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:registrationX:get"><apiName>registrationX</apiName><shortdesc>
		 Die x-Koordinate, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Die x-Koordinate, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird. Verwechseln Sie dies nicht mit der Eigenschaft <codeph>x</codeph>, die die tatsächliche Position des Videoinhalts wiedergibt.
		 
		 <p>Beispiel 1: Laden Sie eine FLV-Datei mit 80 x 80 mit den folgenden Einstellungen:
		 <ul>
		     <li><codeph>registrationX</codeph> = 100</li> 
		     <li><codeph>registrationY</codeph> = 100</li>
		     <li><codeph>registrationWidth</codeph> = 60</li> 
		     <li><codeph>registrationHeight</codeph> = 40</li>
		     <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		     <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Nach der automatischen Größenänderung erhalten Sie Folgendes:
		 <ul>
             <li><codeph>x</codeph> = 90</li>
             <li><codeph>y</codeph> = 80</li>
             <li><codeph>width</codeph> = 80</li>
             <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Beispiel 2: Laden Sie das gleiche Szenario wie in Beispiel 1, aber mit den folgenden Einstellungen:
		 <ul>
		     <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Sie erhalten Folgendes:
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Beispiel 3: Laden Sie das gleiche Szenario wie in Beispiel 2, aber mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Sie erhalten Werte, die den Registrierungswerten entsprechen:
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>Wenn entweder die Eigenschaft <codeph>x</codeph> oder <codeph>registrationX</codeph> festgelegt ist, wird die zweite Eigenschaft geändert, um ihren Offset von der ersten beizubehalten. Beispiel: Wenn <codeph>x</codeph> = 10 und <codeph>registrationX</codeph> = 20 ist, wird durch Festlegen von <codeph>x</codeph> = 110 auch <codeph>registrationX</codeph> = 120 festgelegt.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:registrationY:get"><apiName>registrationY</apiName><shortdesc>
		 Die y-Koordinate, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Die y-Koordinate, die bei der automatischen Größenänderung zum Ausrichten des Videoinhalts verwendet wird. Verwechseln Sie dies nicht mit der Eigenschaft <codeph>y</codeph>, die die tatsächliche Position des Videoinhalts wiedergibt.
		 
		 <p>Beispiel 1: Laden Sie eine FLV-Datei mit 80 x 80 mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>registrationX</codeph> = 100</li> 
		 <li><codeph>registrationY</codeph> = 100</li>
		 <li><codeph>registrationWidth</codeph> = 60</li> 
		 <li><codeph>registrationHeight</codeph> = 40</li>
		 <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Nach der automatischen Größenänderung erhalten Sie Folgendes:
		 <ul>
		 <li><codeph>x</codeph> = 90</li>
		 <li><codeph>y</codeph> = 80</li>
		 <li><codeph>width</codeph> = 80</li>
		 <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Beispiel 2: Laden Sie das gleiche Szenario wie in Beispiel 1, aber mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Sie erhalten Folgendes:
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Beispiel 3: Laden Sie das gleiche Szenario wie in Beispiel 2, aber mit den folgenden Einstellungen:
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Sie erhalten Werte, die den Registrierungswerten entsprechen:
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>Wenn entweder die Eigenschaft <codeph>y</codeph> oder <codeph>registrationY</codeph> festgelegt ist, wird die zweite Eigenschaft geändert, um ihren Offset von der ersten beizubehalten. Beispiel: Wenn <codeph>y</codeph> = 10 und <codeph>registrationY</codeph> = 20 ist, wird durch Festlegen von <codeph>y</codeph> = 110 auch <codeph>registrationY</codeph> = 120 festgelegt.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:scaleMode:get"><apiName>scaleMode</apiName><shortdesc>
		 Gibt die Größenänderung des Videos nach dem Ladevorgang an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>VideoScaleMode.MAINTAIN_ASPECT_RATIO
                 
                 </apiDefaultValue></apiValueDef><apiDesc>
		 Gibt die Größenänderung des Videos nach dem Ladevorgang an. Bei der Einstellung <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> wird das Seitenverhältnis des Videos innerhalb des durch <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> definierten Rechtecks beibehalten. Bei der Einstellung <codeph>VideoScaleMode.NO_SCALE</codeph> wird die Größe des Videos automatisch auf die Abmessungen der FLV-Quelldatei eingestellt. Bei der Einstellung <codeph>VideoScaleMode.EXACT_FIT</codeph> werden die Abmessungen der FLV-Quelldatei ignoriert und das Video gedehnt, um in das durch <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> definierte Rechteck zu passen. Wenn diese Einstellung vorgenommen wird, nachdem eine FLV-Datei geladen wurde, wird sofort ein automatisches Layout erstellt. Die Werte werden aus der <codeph>VideoScaleMode</codeph>-Klasse abgerufen.
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoScaleMode"><linktext>VideoScaleMode</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:soundTransform:get"><apiName>soundTransform</apiName><shortdesc>
		 Bietet direkten Zugriff auf die Eigenschaft "NetStream.soundTransform", um die Lautstärke besser regeln zu können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.media:SoundTransform"/></apiValueDef><apiDesc>
		 Bietet direkten Zugriff auf die Eigenschaft <codeph>NetStream.soundTransform</codeph>, um die Lautstärke besser regeln zu können. Legen Sie die Eigenschaft fest, um die Einstellungen zu ändern. Verwenden Sie die Get-Accessor-Methode der Eigenschaft, um die aktuellen Einstellungen abzurufen.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/volume"><linktext>volume</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:source:get"><apiName>source</apiName><shortdesc>
		 Ein String, der die URL der zu streamenden FLV-Datei und die Art des Streamings angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Ein String, der die URL der zu streamenden FLV-Datei und die Art des Streamings angibt. Bei der URL kann es sich um eine HTTP-URL zu einer FLV-Datei, eine RTMP-URL zu einem Stream oder eine HTTP-URL zu einer XML-Datei handeln.
		 
		 <p>Wenn Sie diese Eigenschaft im Komponenteninspektor oder im Eigenschafteninspektor festlegen, wird die FLV-Datei beim Eintreten des Ereignisses <codeph>enterFrame</codeph> geladen und abgespielt. Die Verzögerung bietet Zeit, um die Eigenschaften <codeph>isLive</codeph>, <codeph>autoPlay</codeph> und <codeph>cuePoints</codeph> zu setzen, die den Ladevorgang betreffen. Damit kann auch ActionScript-Code, der im ersten Bild eingefügt wurde, vor dem Beginn der Wiedergabe auf die FLVPlayback-Komponente angewendet werden.</p>
		 
		 <p>Wenn Sie diese Eigenschaft mit ActionScript festlegen, wird sofort die Methode <codeph>VideoPlayer.load()</codeph> aufgerufen, wenn für die Eigenschaft <codeph>autoPlay</codeph> der Wert <codeph>false</codeph> festgelegt ist. Alternativ wird die Methode <codeph>VideoPlayer.play()</codeph> aufgerufen, wenn für die Eigenschaft <codeph>autoPlay</codeph> der Wert <codeph>true</codeph> festgelegt ist. Die Eigenschaften <codeph>autoPlay</codeph>, <codeph>totalTime</codeph> und <codeph>isLive</codeph> beeinflussen, wie die neue FLV-Datei geladen wird. Wenn Sie diese Eigenschaften festlegen, müssen Sie dies deshalb vor dem Festlegen der Eigenschaft <codeph>source</codeph> tun.</p>
		 
		 <p>Stellen Sie für die Eigenschaft <codeph>autoPlay</codeph> den Wert <codeph>false</codeph> ein, um das automatische Abspielen der neuen FLV-Datei zu verhindern.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/autoPlay"><linktext>FLVPlayback.autoPlay</linktext></link><link href="fl.video.xml#VideoPlayer/isLive"><linktext>isLive</linktext></link><link href="fl.video.xml#VideoPlayer/totalTime"><linktext>totalTime</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/load()"><linktext>FLVPlayback.load()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/play()"><linktext>FLVPlayback.play()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:state:get"><apiName>state</apiName><shortdesc>
		 Ein String, der den Status der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Ein String, der den Status der Komponente angibt. Diese Eigenschaft wird mit den Methoden <codeph>load()</codeph>, <codeph>play()</codeph>, <codeph>stop()</codeph>, <codeph>pause()</codeph> und <codeph>seek()</codeph> festgelegt. 
		 
		 <p>Die möglichen Werte für die Eigenschaft "state" lauten: <codeph>buffering</codeph>, <codeph>connectionError</codeph>, <codeph>disconnected</codeph>, <codeph>loading</codeph>, <codeph>paused</codeph>, <codeph>playing</codeph>, <codeph>rewinding</codeph>, <codeph>seeking</codeph> und <codeph>stopped</codeph>. Sie können die FLVPlayback-Klasseneigenschaften verwenden, um diese Statuszustände zu überprüfen. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState/DISCONNECTED"><linktext>VideoState.DISCONNECTED</linktext></link><link href="fl.video.xml#VideoState/STOPPED"><linktext>VideoState.STOPPED</linktext></link><link href="fl.video.xml#VideoState/PLAYING"><linktext>VideoState.PLAYING</linktext></link><link href="fl.video.xml#VideoState/PAUSED"><linktext>VideoState.PAUSED</linktext></link><link href="fl.video.xml#VideoState/BUFFERING"><linktext>VideoState.BUFFERING</linktext></link><link href="fl.video.xml#VideoState/LOADING"><linktext>VideoState.LOADING</linktext></link><link href="fl.video.xml#VideoState/CONNECTION_ERROR"><linktext>VideoState.CONNECTION_ERROR</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link><link href="fl.video.xml#VideoState/SEEKING"><linktext>VideoState.SEEKING</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
		 Ein boolescher Wert; die Einstellung "true" bedeutet, dass der Status interaktiv ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Ein boolescher Wert; die Einstellung <codeph>true</codeph> bedeutet, dass der Status interaktiv ist. Wenn der Status nicht interaktiv ist, werden die Aufrufe der Methoden <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph>, <codeph>pause()</codeph> und <codeph>seek()</codeph> in eine Warteschlange gestellt und später ausgeführt, wenn der Status wieder interaktiv ist. Da diese Aufrufe in eine Warteschlange gestellt und später ausgeführt werden, ist es normalerweise nicht nötig, den Wert der Eigenschaft <codeph>stateResponsive</codeph> nachzuverfolgen. Die interaktiven Statuszustände sind: <codeph>stopped</codeph>, <codeph>playing</codeph>, <codeph>paused</codeph> und <codeph>buffering</codeph>. 
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="fl.video.xml#VideoState/DISCONNECTED"><linktext>VideoState.DISCONNECTED</linktext></link><link href="fl.video.xml#VideoState/STOPPED"><linktext>VideoState.STOPPED</linktext></link><link href="fl.video.xml#VideoState/PLAYING"><linktext>VideoState.PLAYING</linktext></link><link href="fl.video.xml#VideoState/PAUSED"><linktext>VideoState.PAUSED</linktext></link><link href="fl.video.xml#VideoState/LOADING"><linktext>VideoState.LOADING</linktext></link><link href="fl.video.xml#VideoState/RESIZING"><linktext>VideoState.RESIZING</linktext></link><link href="fl.video.xml#VideoState/CONNECTION_ERROR"><linktext>VideoState.CONNECTION_ERROR</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:totalTime:get"><apiName>totalTime</apiName><shortdesc>
		 Eine Zahl, die die Gesamtspielzeit des Videos in Sekunden angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiTipTexts><apiTipText>Die Gesamtlänge der FLV-Datei in Sekunden.
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Eine Zahl, die die Gesamtspielzeit des Videos in Sekunden angibt.
		 
		 <p>Beim Streaming vom Flash Media Server (FMS) mit dem Standard-<codeph>NCManager</codeph> wird dieser Wert automatisch von serverseitigen APIs (Anwendungsprogrammierschnittstellen) bestimmt. Dieser Wert überschreibt alles, was durch diese Eigenschaft festgelegt oder von Metadaten abgerufen wird. Die Eigenschaft kann gelesen werden, wenn der Status <codeph>stopped</codeph> oder <codeph>playing</codeph> erreicht wird, nachdem die Eigenschaft <codeph>source</codeph> festgelegt wurde. Diese Eigenschaft hat für Live-Streams von einem FMS keine Bedeutung.</p>
		 
		 <p>Bei einem HTTP-Download wird dieser Wert automatisch bestimmt, wenn die FLV-Datei über eingebettete Metadaten verfügt; andernfalls legen Sie den Wert explizit fest. Falls Sie den Wert nicht festlegen, ist er "NaN" (keine Zahl). Wenn Sie den Wert festlegen, wird der Metadatenwert im Stream ignoriert.</p>
		 
		 <p>Wenn Sie diese Eigenschaft festlegen, tritt der Wert für die nächste FLV-Datei, die durch das Festlegen von <codeph>source</codeph> geladen wird, in Kraft. Die Eigenschaft hat keine Auswirkungen auf eine FLV-Datei, die bereits geladen wurde. Außerdem übergibt diese Eigenschaft den neuen Wert erst dann, wenn eine FLV-Datei geladen wird.</p>
		 
		 <p>Die FLV-Datei kann immer noch abgespielt werden, wenn die Eigenschaft nie gesetzt wird (weder ausdrücklich noch automatisch); es kann aber zu Problemen bei Suchläufen (Vorlauf/Rücklauf) kommen.</p>
		 
		 <p>Wenn Sie die Eigenschaft nicht festlegen, ist der Wert solange "NaN", bis ein gültiger Wert aus den Metadaten festgelegt wird.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/source"><linktext>source</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:videoHeight:get"><apiName>videoHeight</apiName><shortdesc>
		 Die ursprüngliche Breite der geladenen FLV-Datei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Die ursprüngliche Breite der geladenen FLV-Datei. Diese Eigenschaft gibt "-1" zurück, wenn noch keine Informationen verfügbar sind.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/height"><linktext>height</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:videoWidth:get"><apiName>videoWidth</apiName><shortdesc>
		 Die ursprüngliche Breite der geladenen FLV-Datei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Die ursprüngliche Breite der geladenen FLV-Datei. Diese Eigenschaft gibt "-1" zurück, wenn noch keine Informationen verfügbar sind.
		 
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/width"><linktext>width</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:visible:get"><apiName>visible</apiName><shortdesc>
		 Ein boolescher Wert; bei der Einstellung "true" ist die VideoPlayer-Instanz sichtbar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
         
         </apiDefaultValue></apiValueDef><apiDesc>
		 Ein boolescher Wert; bei der Einstellung <codeph>true</codeph> ist die VideoPlayer-Instanz sichtbar. Bei der Einstellung <codeph>false</codeph> ist die Instanz nicht sichtbar. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:volume:get"><apiName>volume</apiName><shortdesc>
		 Eine Zahl im Bereich 0 bis 1, die die Lautstärkeeinstellung angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
		 
		 </apiDefaultValue><apiTipTexts><apiTipText>Die Lautstärkeeinstellung im Wertebereich von 0 bis 1.
		 
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Eine Zahl im Bereich 0 bis 1, die die Lautstärkeeinstellung angibt. 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/soundTransform"><linktext>soundTransform</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:height:set"><apiName>height</apiName><shortdesc>
		 Eine Zahl, die die Höhe der VideoPlayer-Instanz in Pixel angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Eine Zahl, die die Höhe der VideoPlayer-Instanz in Pixel angibt. 
		 
		 <p><b>Hinweis</b>: Verwechseln Sie diese Eigenschaft nicht mit der Eigenschaft <codeph>flash.media.Video.height</codeph>, die der Eigenschaft <codeph>fl.video.VideoPlayer.videoHeight</codeph> entspricht.</p>
         
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#height/setSize()"><linktext>setSize()</linktext></link><link href="" invalidHref="flash.media.xml#Video/videoHeight"><linktext>Video.videoHeight</linktext></link><link href="" invalidHref="fl.video.xml#height/videoHeight"><linktext>VideoPlayer.videoHeight</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:scaleX:set"><apiName>scaleX</apiName><shortdesc>
		 Eine Zahl, die die horizontale Skalierung darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>1
         </apiDefaultValue></apiValueDef><apiDesc>
		 Eine Zahl, die die horizontale Skalierung darstellt. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#scaleX/setScale()"><linktext>setScale()</linktext></link><link href="" invalidHref="fl.video.xml#scaleX/scaleY"><linktext>scaleY</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:scaleY:set"><apiName>scaleY</apiName><shortdesc>
		 Eine Zahl, die die vertikale Skalierung darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>1
         </apiDefaultValue></apiValueDef><apiDesc>
		 Eine Zahl, die die vertikale Skalierung darstellt. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#scaleY/setScale()"><linktext>setScale()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:width:set"><apiName>width</apiName><shortdesc>
		 Eine Zahl, die die Breite der VideoPlayer-Instanz auf der Bühne festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Eine Zahl, die die Breite der VideoPlayer-Instanz auf der Bühne festlegt.
		 
		 <p><b>Hinweis</b>: Die Eigenschaft <codeph>flash.media.Video.width</codeph> entspricht der Eigenschaft <codeph>fl.video.VideoPlayer.videoWidth</codeph>.</p>
         
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#width/setSize()"><linktext>setSize()</linktext></link><link href="" invalidHref="flash.media.xml#Video/videoWidth"><linktext>Video.videoWidth</linktext></link><link href="" invalidHref="fl.video.xml#width/videoWidth"><linktext>VideoPlayer.videoWidth</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:x:set"><apiName>x</apiName><shortdesc>
		 Eine Zahl, die die horizontale Position des Video-Players in Pixel angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Eine Zahl, die die horizontale Position des Video-Players in Pixel angibt.
		 
		 <p>Das Festlegen der Eigenschaft <codeph>x</codeph> betrifft auch die Eigenschaft <codeph>registrationX</codeph>. Wenn entweder die Eigenschaft <codeph>x</codeph> oder <codeph>registrationX</codeph> festgelegt ist, wird die zweite Eigenschaft geändert, um ihren Offset von der ersten beizubehalten. Beispiel: Wenn <codeph>x</codeph> = 10 und <codeph>registrationX</codeph> = 20 ist, wird durch Festlegen von<codeph>x</codeph> = 110 auch <codeph>registrationX</codeph> = 120 festgelegt.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#x/registrationX"><linktext>registrationX</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:y:set"><apiName>y</apiName><shortdesc>
		 Eine Zahl, die die vertikale Position des Video-Players in Pixel angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Eine Zahl, die die vertikale Position des Video-Players in Pixel angibt.
		 
		 <p>Das Festlegen der Eigenschaft <codeph>y</codeph> betrifft auch die Eigenschaft <codeph>registrationY</codeph>. Wenn entweder die Eigenschaft <codeph>y</codeph> oder <codeph>registrationY</codeph> festgelegt ist, wird die zweite Eigenschaft geändert, um ihren Offset von der ersten beizubehalten. Beispiel: Wenn <codeph>y</codeph> = 10 und <codeph>registrationY</codeph> = 20 ist, wird durch Festlegen von <codeph>y</codeph> = 110 auch <codeph>registrationY</codeph> = 120 festgelegt.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#y/registrationY"><linktext>registrationY</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:NCManager"><apiName>NCManager</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>fl.video:INCManager</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 <codeph/> 
	 
	 <p>Die NCManager-Klasse sucht eine URL und geht von Folgendem aus:</p>
	 <ul>
	 <li/>
	 <li/>
	 <li> Wenn die URL mit ".flv" endet, wird daraus geschlossen, dass sie für einen progressiven FLV-Download ist. Andernfalls ist es eine SMIL-Datei, die heruntergeladen und analysiert werden muss.</li>
	 </ul>
	 
	 </apiDesc><example conref="NCManagerExample.as"/></apiClassifierDetail><apiConstructor id="fl.video:NCManager:NCManager"><apiName>NCManager</apiName><shortdesc>
         Erstellt eine neue NCManager-Instanz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
         Erstellt eine neue NCManager-Instanz.
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:NCManager:close"><apiName>close</apiName><shortdesc conref="INCManager#close()">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="INCManager#close()">
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/close()"><linktext>INCManager.close()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:connectAgain"><apiName>connectAgain</apiName><shortdesc conref="INCManager#connectAgain()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>Wenn versucht wurde, eine andere Verbindung herzustellen, lautet der Wert <codeph>true</codeph>. Wenn bereits ein Verbindungsaufbau versucht wurde oder weitere Versuche zwecklos sind, lautet der Wert <codeph>false</codeph>.
         
         </apiDesc></apiReturn></apiOperationDef><apiDesc conref="INCManager#connectAgain()">
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/connectAgain()"><linktext>INCManager.connectAgain()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:connectToURL"><apiName>connectToURL</apiName><shortdesc conref="INCManager#connectToURL()">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>Wenn eine synchrone Verbindung hergestellt wurde, lautet der Wert <codeph>true</codeph>. Wenn versucht wurde, eine asynchrone Verbindung herzustellen, der Aufrufer also ein connected-Ereignis erwarten sollte, <codeph>false</codeph>.
         
         </apiDesc></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>Die URL, mit der das VideoPlayer-Objekt eine Verbindung herstellen möchte.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc conref="INCManager#connectToURL()">
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/connectToURL()"><linktext>INCManager.connectToURL()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:getProperty"><apiName>getProperty</apiName><shortdesc>
		 Ermöglicht das Abrufen der Eigenschaften "fallbackServerName", "fpadZone", "objectEncoding" und "proxyType".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Darstellung der Eigenschaften fallbackServerName, fpadZone, objectEncoding und proxyType als String.
         </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Der Name der Eigenschaft, die die Methode <codeph>getProperty</codeph> aufruft.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Ermöglicht das Abrufen der Eigenschaften <codeph>fallbackServerName</codeph>, <codeph>fpadZone</codeph>, <codeph>objectEncoding</codeph> und <codeph>proxyType</codeph>. Eine Beschreibung dieser Eigenschaften finden Sie unter <codeph>setProperty()</codeph>.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#NCManager/setProperty()"><linktext>setProperty()</linktext></link><link href="fl.video.xml#NCManager/fallbackServerName"><linktext>fallbackServerName</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:helperDone"><apiName>helperDone</apiName><shortdesc conref="INCManager#helperDone()">
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>helper</apiItemName><apiType value="Object"/><apiDesc>Das helper-Objekt.
         
         </apiDesc></apiParam><apiParam><apiItemName>success</apiItemName><apiType value="Boolean"/><apiDesc>Eine Einstellung zur Angabe, wenn eine Aufgabe abgeschlossen ist. Wenn der Wert für <codeph>success</codeph> <codeph>true</codeph> ist, wurde die Aufgabe erfolgreich abgeschlossen. Andernfalls lautet der Wert <codeph>false</codeph>.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc conref="INCManager#helperDone()">
	 
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/helperDone()"><linktext>INCManager.helperDone()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:reconnect"><apiName>reconnect</apiName><shortdesc conref="INCManager#reconnect()">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="INCManager#reconnect()">
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/reconnect()"><linktext>INCManager.reconnect()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:setProperty"><apiName>setProperty</apiName><shortdesc>
		 Ermöglicht das Festlegen der Eigenschaften "fallbackServerName", "fpadZone", "objectEncoding" und "proxyType".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Der Name der Eigenschaft, die die Methode <codeph>setProperty</codeph> aufruft.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value=""/><apiDesc>Der Wert der Eigenschaft.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Ermöglicht das Festlegen der Eigenschaften <codeph>fallbackServerName</codeph>, <codeph>fpadZone</codeph>, <codeph>objectEncoding</codeph> und <codeph>proxyType</codeph>.
		 
		 <p>Die Eigenschaft <codeph>fallbackServerName</codeph> legt eine URL für den Flash Media Server (FMS) fest. Diese URL wird verwendet, wenn die primäre Serveradresse, die von der nach <codeph>connectToURL()</codeph> übergebenen URL abgeleitet wurde, nicht erreicht werden kann. Diese Eigenschaft kann auch direkt mit der Eigenschaft <codeph>fallbackServerName</codeph> festgelegt werden.</p>
		 
	 <p>Die Eigenschaft <codeph>fpadZone</codeph> legt die Eigenschaft <codeph>fpadZone</codeph> für Flash Media Server (FMS) fest. Wenn der zurückgegebene Wert keine Zahl ist (NaN), dann wird keine Zone festgelegt. Die Eigenschaft <codeph>fpadZone</codeph> muss festgelegt werden, bevor der Verbindungsvorgang wirksam wird. Wenn Sie keine Zone festlegen möchten, legen Sie für die Eigenschaft <codeph>fpadZone</codeph> den Wert <codeph>NaN</codeph> fest.</p>
		 Der Standardwert ist <codeph>NaN</codeph>.
		 
		 <p>Die Eigenschaft <codeph>objectEncoding</codeph> legt den Wert fest, der für die Eigenschaft <codeph>objectEncoding</codeph> bei <codeph>NetConnection</codeph>-Instanzen verwendet wird. Der Standardwert ist <codeph>flash.net.ObjectEncoding.AMF0</codeph>.</p>
		 
		 <p>Die Eigenschaft <codeph>proxyType</codeph> legt den Wert fest, der für die Eigenschaft <codeph>proxyType</codeph> bei <codeph>NetConnection</codeph>-Instanzen verwendet wird. Die Standardeinstellung ist "best".</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#NCManager/getProperty()"><linktext>getProperty()</linktext></link><link href="fl.video.xml#NCManager/fallbackServerName"><linktext>fallbackServerName</linktext></link></related-links></apiOperation><apiValue id="fl.video:NCManager:DEFAULT_TIMEOUT"><apiName>DEFAULT_TIMEOUT</apiName><shortdesc>
	 Der Standardwert für das Timeout in Millisekunden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>60000</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	 Der Standardwert für das Timeout in Millisekunden.
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/timeout"><linktext>INCManager.timeout</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManager/VERSION"><linktext>VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:VERSION"><apiName>VERSION</apiName><shortdesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11. Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManager/SHORT_VERSION"><linktext>SHORT_VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:fallbackServerName"><apiName>fallbackServerName</apiName><shortdesc>
	 Macht die Eigenschaft "fallbackServerName" indirekt oder direkt sichtbar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	 Macht die Eigenschaft <codeph>fallbackServerName</codeph> indirekt oder direkt sichtbar.
	 
	 <ul>
	 <li>Indirekt: Geben Sie ein zweites &lt;meta base> in SMIL an. Die Eigenschaft <codeph>fallbackServerName</codeph> verwendet dieses base-Attribut. (Die Eigenschaft <codeph>fallbackServerName</codeph> verwendet ausschließlich den Servernamen.)</li>
	 
	 <li>Direkt: Greifen Sie in "FLVPlayback" oder "VideoPlayer" auf die Eigenschaft <codeph>ncMgr</codeph> zu und legen Sie die Eigenschaft <codeph>fallbackServerName</codeph> fest, oder verwenden Sie die Methode <codeph>setProperty()</codeph>.</li>
         </ul>
         
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManager/setProperty()"><linktext>setProperty()</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:bitrate:get"><apiName>bitrate</apiName><shortdesc>
		 Beim Streaming vom Flash Media Server (FMS) gibt die bitrate-Eigenschaft den bei der automatischen Erkennung berechneten Wert und nicht den mit der bitrate()-Eigenschaft festgelegten Wert zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Beim Streaming vom Flash Media Server (FMS) gibt die <codeph>bitrate</codeph>-Eigenschaft den bei der automatischen Erfassung berechneten Wert und nicht den mit der <codeph>bitrate()</codeph>-Eigenschaft festgelegten Wert zurück.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/bitrate"><linktext>INCManager.bitrate</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:isDynamicStream:get"><apiName>isDynamicStream</apiName><shortdesc>
		 
         
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5."/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:NCManager:isRTMP:get"><apiName>isRTMP</apiName><shortdesc conref="INCManager#isRTMP">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="INCManager#isRTMP">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/isRTMP"><linktext>INCManager.isRTMP</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:netConnection:get"><apiName>netConnection</apiName><shortdesc conref="INCManager#netConnection">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc conref="INCManager#netConnection">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/netConnection"><linktext>INCManager.netConnection</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamHeight:get"><apiName>streamHeight</apiName><shortdesc conref="INCManager#streamHeight">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="INCManager#streamHeight">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamHeight"><linktext>INCManager.streamHeight</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamLength:get"><apiName>streamLength</apiName><shortdesc conref="INCManager#streamLength">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="INCManager#streamLength">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamLength"><linktext>INCManager.streamLength</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamName:get"><apiName>streamName</apiName><shortdesc conref="INCManager#streamName">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc conref="INCManager#streamName">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamName"><linktext>INCManager.streamName</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamWidth:get"><apiName>streamWidth</apiName><shortdesc conref="INCManager#streamWidth">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="INCManager#streamWidth">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamWidth"><linktext>INCManager.streamWidth</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streams:get"><apiName>streams</apiName><shortdesc conref="INCManager#streams">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="INCManager#streams">
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:NCManager:timeout:get"><apiName>timeout</apiName><shortdesc conref="INCManager#timeout">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc conref="INCManager#timeout">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/timeout"><linktext>INCManager.timeout</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:videoPlayer:get"><apiName>videoPlayer</apiName><shortdesc conref="INCManager#videoPlayer">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>fl.video:VideoPlayer</apiValueClassifier></apiValueDef><apiDesc conref="INCManager#videoPlayer">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/videoPlayer"><linktext>INCManager.videoPlayer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
     Flash&amp;#xAE; Player sendet ein VideoEvent-Objekt, wenn der Benutzer ein Video abspielt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>VideoEvent-Klasse
     </apiTipText></apiTipTexts><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
     Flash<sup>®</sup> Player sendet ein VideoEvent-Objekt, wenn der Benutzer ein Video wiedergibt.
     
     </apiDesc></apiClassifierDetail><adobeApiEvent id="fl.video:VideoEvent:AUTO_REWOUND_autoRewound"><apiName>autoRewound</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:AUTO_REWOUND</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:BUFFERING_STATE_ENTERED_bufferingStateEntered"><apiName>bufferingStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:BUFFERING_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:CLOSE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:COMPLETE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:FAST_FORWARD_fastForward"><apiName>fastForward</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:FAST_FORWARD</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:PAUSED_STATE_ENTERED_pausedStateEntered"><apiName>pausedStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:PAUSED_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:PLAYING_STATE_ENTERED_playingStateEntered"><apiName>playingStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:PLAYING_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:READY</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:REWIND_rewind"><apiName>rewind</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:REWIND</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SCRUB_FINISH_scrubFinish"><apiName>scrubFinish</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SCRUB_FINISH</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SCRUB_START_scrubStart"><apiName>scrubStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SCRUB_START</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SEEKED_seeked"><apiName>seeked</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SEEKED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SKIN_LOADED_skinLoaded"><apiName>skinLoaded</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SKIN_LOADED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:STATE_CHANGE_stateChange"><apiName>stateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:STATE_CHANGE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:STOPPED_STATE_ENTERED_stoppedStateEntered"><apiName>stoppedStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:STOPPED_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:UNSUPPORTED_PLAYER_VERSION_stoppedStateEntered"><apiName>stoppedStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType/><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:VideoEvent:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
         Erstellt ein Event-Objekt, das Informationen über Video-Ereignisse enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Ereignis-Listener können über die übernommene <codeph>type</codeph>-Eigenschaft auf diese Informationen zugreifen. Gültige Werte sind <codeph>VideoEvent.AUTO_REWOUND</codeph>, <codeph>VideoEvent.BUFFERING_STATE_ENTERED</codeph>, <codeph>VideoEvent.CLOSE</codeph>, <codeph>VideoEvent.COMPLETE</codeph>, <codeph>VideoEvent.FAST_FORWARD</codeph>, <codeph>VideoEvent.PAUSED_STATE_ENTERED</codeph>, <codeph>VideoEvent.PLAYHEAD_UPDATE</codeph>, <codeph>VideoEvent.PLAYING_STATE_ENTERED</codeph>, <codeph>VideoEvent.READY</codeph>, <codeph>VideoEvent.REWIND</codeph>, <codeph>VideoEvent.SCRUB_FINISH</codeph>, <codeph>VideoEvent.SCRUB_START</codeph>, <codeph>VideoEvent.SEEKED</codeph>, <codeph>VideoEvent.SKIN_LOADED</codeph>, <codeph>VideoEvent.STATE_CHANGE</codeph>, <codeph>VideoEvent.STOPPED_STATE_ENTERED</codeph> und <codeph>VideoEvent.VOLUME_UPDATE</codeph>.
         
         </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph>bubbles</codeph> auf diese Informationen zugreifen.
         
         </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph>cancelable</codeph> auf diese Informationen zugreifen.
         
         </apiDesc></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.
         
         </apiDesc></apiParam><apiParam><apiItemName>playheadTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.
         
         </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Bestimmt den Index des VideoPlayer-Objekts.     
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Erstellt ein Ereignisobjekt, das Informationen über Video-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
         
         </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiConstructor><apiValue id="fl.video:VideoEvent:AUTO_REWOUND"><apiName>AUTO_REWOUND</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines autoRewound-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>autoRewound</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>autoRewound</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:BUFFERING_STATE_ENTERED"><apiName>BUFFERING_STATE_ENTERED</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines bufferingStateEntered-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bufferingStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>bufferingStateEntered</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines close-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>close</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
         Definiert den Wert der Eigenschaft „type“ eines complete-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>complete</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:FAST_FORWARD"><apiName>FAST_FORWARD</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines fastForward-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fastForward</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>fastForward</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:PAUSED_STATE_ENTERED"><apiName>PAUSED_STATE_ENTERED</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines pausedStateEntered-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pausedStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>pausedStateEntered</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:PLAYHEAD_UPDATE"><apiName>PLAYHEAD_UPDATE</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines playheadUpdate-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playheadUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>playheadUpdate</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:PLAYING_STATE_ENTERED"><apiName>PLAYING_STATE_ENTERED</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines playingStateEntered-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playingStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>playingStateEntered</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:READY"><apiName>READY</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines ready-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>ready</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:REWIND"><apiName>REWIND</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines rewind-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewind</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>rewind</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SCRUB_FINISH"><apiName>SCRUB_FINISH</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines scrubFinish-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scrubFinish</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>scrubFinish</codeph>-Ereignisobjekts. 
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SCRUB_START"><apiName>SCRUB_START</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines scrubStart-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scrubStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>scrubStart</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SEEKED"><apiName>SEEKED</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines seeked-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>seeked</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>seeked</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SKIN_LOADED"><apiName>SKIN_LOADED</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines skinLoaded-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>skinLoaded</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>skinLoaded</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:STATE_CHANGE"><apiName>STATE_CHANGE</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines stateChange-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>stateChange</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:STOPPED_STATE_ENTERED"><apiName>STOPPED_STATE_ENTERED</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines stoppedStateEntered-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stoppedStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>stoppedStateEntered</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:UNSUPPORTED_PLAYER_VERSION"><apiName>UNSUPPORTED_PLAYER_VERSION</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unsupportedPlayerVersion</apiData><apiType value="String"/></apiValueDef><apiDesc>
         <codeph/><codeph/>
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>state</codeph></entry><entry>Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Eine Zahl, die der aktuellen Zeit oder Position des Abspielkopfs entspricht.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
         Eine Zahl, die die aktuelle Position (Zeit) des Abspielkopfs angibt. Diese Angabe erfolgt in Sekunden, wobei es sich auch um einen Bruchwert handeln kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiTipTexts><apiTipText>Die aktuelle Position des Abspielkopfs in Sekunden.
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
         Eine Zahl, die die aktuelle Position (Zeit) des Abspielkopfs angibt. Diese Angabe erfolgt in Sekunden, wobei es sich auch um einen Bruchwert handeln kann. Das Festlegen dieser Eigenschaft löst eine Suche aus, bei der alle Einschränkungen einer Suche gelten.
         
         <p>Wenn sich die Zeit des Abspielkopfs ändert, was beim Abspielen der FLV-Datei jede Viertelsekunde passiert, löst die Komponente das Ereignis <codeph>playheadUpdate</codeph> aus.</p>
         
         <p>Aus verschiedenen Gründen hat die Eigenschaft <codeph>playheadTime</codeph> möglicherweise nicht sofort nach dem Aufrufen einer der Suchmethoden oder dem Festlegen von <codeph>playheadTime</codeph> zum Auslösen eines Suchlaufs den erwarteten Wert. Erstens können Sie bei einem progressiven Download nur nach einem Schlüsselbild suchen, so dass ein Suchlauf Sie zu der Zeit des ersten Schlüsselbilds nach der angegebenen Zeit bringt. (Beim Streaming führt eine Suche immer zur exakt angegebenen Zeit, selbst wenn die FLV-Quelldatei an dieser Stelle über kein Schlüsselbild verfügt.) Zweitens ist die Suche asynchron, so dass beim Aufrufen einer Suchmethode oder beim Festlegen der Eigenschaft <codeph>playheadTime</codeph> der Wert von <codeph>playheadTime</codeph> nicht sofort aktualisiert wird. Um die Zeit nach dem Abschluss der Suche abzurufen, warten Sie auf das Ereignis <codeph>seek</codeph>, welches erst ausgelöst wird, wenn die Eigenschaft <codeph>playheadTime</codeph> aktualisiert wurde.</p>
         
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/playheadTime"><linktext>FLVPlayback.playheadTime</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/seek()"><linktext>FLVPlayback.seek()</linktext></link><link href="fl.video.xml#VideoPlayer/playheadTime"><linktext>VideoPlayer.playheadTime</linktext></link><link href="fl.video.xml#VideoPlayer/seek()"><linktext>VideoPlayer.seek()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:state:get"><apiName>state</apiName><shortdesc>
         Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
         Ein String, der die Konstante aus der VideoState-Klasse kennzeichnet, die den Abspielstatus der Komponente beschreibt. Diese Eigenschaft wird mit den Methoden <codeph>load()</codeph>, <codeph>play()</codeph>, <codeph>stop()</codeph>, <codeph>pause()</codeph> und <codeph>seek()</codeph> festgelegt. 
         
         <p>Die möglichen Werte für die Eigenschaft "state" lauten: <codeph>buffering</codeph>, <codeph>connectionError</codeph>, <codeph>disconnected</codeph>, <codeph>loading</codeph>, <codeph>paused</codeph>, <codeph>playing</codeph>, <codeph>rewinding</codeph>, <codeph>seeking</codeph> und <codeph>stopped</codeph>. Sie können die Eigenschaften der FLVPlayback-Klasse verwenden, um diese Statuszustände zu überprüfen. </p>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState/DISCONNECTED"><linktext>VideoState.DISCONNECTED</linktext></link><link href="fl.video.xml#VideoState/STOPPED"><linktext>VideoState.STOPPED</linktext></link><link href="fl.video.xml#VideoState/PLAYING"><linktext>VideoState.PLAYING</linktext></link><link href="fl.video.xml#VideoState/PAUSED"><linktext>VideoState.PAUSED</linktext></link><link href="fl.video.xml#VideoState/BUFFERING"><linktext>VideoState.BUFFERING</linktext></link><link href="fl.video.xml#VideoState/LOADING"><linktext>VideoState.LOADING</linktext></link><link href="fl.video.xml#VideoState/CONNECTION_ERROR"><linktext>VideoState.CONNECTION_ERROR</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link><link href="fl.video.xml#VideoState/SEEKING"><linktext>VideoState.SEEKING</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoAlign"><apiName>VideoAlign</apiName><shortdesc>
	 Mithilfe der VideoAlign-Klasse werden constant-Werte für die Eigenschaften "FLVPlayback.align" und "VideoPlayer.align" bereitgestellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Mithilfe der VideoAlign-Klasse werden constant-Werte für die Eigenschaften <codeph>FLVPlayback.align</codeph> und <codeph>VideoPlayer.align</codeph> bereitgestellt.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/align"><linktext>FLVPlayback.align</linktext></link><link href="fl.video.xml#VideoPlayer/align"><linktext>VideoPlayer.align</linktext></link></related-links><apiValue id="fl.video:VideoAlign:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
         Gibt an, dass das Video unten ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video unten ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:BOTTOM_LEFT"><apiName>BOTTOM_LEFT</apiName><shortdesc>
         Gibt an, dass das Video unten links ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottomLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video unten links ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:BOTTOM_RIGHT"><apiName>BOTTOM_RIGHT</apiName><shortdesc>
         Gibt an, dass das Video unten rechts ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottomRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video unten rechts ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:CENTER"><apiName>CENTER</apiName><shortdesc>
         Gibt an, dass das Video zentriert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>center</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video zentriert wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:LEFT"><apiName>LEFT</apiName><shortdesc>
         Gibt an, dass das Video links ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video links ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:RIGHT"><apiName>RIGHT</apiName><shortdesc>
         Gibt an, dass das Video rechts ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video rechts ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:TOP"><apiName>TOP</apiName><shortdesc>
         Gibt an, dass das Video oben ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video oben ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:TOP_LEFT"><apiName>TOP_LEFT</apiName><shortdesc>
         Gibt an, dass das Video oben links ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>topLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video oben links ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:TOP_RIGHT"><apiName>TOP_RIGHT</apiName><shortdesc>
         Gibt an, dass das Video oben rechts ausgerichtet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>topRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Gibt an, dass das Video oben rechts ausgerichtet wird.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:DynamicStream"><apiName>DynamicStream</apiName><shortdesc>
     
     </shortdesc><prolog><author>Adobe Systems Incorporated
     
     </author><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.net:NetStream</apiBaseClassifier></apiClassifierDef><apiDesc>
     
         <codeph/>    <codeph/> 
     
     <codeblock> 
     import fl.video. 
     
     var dsi:DynamicStreamItem = new DynamicStreamItem(); 
     dsi.uri = "rtmp://localhost/vod/"; 
     dsi.addStream("mp4:sample1_150kbps.f4v", 150); 
     dsi.addStream("mp4:sample1_700kbps.f4v", 700); 
     dsi.addStream("mp4:sample1_1500kbps.f4v", 1500); 
     
     vid.play2(dsi);
     </codeblock>
     
	 </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:DynamicStream:DynamicStream"><apiName>DynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>nc</apiItemName><apiType value="flash.net:NetConnection"/><apiDesc>	 
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
		  
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:DynamicStream:close"><apiName>close</apiName><shortdesc>
 		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
 		 <codeph/>
 		 
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:getStreamItemAt"><apiName>getStreamItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>fl.video:DynamicStreamItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:manualSwitchMode"><apiName>manualSwitchMode</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>mode</apiItemName><apiType value="Boolean"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		  <codeph/><codeph/><codeph/><codeph/><codeph/> <codeph/>  
         
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:onMetaData"><apiName>onMetaData</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>infoObj</apiItemName><apiType value="Object"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/>  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:onPlayStatus"><apiName>onPlayStatus</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>info</apiItemName><apiType value="Object"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         <codeph/>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:play"><apiName>play</apiName><shortdesc>
 		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>		 
         </apiDesc></apiParam></apiOperationDef><apiDesc>
 		 <codeph/>
 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:play2"><apiName>play2</apiName><shortdesc>
 		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="flash.net:NetStreamPlayOptions"/><apiDesc>		 
 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
 		 <codeph/> <codeph/>
 		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.net.NetStream.xml"><linktext>flash.net.NetStream</linktext></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:setBandwidthLimit"><apiName>setBandwidthLimit</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>limit</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
            
		 
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:startPlay"><apiName>startPlay</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiOperationClassifier>fl.video:DynamicStreamItem</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 <codeph/> 
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:switchDown"><apiName>switchDown</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         <codeph/>   
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:switchToStreamName"><apiName>switchToStreamName</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/>  
         
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:switchToStreamRate"><apiName>switchToStreamRate</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rate</apiItemName><apiType value="int"/><apiDesc>        </apiDesc></apiParam></apiOperationDef><apiDesc>
         <codeph/>  
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:switchUp"><apiName>switchUp</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         <codeph/>  
         
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiValue id="fl.video:DynamicStream:STATE_BUFFERING"><apiName>STATE_BUFFERING</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>buffering</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:STATE_PAUSED"><apiName>STATE_PAUSED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>paused</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:STATE_PLAYING"><apiName>STATE_PLAYING</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>playing</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:STATE_STOPPED"><apiName>STATE_STOPPED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>stopped</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:VERSION"><apiName>VERSION</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1.1.0.6</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:aggressiveModeBufferLength:get"><apiName>aggressiveModeBufferLength</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
            
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:currentStreamBitRate:get"><apiName>currentStreamBitRate</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
           <codeph/><codeph/><codeph/>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:currentStreamName:get"><apiName>currentStreamName</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          <codeph/><codeph/><codeph/> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:droppedFramesLockDelay:get"><apiName>droppedFramesLockDelay</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
             <codeph/>    <codeph/>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:maxBandwidth:get"><apiName>maxBandwidth</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
           
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:preferredBufferLength:get"><apiName>preferredBufferLength</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
           <codeph/> <codeph/>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:startBufferLength:get"><apiName>startBufferLength</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
            
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:switchQOSTimerDelay:get"><apiName>switchQOSTimerDelay</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
         
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoError"><apiName>VideoError</apiName><shortdesc>
     Die VideoError-Ausnahme ist der primäre Mechanismus zum Berichten von Laufzeitfehlern aus den FLVPlayback- und VideoPlayer-Klassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>VideoError-Klasse
     </apiTipText></apiTipTexts><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
     Die VideoError-Ausnahme ist der primäre Mechanismus zum Berichten von Laufzeitfehlern aus den FLVPlayback- und VideoPlayer-Klassen.
     
     </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:VideoError:VideoError"><apiName>VideoError</apiName><shortdesc>
         Erstellt ein neues VideoError-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>errCode</apiItemName><apiType value="uint"/><apiDesc>Der Code, der diesem Fehler entspricht.
         
         </apiDesc></apiParam><apiParam><apiItemName>msg</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Die Fehlermeldung.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Erstellt ein neues VideoError-Objekt.
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:VideoError:DELETE_DEFAULT_PLAYER"><apiName>DELETE_DEFAULT_PLAYER</apiName><shortdesc>
         Statusvariable, die angibt, dass der Benutzer das standardmäßige VideoPlayer-Objekt nicht löschen kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1007</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die angibt, dass der Benutzer das standardmäßige VideoPlayer-Objekt nicht löschen kann.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:ILLEGAL_CUE_POINT"><apiName>ILLEGAL_CUE_POINT</apiName><shortdesc>
         Statusvariable, die den unzulässigen Cue-Point angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die den unzulässigen Cue-Point angibt.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INCMANAGER_CLASS_UNSET"><apiName>INCMANAGER_CLASS_UNSET</apiName><shortdesc>
         Statusvariable, die angibt, dass die INCManager-Klasse nicht festgelegt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1008</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die angibt, dass die INCManager-Klasse nicht festgelegt ist.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INVALID_SEEK"><apiName>INVALID_SEEK</apiName><shortdesc>
         Statusvariable, die einen ungültigen Suchlauf angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1003</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die einen ungültigen Suchlauf angibt.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INVALID_SOURCE"><apiName>INVALID_SOURCE</apiName><shortdesc>
         Statusvariable, die eine ungültige Quelle angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die eine ungültige Quelle angibt.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INVALID_XML"><apiName>INVALID_XML</apiName><shortdesc>
         Statusvariable, die ungültige XML-Daten angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1005</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die ungültige XML-Daten angibt.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:MISSING_SKIN_STYLE"><apiName>MISSING_SKIN_STYLE</apiName><shortdesc>
         Statusvariable, die einen fehlenden Skin-Stil angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1010</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die einen fehlenden Skin-Stil angibt.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NETSTREAM_CLIENT_CLASS_UNSET"><apiName>NETSTREAM_CLIENT_CLASS_UNSET</apiName><shortdesc>
	Ein Fehler, der auftritt, wenn die statische Eigenschaft "VideoPlayer.netStatusClientClass" auf einen ungültigen Wert gesetzt wird. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.115.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1012</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	Ein Fehler, der auftritt, wenn die statische Eigenschaft <codeph>VideoPlayer.netStatusClientClass</codeph> auf einen ungültigen Wert gesetzt wird.  Dies ist auch der Fall, wenn es sich um einen String handelt und die Klasse nicht gefunden wird und wenn die Klasse keinen Konstruktor aufweist, der eine Instanz von VideoPlayer als Parameter annimmt.
	
	<p>Eine Beispielfehlermeldung kann mit dem folgenden Code erzeugt werden:</p>
	<codeblock>
	  // Place the FLVPlayback component on the Stage at 0,0 and provide the instance name myflvPlayback.
	  import fl.video.
	  VideoPlayer.netStreamClientClass = null;
	   try {
	        myflvPlayback.play('test.flv');
	   } catch (e:VideoError) {
	         if (e.code =VideoError.NETSTREAM_CLIENT_CLASS_UNSET) {
	           trace('I forced this error on purpose');
	         }
	  }
	</codeblock>
    	</apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NO_BITRATE_MATCH"><apiName>NO_BITRATE_MATCH</apiName><shortdesc>
         Statusvariable, die angibt, dass keine übereinstimmende Bitrate vorhanden ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1006</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die angibt, dass keine übereinstimmende Bitrate vorhanden ist.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NO_CONNECTION"><apiName>NO_CONNECTION</apiName><shortdesc>
         Statusvariable, die angibt, dass Flash Player keine Verbindung mit dem Server herstellen kann oder die FLV-Datei auf dem Server nicht findet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1000</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die angibt, dass Flash Player keine Verbindung mit dem Server herstellen kann oder die FLV-Datei auf dem Server nicht findet.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NULL_URL_LOAD"><apiName>NULL_URL_LOAD</apiName><shortdesc>
         Statusvariable, die angibt, dass eine URL mit dem Wert "null" an die Methode "load()" gesendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1009</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die angibt, dass eine URL mit dem Wert <codeph>null</codeph> an die Methode <codeph>load()</codeph> gesendet wurde.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die kurze Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoError/VERSION"><linktext>VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoError:UNSUPPORTED_PROPERTY"><apiName>UNSUPPORTED_PROPERTY</apiName><shortdesc>
         Statusvariable, die angibt, dass eine nicht unterstützte Eigenschaft an die Klasse "INCManager" oder die Methoden "getProperty" und "setProperty" übergeben wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1011</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Statusvariable, die angibt, dass eine nicht unterstützte Eigenschaft an die INCManager-Klasse oder die <codeph>getProperty</codeph>- oder <codeph>setProperty</codeph>-Methode übergeben wurde.
	 
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/getProperty()"><linktext>INCManager.getProperty()</linktext></link><link href="fl.video.xml#INCManager/setProperty()"><linktext>INCManager.setProperty()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoError:VERSION"><apiName>VERSION</apiName><shortdesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Statusvariable, die die lange Versionsnummer der Komponente angibt. Die Versionsnummer ist nützlich, wenn Sie eine FLA-Datei haben und wissen müssen, um welche Version der Komponente es sich handelt. Geben Sie zur Bestimmung der Komponentenversion die folgende Codeablaufverfolgung in die FLA-Datei ein:
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>Die Variable <codeph>VERSION</codeph> umfasst die Haupt- und Unterversionen sowie die Änderungs- und Buildnummern, z. B. 2.2.2.11. Die Variable <codeph>SHORT_VERSION</codeph> umfasst nur die Haupt- und Unterversionen, z. B. 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoError/SHORT_VERSION"><linktext>SHORT_VERSION-Variable</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoError:code:get"><apiName>code</apiName><shortdesc>
         Der Code, der diesem Fehler entspricht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
         Der Code, der diesem Fehler entspricht. Der Fehlercode wird an den Konstruktor übergeben.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:LayoutEvent"><apiName>LayoutEvent</apiName><shortdesc>
	 Dieses Ereignis wird ausgelöst, wenn der Video-Player angeordnet und/oder seine Größe geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Dieses Ereignis wird ausgelöst, wenn der Video-Player angeordnet und/oder seine Größe geändert wird. Es folgen zwei Szenarios für eine Anordnung:
	 <ul>
       <li>Wenn der Video-Player entweder mit dem Ereignis <codeph>autoLayout</codeph>, durch Aufrufen der Methode <codeph>setScale()</codeph> oder <codeph>setSize()</codeph> oder durch Ändern der Eigenschaften <codeph>width</codeph>, <codeph>height</codeph>, <codeph>scaleX</codeph>, <codeph>scaleY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> angeordnet wird.</li>
	   <li>Wenn zwei Video-Player unterschiedlicher Größe oder Position vorhanden sind und die Eigenschaft <codeph>visibleVideoPlayerIndex</codeph> von einem Video-Player auf den anderen umgeschaltet wird.</li>
	 </ul>  
	 
	 <p>Es gibt nur einen Typ eines LayoutEvent-Objekts: <codeph>LayoutEvent.LAYOUT</codeph>.</p>
	 
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#LayoutEvent/LAYOUT"><linktext>LAYOUT</linktext></link></related-links><adobeApiEvent id="fl.video:LayoutEvent:LAYOUT_layout"><apiName>layout</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:LayoutEvent:LAYOUT</apiEventType><adobeApiEventClassifier>fl.video:LayoutEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:layout"><linktext>layout-Ereignis</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:LayoutEvent:LayoutEvent"><apiName>LayoutEvent</apiName><shortdesc>
         Erstellt ein Ereignisobjekt, das Informationen über layout-Ereignisse enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Ereignis-Listener können über die übernommene <codeph>type</codeph>-Eigenschaft auf diese Informationen zugreifen. Es gibt nur einen Typ eines autoLayout-Ereignisses: <codeph>LayoutEvent.LAYOUT</codeph>.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph>bubbles</codeph> auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph>cancelable</codeph> auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>oldBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Gibt die Werte der Eigenschaften <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> und <codeph>height</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>layout</codeph> an. Ereignis-Listener können über die Eigenschaft <codeph>oldBounds</codeph> auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>oldRegistrationBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Gibt die Werte der Eigenschaften <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>layout</codeph> an. Ereignis-Listener können über die Eigenschaft <codeph>oldRegistrationBounds</codeph> auf diese Informationen zugreifen.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Erstellt ein Ereignisobjekt, das Informationen über <codeph>layout</codeph>-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
         </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#LayoutEvent/oldBounds"><linktext>oldBounds</linktext></link><link href="fl.video.xml#LayoutEvent/oldRegistrationBounds"><linktext>oldRegistrationBounds</linktext></link></related-links></apiConstructor><apiValue id="fl.video:LayoutEvent:LAYOUT"><apiName>LAYOUT</apiName><shortdesc>
         Definiert den Wert der Eigenschaft "type" eines layout-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>layout</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>layout</codeph>-Ereignisobjekts.
         
         <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable">
	     
	     
	     
	     
	     
	     
	 <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>oldBounds</codeph></entry><entry>Die Werte der Eigenschaften <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> und <codeph>height</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>layout</codeph>.</entry></row><row><entry><codeph>oldRegistrationBounds</codeph></entry><entry>Die Werte der Eigenschaften <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> des Ziels vor dem Eintreten des Ereignisses <codeph>layout</codeph>.</entry></row></tbody></tgroup></adobetable>
	 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:layout"><linktext>layout-Ereignis</linktext></link></related-links></apiValue><apiValue id="fl.video:LayoutEvent:oldBounds:get"><apiName>oldBounds</apiName><shortdesc>
		 Gibt die Werte der Eigenschaften "x", "y", "width" und "height" des Ziels vor dem Eintreten des Ereignisses an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
		 Gibt die Werte der Eigenschaften <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> und <codeph>height</codeph> des Ziels vor dem Eintreten des Ereignisses an.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:LayoutEvent:oldRegistrationBounds:get"><apiName>oldRegistrationBounds</apiName><shortdesc>
		 Gibt die Werte der Eigenschaften "registrationX", "registrationY", "registrationWidth" und "registrationHeight" des Ziels vor dem Eintreten des Ereignisses an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
		 Gibt die Werte der Eigenschaften <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> des Ziels vor dem Eintreten des Ereignisses an.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoScaleMode"><apiName>VideoScaleMode</apiName><shortdesc>
	 Mithilfe der VideoScaleMode-Klasse werden constant-Werte für die Eigenschaften "FLVPlayback.scaleMode" und "VideoPlayer.scaleMode" bereitgestellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Mithilfe der VideoScaleMode-Klasse werden constant-Werte für die Eigenschaften <codeph>FLVPlayback.scaleMode</codeph> und <codeph>VideoPlayer.scaleMode</codeph> bereitgestellt.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/scaleMode"><linktext>FLVPlayback.scaleMode</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>VideoPlayer.scaleMode</linktext></link></related-links><apiValue id="fl.video:VideoScaleMode:EXACT_FIT"><apiName>EXACT_FIT</apiName><shortdesc>
         Legt fest, dass das Video mit der in den Eigenschaften "registrationHeight" bzw. "height" und "registrationWidth" bzw. "width" angegebenen Höhe und Breite angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>exactFit</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Legt fest, dass das Video mit der in den Eigenschaften <codeph>registrationHeight</codeph> bzw. <codeph>height</codeph> und <codeph>registrationWidth</codeph> bzw. <codeph>width</codeph> angegebenen Höhe und Breite angezeigt wird.
	 
	 <p>Beispiel: Wenn <codeph>registrationWidth = width =100</codeph> und <codeph>registrationHeight = height = 100</codeph>, wenn <codeph>registrationX = 200</codeph> und <codeph>registrationY = 200</codeph> sind und wenn eine FLV-Datei mit <codeph>width</codeph> "648" und <codeph>height</codeph> "480" (für ein ungefähres Seitenverhältnis von 4:3) geladen wird und wenn <codeph>align = VideoAlign.CENTER</codeph> und <codeph>scaleMode = EXACT_FIT</codeph> sind, dann erhalten Sie <codeph>width = 100</codeph>, <codeph>height = 100</codeph>, <codeph>x = 200</codeph> und <codeph>y = 200</codeph>.</p>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoScaleMode:MAINTAIN_ASPECT_RATIO"><apiName>MAINTAIN_ASPECT_RATIO</apiName><shortdesc>
     Legt fest, dass die Größe des Videos auf das Rechteck beschränkt ist, das durch die Eigenschaften "registrationX", "registrationY", "registrationWidth" und "registrationHeight" angegeben wird, das ursprüngliche Seitenverhältnis jedoch beibehalten wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>maintainAspectRatio</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Legt fest, dass die Größe des Videos auf das Rechteck beschränkt ist, das durch die Eigenschaften <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> und <codeph>registrationHeight</codeph> angegeben wird, das ursprüngliche Seitenverhältnis jedoch beibehalten wird.
     
	 <p>Beispiel: Wenn <codeph>registrationWidth = 100</codeph> und <codeph>registrationHeight = 100</codeph>, wenn <codeph>registrationX = 200</codeph> und <codeph>registrationY = 200</codeph> sind und wenn eine FLV-Datei mit <codeph>width</codeph> "648" und <codeph>height</codeph> "480" (für ein ungefähres Seitenverhältnis von 4:3) geladen wird und wenn <codeph>align = VideoAlign.CENTER</codeph> und <codeph>scaleMode = MAINTAIN_ASPECT_RATIO</codeph> sind, dann erhalten Sie <codeph>width = 100</codeph> und <codeph>height = (100 ~~ 480 / 648) = 74</codeph>, <codeph>x = 10</codeph> und <codeph>y = (10 + ((100 - 74) / 2)) = 23</codeph>.</p>
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoScaleMode:NO_SCALE"><apiName>NO_SCALE</apiName><shortdesc>
         Legt fest, dass das Video mit genau der gleichen Höhe und Breite des Quellvideos angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>noScale</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Legt fest, dass das Video mit genau der gleichen Höhe und Breite des Quellvideos angezeigt wird.
	 
	 <p>Beispiel: Wenn <codeph>registrationWidth = 100</codeph> und <codeph>registrationHeight = 100</codeph>, wenn <codeph>registrationX = 200</codeph> und <codeph>registrationY = 200</codeph> sind und wenn eine FLV-Datei mit <codeph>width</codeph> "648" und <codeph>height</codeph> "480" (für ein ungefähres Seitenverhältnis von 4:3) geladen wird und wenn <codeph>align = VideoAlign.CENTER</codeph> und <codeph>scaleMode = NO_SCALE</codeph> sind, dann erhalten Sie <codeph>width = 648</codeph>, <codeph>height = 480</codeph>, <codeph>x = (200 + ((100 - 648) / 2)) = -74</codeph> und <codeph>y = (200 + ((100 - 480) / 2)) = 10</codeph>.</p>
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoProgressEvent"><apiName>VideoProgressEvent</apiName><shortdesc>
     Flash&amp;#xAE; Player löst ein VideoProgressEvent-Objekt aus, wenn der Benutzer die Anzahl der Byte anfordert, die während eines progressiven HTTP-Downloads seines Videos geladen wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>VideoProgressEvent-Klasse
     </apiTipText></apiTipTexts><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
     Flash <sup>®</sup> Player löst ein VideoProgressEvent-Objekt aus, wenn der Benutzer die Anzahl der Byte anfordert, die während eines progressiven HTTP-Downloads seines Videos geladen wurden. 
     
     </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.events.ProgressEvent.xml"><linktext>ProgressEvent</linktext></link></related-links><adobeApiEvent id="fl.video:VideoProgressEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoProgressEvent:PROGRESS</apiEventType><adobeApiEventClassifier>fl.video:VideoProgressEvent</adobeApiEventClassifier><apiDefinedEvent/><apiTipTexts><apiTipText>PROGRESS-Konstante
         </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="fl.video:VideoProgressEvent:VideoProgressEvent"><apiName>VideoProgressEvent</apiName><shortdesc>
     Erstellt ein Ereignisobjekt, das Informationen über progress-Ereignisse enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Der Ereignistyp. Ereignis-Listener können über die übernommene <codeph>type</codeph>-Eigenschaft auf diese Informationen zugreifen. Es gibt nur einen Typ eines progress-Ereignisses: VideoProgressEvent.PROGRESS.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft bubbles auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft cancelable auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Anzahl der geladenen Elemente oder Byte zu dem Zeitpunkt, zu dem der Listener das Ereignis verarbeitet.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Die Gesamtanzahl der Elemente oder Byte, die bei einem erfolgreichen Ladevorgang geladen werden.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Bestimmt den Index des VideoPlayer-Objekts.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Erstellt ein Ereignisobjekt, das Informationen über progress-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:VideoProgressEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
     Definiert den Wert der Eigenschaft „type“ eines progress-Ereignisobjekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/><apiTipTexts><apiTipText>PROGRESS-Konstante
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
     Definiert den Wert der Eigenschaft <codeph>type</codeph> eines <codeph>progress</codeph>-Ereignisobjekts.
	 
	 <p>Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable">
	     
	     
	     
	     
	     
	     

	 <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Wert</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Die Anzahl der geladenen Elemente oder Byte zu dem Zeitpunkt, zu dem der Listener das Ereignis verarbeitet.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Die Gesamtanzahl der Elemente oder Byte, die bei einem erfolgreichen Ladevorgang geladen werden.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Die Indexposition des VideoPlayer-Objekts.</entry></row></tbody></tgroup></adobetable>
	 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoProgressEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Der Index des mit diesem Ereignis verknüpften VideoPlayer-Objekts.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:INCManager"><apiName>INCManager</apiName><shortdesc>
     Der INCManager ist die Schnittstelle für Klassen, die die "flash.net.NetConnection" für die VideoPlayer-Klasse erstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
     Der INCManager ist die Schnittstelle für Klassen, die die <codeph>flash.net.NetConnection</codeph> für die VideoPlayer-Klasse erstellen. Die standardmäßige INCManager-Implementierung ist die NCManager-Klasse. Verwenden Sie die NCManagerNative-Klasse beim Streamen von einem Flash Media Server (FMS). Sie können auch eine benutzerdefinierte Klasse erstellen, die die INCManager-Schnittstelle implementiert. Diese Klasse kann dann von der VideoPlayer-Klasse verwendet werden, um die NetConnection zu erstellen.
     
     <p>Registrieren Sie mit folgendem Code eine benutzerdefinierte Klasse als die INCManager-Implementierung, die von einem VideoPlayer-Objekt verwendet wird. Ersetzen Sie <codeph>fl.video.NCManagerNative</codeph> mit Ihrer benutzerdefinierten Klasse.</p>
     
     <codeblock>fl.video.VideoPlayer.iNCManagerClass = fl.video.NCManagerNative;</codeblock>
     
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#VideoPlayer"><linktext>fl.video.VideoPlayer</linktext></link></related-links><apiOperation id="fl.video:INCManager:fl.video:INCManager:close"><apiName>close</apiName><shortdesc>
         Schließt die NetConnection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         Schließt die NetConnection.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:connectAgain"><apiName>connectAgain</apiName><shortdesc>
         Wird vom VideoPlayer-Objekt aufgerufen, wenn die Verbindung erfolgreich hergestellt, jedoch kein Stream gefunden wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Wenn versucht wurde, eine andere Verbindung herzustellen, lautet der Wert <codeph>true</codeph>. Wenn bereits ein Verbindungsaufbau versucht wurde oder weitere Versuche zwecklos sind, lautet der Wert <codeph>false</codeph>.
         
         </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
         Wird vom VideoPlayer-Objekt aufgerufen, wenn die Verbindung erfolgreich hergestellt, aber der Stream nicht gefunden wurde. Wenn mehrere Interpretationen der RTMP-URL möglich sind, versucht die API mit einer anderen URL erneut eine Verbindung mit dem Server herzustellen und einen anderen Streamnamen zurückzugeben.
         
         <p>Dies kann notwendig sein, wenn die URL beispielsweise rtmp://Servername/Pfad1/Pfad2/Pfad3 ist. Öffnen Sie bei der Angabe eines Anwendungsnamen und eines Instanzennamens das NetConnection-Objekt mit rtmp://Servername/Pfad1/Pfad2 oder verwenden Sie die Standardinstanz, damit der Stream mit Pfad2/Pfad3 geöffnet wird. Im Allgemeinen ist dies möglich, wenn mehr als zwei Teile im Pfad vorhanden sind. Dies ist nicht möglich, wenn nur zwei Teile vorhanden sind (nur ein Teil ist nicht zulässig).</p>
         
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/connectToURL()"><linktext>connectToURL()</linktext></link><link href="fl.video.xml#VideoPlayer/isRTMP"><linktext>VideoPlayer.isRTMP</linktext></link></related-links></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:connectDynamicStream"><apiName>connectDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiType value=""/><apiDesc>  <xref href="http://www.adobe.com/go/fms_dynamicstreaming"/>
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/>
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:connectToURL"><apiName>connectToURL</apiName><shortdesc>
         Wird vom VideoPlayer-Objekt aufgerufen, um eine Verbindung mit der URL anzufordern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Wenn eine synchrone Verbindung hergestellt wurde, lautet der Wert <codeph>true</codeph>. Wenn versucht wurde, eine asynchrone Verbindung herzustellen, der Aufrufer also ein connected-Ereignis erwarten sollte, <codeph>false</codeph>.
         
         </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>Die URL, mit der das VideoPlayer-Objekt eine Verbindung herstellen möchte.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Wird vom VideoPlayer-Objekt aufgerufen, um eine Verbindung zur URL anzufordern. Rufen Sie nach einem erfolgreichen oder fehlgeschlagenen Verbindungsaufbau die Methode <codeph>VideoPlayer.ncConnected()</codeph> auf. Wenn die Verbindung fehlgeschlagen ist, stellen Sie vor dem Aufruf <codeph>nc = null</codeph> ein.
         
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/reconnect()"><linktext>reconnect()</linktext></link><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:getProperty"><apiName>getProperty</apiName><shortdesc>
         Ruft Werte von beliebigen Eigenschaften ab, die von der Klasse unterstützt werden, die INCManager implementiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Werte der Eigenschaften.
         
         </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Der Name der Eigenschaft, die die Methode <codeph>getProperty</codeph> aufruft.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Ruft Werte von beliebigen Eigenschaften ab, die von der Klasse unterstützt werden, die INCManager implementiert. Eine Liste der unterstützten Eigenschaften finden Sie bei der bestimmten implementierenden Klasse. Durch Aufruf dieser Methode für eine nicht unterstützte Eigenschaft wird ein VideoError-Objekt mit Code <codeph>VideoError.UNSUPPORTED_PROPERTY=1011</codeph> ausgegeben.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:helperDone"><apiName>helperDone</apiName><shortdesc>
         Wird von einem helper-Objekt, das eine Aufgabe für das NCManager-Objekt ausführt, aufgerufen, um anzuzeigen, dass die Ausführung abgeschlossen wurde. Außerdem gibt es an, ob Fehler auftraten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>helper</apiItemName><apiType value="Object"/><apiDesc>Das helper-Objekt.
         
         </apiDesc></apiParam><apiParam><apiItemName>success</apiItemName><apiType value="Boolean"/><apiDesc>Eine Einstellung zur Angabe, wenn eine Aufgabe abgeschlossen ist. Wenn der Wert für <codeph>success</codeph> <codeph>true</codeph> ist, wurde die Aufgabe erfolgreich abgeschlossen. Andernfalls lautet der Wert <codeph>false</codeph>.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Wird von einem helper-Objekt, das eine Aufgabe für das NCManager-Objekt ausführt, aufgerufen, um anzuzeigen, dass die Ausführung abgeschlossen wurde. Außerdem gibt es an, ob Fehler auftraten. Das NCManager-Objekt verwendet dies mit SMILManager.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:reconnect"><apiName>reconnect</apiName><shortdesc>
         Wird vom VideoPlayer-Objekt aufgerufen, um eine neue Verbindung anzufordern, nachdem die Verbindung unterbrochen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         Wird vom VideoPlayer-Objekt aufgerufen, um eine neue Verbindung anzufordern, nachdem die Verbindung unterbrochen wurde. Rufen Sie nach einem erfolgreichen oder fehlgeschlagenen Verbindungsaufbau die Methode <codeph>VideoPlayer.ncReconnected()</codeph> auf. Wenn die Verbindung fehlgeschlagen ist, stellen Sie vor dem Aufruf <codeph>nc = null</codeph> ein.
         
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/idleTimeout"><linktext>VideoPlayer.idleTimeout</linktext></link><link href="fl.video.xml#VideoPlayer/ncReconnected()"><linktext>VideoPlayer.ncReconnected()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:setProperty"><apiName>setProperty</apiName><shortdesc>
         Legt Werte von beliebigen Eigenschaften fest, die von der Klasse unterstützt werden, die INCManager implementiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Wert der Eigenschaft.
         
         </apiDesc><apiType value="void"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Der Name der Eigenschaft, die die Methode <codeph>setProperty</codeph> aufruft.
         
         </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value=""/><apiDesc>Der Wert der Eigenschaft.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Legt Werte von beliebigen Eigenschaften fest, die von der Klasse unterstützt werden, die INCManager implementiert. Eine Liste der unterstützten Eigenschaften finden Sie bei der bestimmten implementierenden Klasse. Durch Aufruf dieser Methode für eine nicht unterstützte Eigenschaft wird ein VideoError-Objekt mit Code <codeph>VideoError.UNSUPPORTED_PROPERTY=1011</codeph> ausgegeben.
         
         </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:INCManager:fl.video:INCManager:bitrate:get"><apiName>bitrate</apiName><shortdesc>
         Die Bandbreite in Bit pro Sekunde, mit der zwischen mehreren Streams gewechselt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
         Die Bandbreite in Bit pro Sekunde, mit der zwischen mehreren Streams gewechselt wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:isDynamicStream:get"><apiName>isDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:isRTMP:get"><apiName>isRTMP</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          <codeph/> Wenn der Stream ein progressiver Download einer HTTP-, lokalen oder anderen Datei ist, lautet der Wert <codeph>false</codeph>.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:netConnection:get"><apiName>netConnection</apiName><shortdesc>
         Eine Referenz auf das NetConnection-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc>
         Eine Referenz auf das NetConnection-Objekt.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamHeight:get"><apiName>streamHeight</apiName><shortdesc>
         Die Höhe des Streams in Pixel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
         Die Höhe des Streams in Pixel. Wenn nach dem Aufruf der Methode <codeph>VideoPlayer.ncConnected()</codeph> die Eigenschaft <codeph>streamHeight</codeph> "kleiner als 0" ist, wird dadurch dem VideoPlayer-Objekt mitgeteilt, dass keine Informationen zur Streamhöhe vorhanden sind. Wenn die Eigenschaft <codeph>scaleMode</codeph> des VideoPlayer-Objekts auf <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> oder <codeph>VideoScaleMode.NO_SCALE</codeph> gesetzt ist, wird dieser Wert verwendet und die Größe sofort geändert.
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>VideoPlayer.scaleMode</linktext></link></related-links></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamLength:get"><apiName>streamLength</apiName><shortdesc>
         Die Länge des Streams in Sekunden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
         Die Länge des Streams in Sekunden. Wenn die Methode <codeph>VideoPlayer.ncConnected()</codeph> nach ihrem Aufruf "undefined", <codeph>null</codeph> oder "kleiner als 0" zurückgibt, dann weiß das VideoPlayer-Objekt, dass keine Informationen zur Streamlänge vorhanden sind. <codeph/><codeph/><codeph/>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>VideoPlayer.play()</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>VideoPlayer.load()</linktext></link></related-links></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamName:get"><apiName>streamName</apiName><shortdesc>
         Der Streamname, der in die Methode "NetStream.play()" übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
         Der Streamname, der in die Methode <codeph>NetStream.play()</codeph> übergeben wird.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamWidth:get"><apiName>streamWidth</apiName><shortdesc>
         Die Breite des Streams in Pixel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
         Die Breite des Streams in Pixel. Wenn nach dem Aufruf der Methode <codeph>VideoPlayer.ncConnected()</codeph> die Eigenschaft <codeph>streamWidth</codeph> "kleiner als 0" ist, wird dadurch dem VideoPlayer-Objekt mitgeteilt, dass keine Informationen zur Streambreite vorhanden sind. Wenn die Eigenschaft <codeph>scaleMode</codeph> des VideoPlayer-Objekts auf <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> oder <codeph>VideoScaleMode.NO_SCALE</codeph> gesetzt ist, wird dieser Wert verwendet und die Größe sofort geändert.
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>VideoPlayer.scaleMode</linktext></link></related-links></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streams:get"><apiName>streams</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:timeout:get"><apiName>timeout</apiName><shortdesc>
         Die Zeit in Millisekunden, nach der Versuche eines Verbindungsaufbaus beendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Die Zeit in Millisekunden, nach der Versuche eines Verbindungsaufbaus beendet werden.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:videoPlayer:get"><apiName>videoPlayer</apiName><shortdesc>
         Das VideoPlayer-Objekt, das dieses Objekt besitzt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>fl.video:VideoPlayer</apiValueClassifier></apiValueDef><apiDesc>
         Das VideoPlayer-Objekt, das dieses Objekt besitzt.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoState"><apiName>VideoState</apiName><shortdesc>
	 Mithilfe der VideoState-Klasse werden constant-Werte für die schreibgeschützten Eigenschaften "FLVPlayback.state" und "VideoPlayer.state" bereitgestellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Mithilfe der VideoState-Klasse werden constant-Werte für die schreibgeschützten Eigenschaften <codeph>FLVPlayback.state</codeph> und <codeph>VideoPlayer.state</codeph> bereitgestellt.
	 
     </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="fl.video.xml#VideoPlayer/state"><linktext>VideoPlayer.state</linktext></link></related-links><apiValue id="fl.video:VideoState:BUFFERING"><apiName>BUFFERING</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "buffering".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buffering</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "buffering". Dieser Status beginnt direkt nach einem Aufruf der <codeph>play()</codeph>- oder <codeph>load()</codeph>-Methode. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein interaktiver Status. </p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/buffering"><linktext>FLVPlayback.buffering</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:CONNECTION_ERROR"><apiName>CONNECTION_ERROR</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "connection error".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>connectionError</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "connection error". Dieser Status beginnt, wenn das Laden eines Video-Streams fehlgeschlagen ist. Zwei mögliche Fehlerursachen sind: keine Verbindung zum Server oder der Stream wurde nicht gefunden. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein nicht interaktiver Status.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:DISCONNECTED"><apiName>DISCONNECTED</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "disconnected".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>disconnected</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "disconnected". Dieser Status beginnt, wenn der Stream durch einen Aufruf der Methode <codeph>closeVideoPlayer()</codeph> oder eine Zeitüberschreitung im Leerlauf geschlossen wird. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Die FLVPlayback-Instanz befindet sich im Status "disconnected", bis Sie die Eigenschaft <codeph>FLVPlayback.source</codeph> festlegen.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/closeVideoPlayer()"><linktext>FLVPlayback.closeVideoPlayer()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/idleTimeout"><linktext>FLVPlayback.idleTimeout</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/source"><linktext>FLVPlayback.source</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:LOADING"><apiName>LOADING</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "loading".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "loading". Dieser Status beginnt direkt nach dem Aufrufen der <codeph>play()</codeph>- oder <codeph>load()</codeph>-Methode oder nach dem Festlegen der Eigenschaft <codeph>FLVPlayback.source</codeph>. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein nicht interaktiver Status.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/load()"><linktext>FLVPlayback.load()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/play()"><linktext>FLVPlayback.play()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/source"><linktext>FLVPlayback.source</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:PAUSED"><apiName>PAUSED</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "paused".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>paused</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "paused". Dieser Status beginnt, wenn die FLV-Datei geladen ist, die Wiedergabe jedoch durch Aufrufen der <codeph>pause()</codeph>- oder <codeph>load()</codeph>-Methode angehalten wird. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein interaktiver Status. </p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/load()"><linktext>FLVPlayback.load()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/pause()"><linktext>FLVPlayback.pause()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/paused"><linktext>FLVPlayback.paused</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:PLAYING"><apiName>PLAYING</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "playing".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playing</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "playing". Dieser Status beginnt, wenn die FLV-Datei geladen ist und abgespielt wird. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein interaktiver Status. </p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/playing"><linktext>FLVPlayback.playing</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/play()"><linktext>FLVPlayback.play()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:RESIZING"><apiName>RESIZING</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "resizing".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resizing</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "resizing". Dieser Status beginnt während des automatischen Layouts. Die <codeph>FLVPlayback</codeph>-Instanz hat nie den Statuswert dieser Konstante, nur die <codeph>VideoPlayer</codeph>-Instanz. Verwenden Sie die Eigenschaft <codeph>VideoPlayer.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein nicht interaktiver Status. </p>
		 
                 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/state"><linktext>VideoPlayer.state</linktext></link><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>VideoPlayer.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:REWINDING"><apiName>REWINDING</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "rewinding".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewinding</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "rewinding". Dieser Status beginnt, wenn das Video automatisch zurückgespult wird. Das Video wird automatisch zurückgespult, nachdem es entweder durch Klicken auf die Schaltfläche "Stop" gestoppt oder bis zum Ende abgespielt wurde. Nach dem Zurückspulen wird der Status beendet. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein nicht interaktiver Status.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/autoRewind"><linktext>FLVPlayback.autoRewind</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:SEEKING"><apiName>SEEKING</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "seeking".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>seeking</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "seeking". Dieser Status beginnt, nachdem die Methode <codeph>seek()</codeph> aufgerufen wurde und während der Benutzer mit der Suchleiste einen Scrubbing-Vorgang durchführt. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein nicht interaktiver Status.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/seek()"><linktext>FLVPlayback.seek()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:STOPPED"><apiName>STOPPED</apiName><shortdesc>
		 Der Video-Player befindet sich im Status "stopped".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stopped</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Der Video-Player befindet sich im Status "stopped". Dieser Status beginnt, wenn die FLV-Datei geladen ist und die Wiedergabe durch Aufrufen der <codeph>stop()</codeph>-Methode beendet wird oder wenn der Abspielkopf das Ende des Streams erreicht. Verwenden Sie die Eigenschaft <codeph>FLVPlayback.state</codeph>, um den aktuellen Status des Video-Players abzurufen.
		 
		 <p>Dies ist ein interaktiver Status. </p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stop()"><linktext>FLVPlayback.stop()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stopped"><linktext>FLVPlayback.stopped</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:FPMediaCapabilities"><apiName>FPMediaCapabilities</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="fl.video:FPMediaCapabilities:FPMediaCapabilities"><apiName>FPMediaCapabilities</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 <codeph/>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:FPMediaCapabilities:codecs:get"><apiName>codecs</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:dataStreamAccess:get"><apiName>dataStreamAccess</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:dynamicStreaming:get"><apiName>dynamicStreaming</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:qosSupport:get"><apiName>qosSupport</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:rtmfp:get"><apiName>rtmfp</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:rtmpe:get"><apiName>rtmpe</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:swfVerification:get"><apiName>swfVerification</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:version:get"><apiName>version</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>