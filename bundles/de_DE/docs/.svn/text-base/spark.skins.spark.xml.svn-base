<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.skins.spark"><apiName>spark.skins.spark</apiName><apiDetail/><apiClassifier id="spark.skins.spark:ButtonBarSkin"><apiName>ButtonBarSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-ButtonBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-ButtonBar-Komponente. Für die Schaltflächen auf der ButtonBar-Komponente werden die Klassen ButtonBarLastButtonSkin, ButtonBarFirstButtonSkin und ButtonBarMiddleButtonSkin verwendet.  
    
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link></related-links><apiConstructor id="spark.skins.spark:ButtonBarSkin:ButtonBarSkin"><apiName>ButtonBarSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonBarSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:firstButton"><apiName>firstButton</apiName><shortdesc conref="spark.components.ButtonBar#firstButton"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarFirstButtonSkin
            </apiDefaultValue></apiValueDef><apiDesc conref="spark.components.ButtonBar#firstButton"/></apiValueDetail><related-links><link href="spark.skins.spark.xml#ButtonBarFirstButtonSkin"><linktext>spark.skins.spark.ButtonBarFirstButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:lastButton"><apiName>lastButton</apiName><shortdesc conref="spark.components.ButtonBar#lastButton"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarLastButtonSkin
            </apiDefaultValue></apiValueDef><apiDesc conref="spark.components.ButtonBar#lastButton"/></apiValueDetail><related-links><link href="spark.skins.spark.xml#ButtonBarLastButtonSkin"><linktext>spark.skins.spark.ButtonBarLastButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:middleButton"><apiName>middleButton</apiName><shortdesc conref="spark.components.ButtonBar#middleButton"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarMiddleButtonSkin
            </apiDefaultValue></apiValueDef><apiDesc conref="spark.components.ButtonBar#middleButton"/></apiValueDetail><related-links><link href="spark.skins.spark.xml#ButtonBarMiddleButtonSkin"><linktext>spark.skins.spark.ButtonBarMiddleButtonSkin</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TextInputSkin"><apiName>TextInputSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark-TextInput-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark-TextInput-Komponente.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TextInput"><linktext>spark.components.TextInput</linktext></link></related-links><apiConstructor id="spark.skins.spark:TextInputSkin:TextInputSkin"><apiName>TextInputSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TextInputSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds einer TextInput-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds einer TextInput-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:promptDisplay"><apiName>promptDisplay</apiName><shortdesc>Definiert die Beschriftung, die für den Text der Eingabeaufforderung verwendet wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Definiert die Beschriftung, die für den Text der Eingabeaufforderung verwendet wird. Die includeInLayout-Eigenschaft ist „false“, sodass der Text der Eingabeaufforderung nicht die Messung beeinflusst.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonSkin"><apiName>ButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-Button-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkButtonSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-Button-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Button"><linktext>spark.components.Button</linktext></link></related-links><apiConstructor id="spark.skins.spark:ButtonSkin:ButtonSkin"><apiName>ButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarThumbSkin"><apiName>VScrollBarThumbSkin</apiName><shortdesc>Die standardmäßige Skinklasse für das Bildlauffeld einer Spark-VScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für das Bildlauffeld einer Spark-VScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#VScrollBar"><linktext>spark.components.VScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:VScrollBarThumbSkin:VScrollBarThumbSkin"><apiName>VScrollBarThumbSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:StackedFormItemSkin"><apiName>StackedFormItemSkin</apiName><shortdesc>Eine alternative Skinklasse für die Spark-FormItem-Komponente, die die Beschriftung über dem Inhalt platziert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Eine alternative Skinklasse für die Spark-FormItem-Komponente, die die Beschriftung über dem Inhalt platziert.
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#FormItem"><linktext>spark.components.FormItem</linktext></link></related-links><apiConstructor id="spark.skins.spark:StackedFormItemSkin:StackedFormItemSkin"><apiName>StackedFormItemSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:StackedFormItemSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des FormItem-Hintergrunds.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des FormItem-Hintergrunds.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:contentCol"><apiName>contentCol</apiName><shortdesc>Die Spalte, die die Beschriftung und den Inhalt des FormItem enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Beschriftung und den Inhalt des FormItem enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:helpCol"><apiName>helpCol</apiName><shortdesc>Die Spalte, die den Hilfeinhalt des FormItem enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die den Hilfeinhalt des FormItem enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:helpContentGroup"><apiName>helpContentGroup</apiName><shortdesc conref="spark.components.FormItem#helpContentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormItem#helpContentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:FormItem</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.FormItem#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormItem#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:sequenceCol"><apiName>sequenceCol</apiName><shortdesc>Die Spalte, die die Sequenzbeschriftung enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Sequenzbeschriftung enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormItemSkin:sequenceLabelDisplay"><apiName>sequenceLabelDisplay</apiName><shortdesc conref="spark.components.FormItem#sequenceLabelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormItem#sequenceLabelDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultComplexItemRenderer"><apiName>DefaultComplexItemRenderer</apiName><shortdesc>Die Spark-DefaultComplexItemRenderer-Klasse ist eine Elementrendererklasse, die Flex-Komponenten in einem Group-Container anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components.supportClasses:ItemRenderer</apiBaseClassifier></apiClassifierDef><apiDesc>Die Spark-DefaultComplexItemRenderer-Klasse ist eine Elementrendererklasse, die Flex-Komponenten in einem Group-Container anzeigt. Jede Komponente wird in einen eigenen Group-Container eingeschlossen. Dies ist nützlich, wenn es sich bei den untergeordneten Elementen des Containers um visuelle Objekte wie z. B. Flex-Komponenten handelt.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Group"><linktext>spark.components.Group</linktext></link></related-links><apiConstructor id="spark.skins.spark:DefaultComplexItemRenderer:DefaultComplexItemRenderer"><apiName>DefaultComplexItemRenderer</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultComplexItemRenderer:contentGroup"><apiName>contentGroup</apiName><shortdesc>Der Container, der die einzelnen Flex-Komponenten einschließt, die in der Host-Komponente definiert wurden.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Der Container, der die einzelnen Flex-Komponenten einschließt, die in der Host-Komponente definiert wurden.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:CheckBoxSkin"><apiName>CheckBoxSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-CheckBox-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-CheckBox-Komponente.  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#CheckBox"><linktext>spark.components.CheckBox</linktext></link></related-links><apiConstructor id="spark.skins.spark:CheckBoxSkin:CheckBoxSkin"><apiName>CheckBoxSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:CheckBoxSkin:check"><apiName>check</apiName><shortdesc>Das Häkchen im Kästchen für diese Skin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Das Häkchen im Kästchen für diese Skin. Erstellen Sie für ein benutzerdefiniertes Häkchen eine benutzerdefinierte Skinklasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:CheckBox</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VideoPlayerSkin"><apiName>VideoPlayerSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-VideoPlayer-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-VideoPlayer-Komponente.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#VideoPlayer"><linktext>spark.components.VideoPlayer</linktext></link></related-links><apiConstructor id="spark.skins.spark:VideoPlayerSkin:VideoPlayerSkin"><apiName>VideoPlayerSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VideoPlayerSkin:clippedGroup"><apiName>clippedGroup</apiName><shortdesc>Video- und Player-Steuerelemente werden beschnitten, wenn sie die Größe der Komponente überschreiten, der Schlagschatten oberhalb wird jedoch nicht beschnitten und richtet sich nach der Größe der Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Video- und Player-Steuerelemente werden beschnitten, wenn sie die Größe der Komponente überschreiten, der Schlagschatten oberhalb wird jedoch nicht beschnitten und richtet sich nach der Größe der Komponente. Legen Sie auch die verticalScrollPosition fest, damit die Beschneidung gegebenenfalls nicht zuerst unten, sondern oben erfolgt. Dies bewirkt, dass die Player-Steuerelemente noch sichtbar sind, wenn mit dem Beschneiden begonnen wird.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:currentTimeDisplay"><apiName>currentTimeDisplay</apiName><shortdesc conref="spark.components.VideoPlayer#currentTimeDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#currentTimeDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:durationDisplay"><apiName>durationDisplay</apiName><shortdesc conref="spark.components.VideoPlayer#durationDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#durationDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:fullScreenButton"><apiName>fullScreenButton</apiName><shortdesc conref="spark.components.VideoPlayer#fullScreenButton"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#fullScreenButton"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoPlayer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playPauseButton"><apiName>playPauseButton</apiName><shortdesc conref="spark.components.VideoPlayer#playPauseButton"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ToggleButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#playPauseButton"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playerControls"><apiName>playerControls</apiName><shortdesc conref="spark.components.VideoPlayer#playerControls"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#playerControls"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:scrubBar"><apiName>scrubBar</apiName><shortdesc conref="spark.components.VideoPlayer#scrubBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:ScrubBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#scrubBar"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:videoDisplay"><apiName>videoDisplay</apiName><shortdesc conref="spark.components.VideoPlayer#videoDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoDisplay</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#videoDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:volumeBar"><apiName>volumeBar</apiName><shortdesc conref="spark.components.VideoPlayer#volumeBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:VolumeBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.VideoPlayer#volumeBar"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TitleWindowCloseButtonSkin"><apiName>TitleWindowCloseButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Schließen-Schaltfläche der Spark-TitleWindow-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Schließen-Schaltfläche der Spark-TitleWindow-Komponente.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.skins.spark.xml#TitleWindowSkin"><linktext>spark.skins.spark.TitleWindowSkin</linktext></link><link href="spark.components.xml#TitleWindow"><linktext>spark.components.TitleWindow</linktext></link></related-links><apiConstructor id="spark.skins.spark:TitleWindowCloseButtonSkin:TitleWindowCloseButtonSkin"><apiName>TitleWindowCloseButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:cbshad"><apiName>cbshad</apiName><shortdesc>Definiert den inneren Schatten.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert den inneren Schatten.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc>Definiert den Schlagschatten der Schaltfläche zum Schließen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc>Definiert den Schlagschatten der Schaltfläche zum Schließen.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:xSymbol"><apiName>xSymbol</apiName><shortdesc>Definiert das Aussehen des „x“ in der Schaltfläche zum Schließen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Definiert das Aussehen des „x“ in der Schaltfläche zum Schließen.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxSkin"><apiName>ComboBoxSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-ComboBox-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-ComboBox-Komponente. Die Skin für die Ankerschaltfläche einer ComboBox-Komponente wird durch die ComboBoxButtonSkin-Klasse definiert. Die Skin für die Texteingabe wird durch die ComboBoxTextInputSkin-Klasse definiert.
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.skins.spark.xml#ComboBoxButtonSkin"><linktext>spark.skins.spark.ComboBoxButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:ComboBoxSkin:ComboBoxSkin"><apiName>ComboBoxSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxSkin:background"><apiName>background</apiName><shortdesc>Definiert das Aussehen der Hintergrundfüllung von Dropdownlisten.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert das Aussehen der Hintergrundfüllung von Dropdownlisten.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dropDown"><apiName>dropDown</apiName><shortdesc conref="spark.components.supportClasses.DropDownListBase#dropDown">Dies schließt Rahmen, Hintergrundfarben, Bildlaufleisten und Filter ein.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.DropDownListBase#dropDown">Dies schließt Rahmen, Hintergrundfarben, Bildlaufleisten und Filter ein. 
            </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ComboBox</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:openButton"><apiName>openButton</apiName><shortdesc conref="spark.components.supportClasses.DropDownListBase#openButton">Die standardmäßige Skin ist ComboBoxButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.DropDownListBase#openButton">Die standardmäßige Skin ist ComboBoxButtonSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#ComboBoxButtonSkin"><linktext>spark.skins.spark.ComboBoxButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:popUp"><apiName>popUp</apiName><shortdesc>Das PopUpAnchor-Steuerelement, das die Dropdownliste öffnet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:PopUpAnchor</apiValueClassifier></apiValueDef><apiDesc>Das PopUpAnchor-Steuerelement, das die Dropdownliste öffnet. 
        
        <p><codeph/><codeph/></p></apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:textInput"><apiName>textInput</apiName><shortdesc conref="spark.components.ComboBox#textInput"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.ComboBox#textInput"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxTextInputSkin"><apiName>ComboBoxTextInputSkin</apiName><shortdesc>Die standardmäßige Skinklasse für textInput einer Spark-ComboBox-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für textInput einer Spark-ComboBox-Komponente.  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link></related-links><apiConstructor id="spark.skins.spark:ComboBoxTextInputSkin:ComboBoxTextInputSkin"><apiName>ComboBoxTextInputSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds einer TextInput-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds einer TextInput-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Definiert die Füllfarbe für den Hintergrund.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Definiert die Füllfarbe für den Hintergrund.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:promptDisplay"><apiName>promptDisplay</apiName><shortdesc>Definiert die Beschriftung, die für den Text der Eingabeaufforderung verwendet wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Definiert die Beschriftung, die für den Text der Eingabeaufforderung verwendet wird. Die includeInLayout-Eigenschaft ist „false“, sodass der Text der Eingabeaufforderung nicht die Messung beeinflusst.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarMiddleButtonSkin"><apiName>ButtonBarMiddleButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die mittleren Schaltflächen in einer Spark-ButtonBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkButtonSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die mittleren Schaltflächen in einer Spark-ButtonBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link></related-links><apiConstructor id="spark.skins.spark:ButtonBarMiddleButtonSkin:ButtonBarMiddleButtonSkin"><apiName>ButtonBarMiddleButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarTrackSkin"><apiName>VScrollBarTrackSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spur auf einer Spark VScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spur auf einer Spark VScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#VScrollBar"><linktext>spark.components.VScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:VScrollBarTrackSkin:VScrollBarTrackSkin"><apiName>VScrollBarTrackSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TitleWindowSkin"><apiName>TitleWindowSkin</apiName><shortdesc>Die standardmäßige Skinklasse für einen Spark-TitleWindow-Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für einen Spark-TitleWindow-Container.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.skins.spark.xml#TitleWindowCloseButtonSkin"><linktext>spark.skins.spark.TitleWindowCloseButtonSkin</linktext></link><link href="spark.components.xml#TitleWindow"><linktext>spark.components.TitleWindow</linktext></link></related-links><apiConstructor id="spark.skins.spark:TitleWindowSkin:TitleWindowSkin"><apiName>TitleWindowSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TitleWindowSkin:backgroundFill"><apiName>backgroundFill</apiName><shortdesc>Definiert die Hintergrundfüllung der TitleWindowSkin-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Definiert die Hintergrundfüllung der TitleWindowSkin-Klasse. Die Standardfarbe lautet 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der TitleWindowSkin-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der TitleWindowSkin-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc>Definiert den Rahmenstrich der TitleWindowSkin-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc>Definiert den Rahmenstrich der TitleWindowSkin-Klasse. Der Standardwert ist 1.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:closeButton"><apiName>closeButton</apiName><shortdesc conref="spark.components.TitleWindow#closeButton"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.TitleWindow#closeButton"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:contents"><apiName>contents</apiName><shortdesc>Enthält den vertikalen Stapel von Titelleisteninhalt und Steuerleiste.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Enthält den vertikalen Stapel von Titelleisteninhalt und Steuerleiste.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:controlBarGroup"><apiName>controlBarGroup</apiName><shortdesc conref="spark.components.Panel#controlBarGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Panel#controlBarGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TitleWindow</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:moveArea"><apiName>moveArea</apiName><shortdesc conref="spark.components.TitleWindow#moveArea"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.TitleWindow#moveArea"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:titleDisplay"><apiName>titleDisplay</apiName><shortdesc conref="spark.components.Panel#titleDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Panel#titleDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:FormItemSkin"><apiName>FormItemSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-FormItem-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-FormItem-Komponente.  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#FormItem"><linktext>spark.components.FormItem</linktext></link></related-links><apiConstructor id="spark.skins.spark:FormItemSkin:FormItemSkin"><apiName>FormItemSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:FormItemSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des FormItem-Hintergrunds.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des FormItem-Hintergrunds.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:contentCol"><apiName>contentCol</apiName><shortdesc>Die Spalte, die den Inhalt des FormItem enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die den Inhalt des FormItem enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:errorTextDisplay"><apiName>errorTextDisplay</apiName><shortdesc conref="spark.components.FormItem#errorTextDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichText</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormItem#errorTextDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:helpCol"><apiName>helpCol</apiName><shortdesc>Die Spalte, die den Hilfeinhalt des FormItem enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die den Hilfeinhalt des FormItem enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:helpContentGroup"><apiName>helpContentGroup</apiName><shortdesc conref="spark.components.FormItem#helpContentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormItem#helpContentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:FormItem</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:labelCol"><apiName>labelCol</apiName><shortdesc>Die Spalte, die die Beschriftung des FormItem enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Beschriftung des FormItem enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.FormItem#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormItem#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:sequenceCol"><apiName>sequenceCol</apiName><shortdesc>Die Spalte, die die Sequenzbeschriftung enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Sequenzbeschriftung enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormItemSkin:sequenceLabelDisplay"><apiName>sequenceLabelDisplay</apiName><shortdesc conref="spark.components.FormItem#sequenceLabelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormItem#sequenceLabelDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ImageSkin"><apiName>ImageSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-Image-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-Image-Komponente.  
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Image"><linktext>spark.components.Image</linktext></link></related-links><apiConstructor id="spark.skins.spark:ImageSkin:ImageSkin"><apiName>ImageSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ImageSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Bildhintergrunds.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Bildhintergrunds.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ImageSkin:bgFill"><apiName>bgFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ImageSkin:brokenImageIcon"><apiName>brokenImageIcon</apiName><shortdesc>Symbol, das anstelle des Bilds dargestellt wird, wenn ein ungültiges Bild geladen wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:BitmapImage</apiValueClassifier></apiValueDef><apiDesc>Symbol, das anstelle des Bilds dargestellt wird, wenn ein ungültiges Bild geladen wird.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ImageSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Image</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ImageSkin:imageDisplay"><apiName>imageDisplay</apiName><shortdesc>Primärer Skinteil der Bildanzeige.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:BitmapImage</apiValueClassifier></apiValueDef><apiDesc>Primärer Skinteil der Bildanzeige.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ImageSkin:progressIndicator"><apiName>progressIndicator</apiName><shortdesc>Skinteil des Fortschrittsindikators.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.supportClasses:Range</apiValueClassifier></apiValueDef><apiDesc>Skinteil des Fortschrittsindikators.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ListDropIndicator"><apiName>ListDropIndicator</apiName><shortdesc>
  Die Standardskin für den Dropindikator einer List-Komponente, wenn in der Skin von List kein dropIndicator-Teil definiert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.skins:ProgrammaticSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die Standardskin für den Dropindikator einer List-Komponente, wenn in der Skin von List kein <codeph>dropIndicator</codeph>-Teil definiert ist.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link></related-links><apiConstructor id="spark.skins.spark:ListDropIndicator:ListDropIndicator"><apiName>ListDropIndicator</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:ErrorSkin"><apiName>ErrorSkin</apiName><shortdesc>
  Die ErrorSkin-Klasse definiert die Fehlerskin für Spark-Komponenten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins.spark:HighlightBitmapCaptureSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ErrorSkin-Klasse definiert die Fehlerskin für Spark-Komponenten. Flex zeigt die Fehlerskin an, wenn ein Überprüfungsfehler auftritt.
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.validators.Validator.xml"><linktext>mx.validators.Validator</linktext></link></related-links><apiConstructor id="spark.skins.spark:ErrorSkin:ErrorSkin"><apiName>ErrorSkin</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:ErrorSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     
          </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     
          </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="spark.skins.spark:DataGridSkin"><apiName>DataGridSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark-DataGrid-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark-DataGrid-Komponente.  
<p>Diese Skin definiert alle optionalen Teile der DataGrid-Skin mit Ausnahme von rowBackground (standardmäßig wird kein visuelles pro-Zeile-Hintergrundelement angezeigt). Sie definiert den Standardwert der itemRenderer-Eigenschaft des Rasters als spark.skins.spark.DefaultGridItemRenderer und den Standardwert der headerRenderer-Eigenschaft der columnHeaderGroup als <codeph>spark.skins.spark.DefaultGridHeaderRenderer</codeph>.</p>
<p>Die Werte der folgenden DataGrid-Skinteile werden von Deklarationen definiert und können von Unterklassen dieser Klasse außer Kraft gesetzt werden: <codeph>alternatingRowColors</codeph>, <codeph>caretIndicator</codeph>, <codeph>columnSeparator</codeph>, <codeph>editorIndicator</codeph>, <codeph>headerColumnSeparator</codeph>, <codeph>hoverIndicator</codeph>, <codeph>rowSeparator</codeph>, <codeph>selectionIndicator</codeph>. Alle diese Deklarationen definieren DataGrid-Skinteile außer <codeph>headerColumnSeparator</codeph> und <codeph>headerRenderer</codeph>, die für die Werte der <codeph>columnSeparator</codeph>- und <codeph>headerRenderer</codeph>-Eigenschaften der columnHeaderGroup verwendet werden.</p>
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link></related-links><apiConstructor id="spark.skins.spark:DataGridSkin:DataGridSkin"><apiName>DataGridSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DataGridSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Definiert die Farbe des Hintergrunds.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Definiert die Farbe des Hintergrunds. Die Standardfarbe lautet 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DataGridSkin:headerColumnSeparator"><apiName>headerColumnSeparator</apiName><shortdesc>Definiert den Wert der columnSeparator-Eigenschaft für die columnHeaderGroup.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Definiert den Wert der columnSeparator-Eigenschaft für die columnHeaderGroup.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DataGridSkin:headerRenderer"><apiName>headerRenderer</apiName><shortdesc>Definiert den Wert der headerRenderer-Eigenschaft für die columnHeaderGroup.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Definiert den Wert der headerRenderer-Eigenschaft für die columnHeaderGroup. Der Standardwert ist spark.skins.spark.DefaultGridHeaderRenderer.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DataGridSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGrid</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ToggleButtonSkin"><apiName>ToggleButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark ToggleButton-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkButtonSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark ToggleButton-Komponente.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ToggleButton"><linktext>spark.components.ToggleButton</linktext></link></related-links><apiConstructor id="spark.skins.spark:ToggleButtonSkin:ToggleButtonSkin"><apiName>ToggleButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarSkin"><apiName>VScrollBarSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-VScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-VScrollBar-Komponente. Die Bildlauffeld- und die Leistenskin werden durch die VScrollBarThumbSkin- bzw. die VScrollBarTrackSkin-Klasse definiert.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#VScrollBar"><linktext>spark.components.VScrollBar</linktext></link><link href="spark.skins.spark.xml#VScrollBarThumbSkin"><linktext>spark.skins.spark.VScrollBarThumbSkin</linktext></link><link href="spark.skins.spark.xml#VScrollBarTrackSkin"><linktext>spark.skins.spark.VScrollBarTrackSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:VScrollBarSkin:VScrollBarSkin"><apiName>VScrollBarSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc conref="spark.components.supportClasses.ScrollBarBase#decrementButton">Die standardmäßige Skinklasse lautet ScrollBarUpButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ScrollBarBase#decrementButton">Die standardmäßige Skinklasse lautet ScrollBarUpButtonSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#ScrollBarUpButtonSkin"><linktext>spark.skins.spark.ScrollBarUpButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VScrollBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc conref="spark.components.supportClasses.ScrollBarBase#incrementButton">Die standardmäßige Skinklasse lautet ScrollBarDownButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ScrollBarBase#incrementButton">Die standardmäßige Skinklasse lautet ScrollBarDownButtonSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#ScrollBarDownButtonSkin"><linktext>spark.skins.spark.ScrollBarDownButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:thumb"><apiName>thumb</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet VScrollBarThumbSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet VScrollBarThumbSkin.
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#VScrollBarThumbSkin"><linktext>spark.skins.spark.VScrollBarThumbSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:track"><apiName>track</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet VScrollBarTrackSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet VScrollBarTrackSkin.  
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#VScrollBarTrackSkin"><linktext>spark.skins.spark.VScrollBarTrackSkin</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperTextInputSkin"><apiName>NumericStepperTextInputSkin</apiName><shortdesc>Die standardmäßige Skinklasse für das Texteingabefeld einer Spark-NumericStepper-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für das Texteingabefeld einer Spark-NumericStepper-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#NumericStepper"><linktext>spark.components.NumericStepper</linktext></link></related-links><apiConstructor id="spark.skins.spark:NumericStepperTextInputSkin:NumericStepperTextInputSkin"><apiName>NumericStepperTextInputSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der NumericStepper-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der NumericStepper-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:StackedFormSkin"><apiName>StackedFormSkin</apiName><shortdesc>Eine alternative Skinklasse für den Spark-Form-Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Eine alternative Skinklasse für den Spark-Form-Container. Diese Skin definiert eine contentGroup für den Form-Container mit einem FormLayout als Layoutobjekt. Dieses FormLayout ist ein VerticalLayout, das eine zusätzliche Logik zum Ausrichten der Spalten der FormItems ausweist. Diese Skin definiert außerdem eine errorTextDisplay zum Anzeigen des errorText der Form.
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Form"><linktext>spark.components.Form</linktext></link><link href="spark.layouts.xml#FormLayout"><linktext>spark.layouts.FormLayout</linktext></link></related-links><apiConstructor id="spark.skins.spark:StackedFormSkin:StackedFormSkin"><apiName>StackedFormSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:StackedFormSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormSkin:errorTextDisplay"><apiName>errorTextDisplay</apiName><shortdesc>Zeigt den Fehlertext der Form an.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Zeigt den Fehlertext der Form an.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Form</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderThumbSkin"><apiName>VSliderThumbSkin</apiName><shortdesc>Die standardmäßige Skinklasse für den Schieberegler einer Spark-VSlider-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für den Schieberegler einer Spark-VSlider-Komponente.  
        
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#VSlider"><linktext>spark.components.VSlider</linktext></link></related-links><apiConstructor id="spark.skins.spark:VSliderThumbSkin:VSliderThumbSkin"><apiName>VSliderThumbSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultGridItemRenderer"><apiName>DefaultGridItemRenderer</apiName><shortdesc>
  Die DefaultGridItemRenderer-Klasse definiert einen einfachen und effizienten Elementrenderer, der eine einzelne Textbeschriftung anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><Exclude kind="property" name="locale"/><Exclude kind="property" name="direction"/><Exclude kind="style" name="layoutDirection"/><Exclude kind="property" name="layoutDirection"/><Exclude kind="style" name="typographicCase"/><Exclude kind="style" name="trackingRight"/><Exclude kind="style" name="trackingLeft"/><Exclude kind="style" name="textJustify"/><Exclude kind="style" name="textAlpha"/><Exclude kind="style" name="textAlignLast"/><Exclude kind="style" name="renderingMode"/><Exclude kind="style" name="lineThrough"/><Exclude kind="style" name="lineHeight"/><Exclude kind="style" name="ligatureLevel"/><Exclude kind="style" name="leading"/><Exclude kind="style" name="justificationStyle"/><Exclude kind="style" name="justificationRule"/><Exclude kind="style" name="fontLookup"/><Exclude kind="style" name="dominantBaseline"/><Exclude kind="style" name="digitWidth"/><Exclude kind="style" name="digitCase"/><Exclude kind="style" name="cffHinting"/><Exclude kind="style" name="baselineShift"/><Exclude kind="style" name="alignmentBaseline"/><Exclude kind="style" name="verticalAlign"/><Exclude kind="style" name="paddingTop"/><Exclude kind="style" name="paddingBottom"/><styles><style format="Length" inherit="yes" name="textIndent" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textIndent">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird.
   <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textDecoration</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style textDecoration“. Bei Verwendung von StyleableStageText wird dieses nicht unterstützt.</b></p>
   </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableTextField#style:textDecoration
   </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textDecoration"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textDecoration</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:textDecoration"><linktext>spark.components.supportClasses.StyleableTextField.textDecoration</linktext></link></related-links></style><style enumeration="start,end,left,right,center,justify" inherit="yes" name="textAlign" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Ausrichtung von Text in einem Container.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textAlign</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style textAlign“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style textAlign“.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:textAlign
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textAlign"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textAlign</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:textAlign"><linktext>spark.components.supportClasses.StyleableStageText.textAlign</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:textAlign"><linktext>spark.components.supportClasses.StyleableTextField.textAlign</linktext></link></related-links></style><style inherit="yes" name="locale" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des Texts. Steuert die Transformation und Form von Groß- und Kleinschreibung. Nutzt standardmäßige Gebietsschemabezeichner, wie in Unicode Technical Standard #35 beschrieben. Beispiel: „en“, „en_US“ und „en-US“ stehen für Englisch, „ja“ für Japanisch. 
  
  <p>Der Standardwert ist „undefined“. Diese Eigenschaft übernimmt ihren Wert von einem Vorgänger. Ist er immer noch „undefined“, erbt sie ihn vom globalen <codeph>locale</codeph>-Stil. Ist während der Initialisierung der Anwendung der globale <codeph>locale</codeph>-Stil nicht definiert, wird der Standardwert auf „en“ gesetzt.</p>
 
  <p>Beim Einsatz der Spark-Formatierer und -Globalisierungsklassen können Sie diesen Stil in der Stammanwendung auf den Wert der <codeph>LocaleID.DEFAULT</codeph>-Konstante setzen. Diese Klassen nutzen dann die internationalen Einstellungen des Client-Betriebssystems.</p>
 
  </description>
<default>undefined
  </default>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="http://www.unicode.org/reports/tr35/"><linktext>http://www.unicode.org/reports/tr35/</linktext></link></related-links></style><style inherit="yes" name="letterSpacing" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10.1" theme="mobile" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen.
 
  <p><b>Dies wird im Spark-Design nicht unterstützt.</b> Siehe <codeph>trackingLeft</codeph> und <codeph>trackingRight</codeph>.</p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField.letterSpacing“. Bei Verwendung von StyleableStageText wird dieses nicht unterstützt.</b></p>
   </description>

<playerversion>AIR 2.0
  </playerversion>

<see>#style:trackingLeft
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:letterSpacing"><linktext>spark.components.supportClasses.StyleableTextField.letterSpacing</linktext></link><link href="spark.skins.spark.xml#DefaultGridItemRenderer/style:trackingLeft"><linktext>trackingLeft</linktext></link><link href="spark.skins.spark.xml#DefaultGridItemRenderer/style:trackingRight"><linktext>trackingRight</linktext></link></related-links></style><style enumeration="auto,on,off" inherit="yes" name="kerning" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Der Stil, der zum Ausrichten des Absatzes verwendet wird. 
  
  <p>Kerning ist standardmäßig für Spark-Komponenten aktiviert, für MX-Komponenten jedoch standardmäßig deaktiviert. Spark-Komponenten interpretieren <codeph>default</codeph> als <codeph>auto</codeph>, während MX-Komponenten <codeph>default</codeph> als <codeph>false</codeph> interpretieren.</p>
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.kerning</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/kerning"><linktext>flashx.textLayout.formats.ITextLayoutFormat.kerning</linktext></link></related-links></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontWeight</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style fontWeight“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style fontWeight“.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontWeight
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontWeight"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontWeight</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontWeight"><linktext>spark.components.supportClasses.StyleableStageText.fontWeight</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontWeight"><linktext>spark.components.supportClasses.StyleableTextField.fontWeight</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontStyle</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter spark.components.supportClasses.StyleableTextField Style fontStyle. Bei Verwendung von StyleableStageText siehe spark.components.supportClasses.StyleableStageText Style fontStyle.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontStyle
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontStyle"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontStyle</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontStyle"><linktext>spark.components.supportClasses.StyleableStageText.fontStyle</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontStyle"><linktext>spark.components.supportClasses.StyleableTextField.fontStyle</linktext></link></related-links></style><style format="Length" inherit="yes" name="fontSize" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Die Höhe des Texts in Pixeln.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontSize</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style fontSize“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style fontSize“.</b></p>
 
  <p>Der Standardwert für das Spark-Design beträgt <codeph>12</codeph>. Der Standardwert für das Mobile-Design beträgt <codeph>24</codeph>.</p>
   </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontSize
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontSize"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontSize</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontSize"><linktext>spark.components.supportClasses.StyleableStageText.fontSize</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontSize"><linktext>spark.components.supportClasses.StyleableTextField.fontSize</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartennamen. 
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontFamily.</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter spark.components.supportClasses.StyleableTextField Style fontFamily. Bei Verwendung von StyleableStageText siehe spark.components.supportClasses.StyleableStageText Style fontFamily.</b></p>
 
  <p>Der Standardwert für das Spark-Design ist <codeph>Arial</codeph>. Der Standardwert für das Mobile-Design ist <codeph>_sans</codeph>.</p>
   </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontFamily
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontFamily"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontFamily</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontFamily"><linktext>spark.components.supportClasses.StyleableStageText.fontFamily</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontFamily"><linktext>spark.components.supportClasses.StyleableTextField.fontFamily</linktext></link></related-links></style><style enumeration="ltr,rtl" inherit="yes" name="direction" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt die standardmäßige bidirektionale Einbettungsebene des Texts an.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.direction.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/direction"><linktext>flashx.textLayout.formats.ITextLayoutFormat.direction</linktext></link></related-links></style><style format="Color" inherit="yes" name="color" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Farbe des Texts.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.color.</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style color“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style color“.</b></p>
   </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableTextField#style:color
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/color"><linktext>flashx.textLayout.formats.ITextLayoutFormat.color</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:color"><linktext>spark.components.supportClasses.StyleableTextField.color</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:color"><linktext>spark.components.supportClasses.StyleableStageText.color</linktext></link></related-links></style><style format="Length" inherit="no" name="paddingRight" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Der rechte Einzug in Pixeln.
 
  <p><b>Spark-Design: siehe lashx.textLayout.formats.ITextLayoutFormat.paddingRight.</b></p>
 
  <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/paddingRight"><linktext>flashx.textLayout.formats.ITextLayoutFormat.paddingRight</linktext></link></related-links></style><style format="Length" inherit="no" name="paddingLeft" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Der linke Einzug in Pixeln.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.paddingLeft.</b></p>
 
  <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/paddingLeft"><linktext>flashx.textLayout.formats.ITextLayoutFormat.paddingLeft</linktext></link></related-links></style><style enumeration="toFit,explicit" inherit="no" name="lineBreak" owner="spark.skins.spark:DefaultGridItemRenderer" playerVersion="Flash10" type="String">
<description>
  Steuert den Zeilenumbruch innerhalb des Containers.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.blockProgression.</b></p>
 
  <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/lineBreak"><linktext>flashx.textLayout.formats.ITextLayoutFormat.lineBreak</linktext></link></related-links></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>spark.components.gridClasses:IGridItemRenderer</apiBaseInterface><apiBaseInterface>mx.styles:IStyleClient</apiBaseInterface><apiBaseClassifier>mx.core:UIFTETextField</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DefaultGridItemRenderer-Klasse definiert einen einfachen und effizienten Elementrenderer, der eine einzelne Textbeschriftung anzeigt. Diese Klasse ist der Standardwert für die <codeph>itemRenderer</codeph>-Eigenschaft von DataGrid. Diese Klasse erweitert UIFTETextField und zeigt die Zelldaten in einer Textbeschriftung mithilfe des Textfelds an. Das UIFTETextField-Steuerelement basiert auf FTE, der FlashTextEngine, die hochwertige internationale Typografie- und Schriftarteinbettung auf die gleiche Weise unterstützt wie andere Spark-Steuerelemente. Da das UIFTETextField-Steuerelement die TextField-API implementiert, wird eine Untergruppe der Spark-Textstile unterstützt. In der Dokumentation zu dieser Klasse für die Liste unterstützter Stile finden Sie weitere Informationen. 
 
  <p>Sie können den Beschriftungstextumbruch regeln, indem Sie den <codeph>lineBreak</codeph>-Stil verwenden. Beispiel: Wenn Sie <codeph>lineBreak="explicit"</codeph> und <codeph>variableRowHeight="false"</codeph> festlegen, werden Zellen mit fester Höhe erstellt, deren Beschriftungen nicht umbrochen werden. Wenn Sie die <codeph>wordWrap</codeph>-Eigenschaft nicht explizit festlegen, wird für <codeph>wordWrap</codeph> der Wert der <codeph>variableRowHeight</codeph>-Eigenschaft des Rasters festgelegt.</p>
 
  <p>Die multiline-Eigenschaft wird vom Elementeditor des DataGrid zum Interpretieren eingegebener Zeilenumbruchzeichen verwendet. Wenn <codeph>mutliline=false</codeph>, wird durch die Eingabe eines Zeilenumbruchs die Bearbeitungssitzung beendet (wie bei Tabulator oder Escape). Wenn <codeph>multiline=true</codeph>, wird ein Zeilenumbruchzeichen in den Text eingefügt. Ist die multiline-Eigenschaft nicht explizit festgelegt, wird sie automatisch auf „true“ gesetzt, wenn <codeph>lineBreak="explicit"</codeph> und <codeph>text</codeph> ein Zeilenumbruchzeichen enthält.</p>
 
  <p>DefaultGridItemRenderer übernimmt die <codeph>layoutDirection</codeph>-Eigenschaft vom übergeordneten Element. Sie sollten diese Klasse nicht direkt festlegen.</p>
  
  <p>Die DefaultGridItemRenderer-Klasse ist nicht dafür konzipiert, untergeordnet oder kopiert zu werden. Erstellt benutzerdefinierte Elementrenderer basierend auf der GridItemRenderer-Klasse.</p>
 
  <p>Die beste Leistung für auf Microsoft Windows basierende Anwendungen bietet der UITextFieldGridItemRenderer. Dieser Renderer ist in ActionScript geschrieben und für Windows optimiert.</p>
 
  </apiDesc><example conref="DefaultGridItemRendererExample.mxml"><swfblock conref="examples/DefaultGridItemRendererExample.swf"/></example></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.gridClasses.xml#GridItemRenderer"><linktext>spark.components.gridClasses.GridItemRenderer</linktext></link><link href="spark.skins.spark.xml#UITextFieldGridItemRenderer"><linktext>spark.skins.spark.UITextFieldGridItemRenderer</linktext></link></related-links><adobeApiEvent id="spark.skins.spark:DefaultGridItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die bindbare Dateneigenschaft ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die bindbare <codeph>data</codeph>-Eigenschaft ändert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.skins.spark:DefaultGridItemRenderer:DefaultGridItemRenderer"><apiName>DefaultGridItemRenderer</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:DefaultGridItemRenderer:discard"><apiName>discard</apiName><shortdesc>
      
      Wird von der updateDisplayList()-Methode des übergeordneten Elements des Elementrenderers aufgerufen, sobald bestimmt wurde, dass dieser Renderer nicht mehr sichtbar sein wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>hasBeenRecycled</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn dieser Renderer der internen freien Liste des Eigentümers zur Wiederverwendung hinzugefügt wird.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird von der <codeph>updateDisplayList()</codeph>-Methode des übergeordneten Elements des Elementrenderers aufgerufen, sobald bestimmt wurde, dass dieser Renderer nicht mehr sichtbar sein wird. Wenn der <codeph>willBeRecycled</codeph>-Parameter <codeph>true</codeph> ist, fügt der Eigentümer diesen Renderer seiner internen freien Liste zur Wiederverwendung hinzu. Implementierungen können mit dieser Methode alle Renderer-Eigenschaften löschen, die nicht mehr benötigt werden.
     
      <p>Diese Methode wird nicht direkt aufgerufen. Wird von der DataGrid-Implementierung aufgerufen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.skins.spark:DefaultGridItemRenderer:prepare"><apiName>prepare</apiName><shortdesc>
      
      Wird von der updateDisplayList()-Methode des übergeordneten Elements des Elementrenderers aufgerufen, nachdem alle Eigenschaften des Renderers festgelegt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>willBeRecycled</apiItemName><apiType value="Boolean"/><apiDesc> <codeph>true</codeph>, wenn dieser Renderer wiederverwendet wird.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird von der <codeph>updateDisplayList()</codeph>-Methode des übergeordneten Elements des Elementrenderers aufgerufen, nachdem alle Eigenschaften des Renderers festgelegt wurden. Der <codeph>hasBeenRecycled</codeph>-Parameter ist <codeph>false</codeph>, wenn dieser Renderer noch nicht verwendet wurde, d. h. er wurde nicht wiederverwendet. Diese Methode wird aufgerufen, wenn ein Renderer sichtbar wird und jedes Mal, wenn er aufgrund einer Änderung einer Renderereigenschaft oder einer ausdrücklichen Anforderung erneut angezeigt wird. 
     
      <p>Diese Methode kann zum Konfigurieren aller visuellen Elemente und Eigenschaften eines Renderers verwendet werden. Diese Methode kann effizienter sein als die Einbindung von <codeph>data</codeph>-Eigenschaften in die Eigenschaften visueller Elemente. Hinweis: Da die <codeph>prepare</codeph>-Methode oft aufgerufen wird, achten Sie darauf, dass sie effizient kodiert ist.</p>
     
      <p>Die <codeph>prepare()</codeph>-Methode kann viele Male aufgerufen werden, bevor die <codeph>discard()</codeph>-Methode aufgerufen wird.</p>
     
      <p>Diese Methode wird nicht direkt aufgerufen. Wird von der DataGrid-Implementierung aufgerufen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:DefaultGridItemRenderer:columnIndex:get"><apiName>columnIndex</apiName><shortdesc>
      
      Die Spaltenindexposition der Zelle dieses Elementrenderers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      
      Die Spaltenindexposition der Zelle dieses Elementrenderers. Dieser Wert entspricht <codeph>column.columnIndex</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:column:get"><apiName>column</apiName><shortdesc>
      
      Das GridColumn-Objekt, das die mit diesem Elementrenderer verknüpfte Spalte darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="columnChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.components.gridClasses:GridColumn</apiValueClassifier><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      
      Das GridColumn-Objekt, das die mit diesem Elementrenderer verknüpfte Spalte darstellt.  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Der Wert des Datenproviderelements für die gesamte Zeile des Rastersteuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Wert des Datenproviderelements für die gesamte Zeile des Rastersteuerelements. Elementrenderer binden Elementattribute oft an Eigenschaften dieses Objekts.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:down:get"><apiName>down</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von prepare() fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="downChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.   </p>
     
      
      Diese Eigenschaft ist auf <codeph>true</codeph> gesetzt, wenn eine von zwei Eingabeaktionen in einer Rasterzelle erfolgt: Drücken der Maustaste oder Tippen auf den Touchscreen. Die <codeph>down</codeph>-Eigenschaft wird auf <codeph>false</codeph> zurückgesetzt, wenn die Maustaste losgelassen wird, der Benutzer den Finger vom Touchscreen nimmt oder der Mauszeiger/der Finger aus der Rasterzelle gezogen wird.   
     
      <p>Im Gegensatz zu Renderern für Listenelemente sind nicht ausschließlich die Renderer für Rasterelemente dafür zuständig, den Down-Indikator anzuzeigen. Das Raster selbst stellt den Down-Indikator für die ausgewählte Zeile oder Zelle dar. Der Elementrenderer kann auch seine visuellen Eigenschaften ändern, um anzuzeigen, dass mit der Maus auf ihn gezeigt wird.</p>   
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:dragging:get"><apiName>dragging</apiName><shortdesc>
      
      Enthält „true“, wenn der Elementrenderer normalerweise als Teil eines Drag &amp; Drop-Vorgangs gezogen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="draggingChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      
      Enthält <codeph>true</codeph>, wenn der Elementrenderer normalerweise als Teil eines Drag &amp; Drop-Vorgangs gezogen wird. Zurzeit wird die Drag &amp; Drop-Funktion nicht vom Spark-DataGrid-Steuerelement unterstützt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:grid:get"><apiName>grid</apiName><shortdesc>
      Das mit diesem Elementrenderer verknüpfte Rastersteuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Grid</apiValueClassifier></apiValueDef><apiDesc>
      Das mit diesem Elementrenderer verknüpfte Rastersteuerelement.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:hovered:get"><apiName>hovered</apiName><shortdesc>
      Ist „true“, wenn die Maus auf den Elementrenderer zeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="hoveredChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Ist <codeph>true</codeph>, wenn die Maus auf den Elementrenderer zeigt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:label:get"><apiName>label</apiName><shortdesc>
      Das Rastersteuerelement setzt diese Eigenschaft auf den Wert der itemToLabel()-Methode der Spalte, bevor preprare() aufgerufen wird. Der String, der im Elementrenderer anzuzeigen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="labelChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""  
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Das Rastersteuerelement setzt diese Eigenschaft auf den Wert der <codeph>itemToLabel()</codeph>-Methode der Spalte, bevor <codeph>preprare()</codeph> aufgerufen wird.</p>
     
      
      Der String, der im Elementrenderer anzuzeigen ist.  
     
      <p>Die GridItemRenderer-Klasse kopiert automatisch den Wert dieser Eigenschaft in die <codeph>text</codeph>-Eigenschaft ihres <codeph>labelDisplay</codeph>-Elements, sofern das Element festgelegt wurde. Das Grid legt <codeph>label</codeph> auf den Wert fest, der von der <codeph>itemToLabel()</codeph>-Methode der Spalte zurückgegeben wird.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:rowIndex:get"><apiName>rowIndex</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von prepare() fest. Die auf null basierende Indexposition der Zeile der dargestellten Zelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="rowIndexChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.</p>
     
      
      Die auf null basierende Indexposition der Zeile der dargestellten Zelle.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:selected:get"><apiName>selected</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von prepare() fest. Enthält „true“, wenn die Zelle des Elementrenderers Teil der aktuellen Auswahl ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="selectedChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.</p>
     
      
      Enthält <codeph>true</codeph>, wenn die Zelle des Elementrenderers Teil der aktuellen Auswahl ist.
     
      <p> Im Gegensatz zu Renderern für Listenelemente sind nicht ausschließlich die Renderer für Rasterelemente zuständig, um anzuzeigen, dass sie Teil der Auswahl sind. Das Raster selbst zeigt automatisch den selectionIndicator-Skinteil für die ausgewählten Zeilen oder Zellen an. Der Elementrenderer kann auch seine visuellen Eigenschaften ändern, um hervorzuheben, dass er Teil der Auswahl ist.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridItemRenderer:showsCaret:get"><apiName>showsCaret</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von preprare() fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="showsCaretChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.   </p>
     
      
      Enthält <codeph>true</codeph>, wenn die Zelle des Elementrenderers vom Einfügezeichen angezeigt wird.
     
      <p> Im Gegensatz zu Renderern für Listenelemente sind nicht ausschließlich die Renderer für Rasterelemente zuständig, etwas anzuzeigen, um darauf hinzuweisen, dass ihre Zellen oder Zeilen ein Einfügezeichen aufweisen. Das Raster selbst zeigt automatisch den caretIndicator-Skinteil für die Zeile oder Zelle mit dem Einfügezeichen an. Der Elementrenderer kann auch seine visuellen Eigenschaften ändern, um hervorzuheben, dass er die Einfügezeichen aufweist.</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarRightButtonSkin"><apiName>ScrollBarRightButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-rechts-Taste der Spark-ScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Nach-rechts-Taste der Spark-ScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#ScrollBarBase"><linktext>spark.components.supportClasses.ScrollBarBase</linktext></link><link href="spark.components.xml#HScrollBar"><linktext>spark.components.HScrollBar</linktext></link><link href="spark.components.xml#VScrollBar"><linktext>spark.components.VScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:ScrollBarRightButtonSkin:ScrollBarRightButtonSkin"><apiName>ScrollBarRightButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-rechts-Schaltfläche in der ScrollBar-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-rechts-Schaltfläche in der ScrollBar-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderSkin"><apiName>VSliderSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-VSlider-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-VSlider-Komponente. Die Schieberegler- und die Leistenskin werden durch die VSliderThumbSkin- bzw. die VSliderTrackSkin-Klasse definiert.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#VSlider"><linktext>spark.components.VSlider</linktext></link><link href="spark.skins.spark.xml#VSliderThumbSkin"><linktext>spark.skins.spark.VSliderThumbSkin</linktext></link><link href="spark.skins.spark.xml#VSliderTrackSkin"><linktext>spark.skins.spark.VSliderTrackSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:VSliderSkin:VSliderSkin"><apiName>VSliderSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderSkin:dataTip"><apiName>dataTip</apiName><shortdesc>Die QuickInfo, die im mx.controls.Slider-Steuerelement verwendet wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Die QuickInfo, die im mx.controls.Slider-Steuerelement verwendet wird. Erstellen Sie zum Anpassen der Darstellung des DataTip eine angepasste VSliderSkin-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VSlider</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:thumb"><apiName>thumb</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet VSliderThumbSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet VSliderThumbSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#VSliderThumbSkin"><linktext>spark.skins.spark.VSliderThumbSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:VSliderSkin:track"><apiName>track</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet VSliderTrackSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet VSliderTrackSkin.
           </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#VSliderTrackSkin"><linktext>spark.skins.spark.VSliderTrackSkin</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderTrackSkin"><apiName>VSliderTrackSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Leiste einer Spark-VSlider-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Leiste einer Spark-VSlider-Komponente.  
        
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#VSlider"><linktext>spark.components.VSlider</linktext></link></related-links><apiConstructor id="spark.skins.spark:VSliderTrackSkin:VSliderTrackSkin"><apiName>VSliderTrackSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DropDownListSkin"><apiName>DropDownListSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark DropDownList-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-DropDownList-Komponente. Die Skin für die Ankerschaltfläche einer DropDownList-Komponente wird durch die DropDownListButtonSkin-Klasse definiert.  
      
      <p><codeph/><codeph/></p>      
        
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DropDownList"><linktext>spark.components.DropDownList</linktext></link><link href="spark.skins.spark.xml#DropDownListButtonSkin"><linktext>spark.skins.spark.DropDownListButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:DropDownListSkin:DropDownListSkin"><apiName>DropDownListSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DropDownListSkin:background"><apiName>background</apiName><shortdesc>Definiert das Aussehen der Hintergrundfüllung von Dropdownlisten.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert das Aussehen der Hintergrundfüllung von Dropdownlisten.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Die Farbe der Hintergrundfüllung der DropDown-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Die Farbe der Hintergrundfüllung der DropDown-Komponente. Die Standardfarbe lautet 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dropDown"><apiName>dropDown</apiName><shortdesc conref="spark.components.supportClasses.DropDownListBase#dropDown">Dies schließt Rahmen, Hintergrundfarben, Bildlaufleisten und Filter ein.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.DropDownListBase#dropDown">Dies schließt Rahmen, Hintergrundfarben, Bildlaufleisten und Filter ein.
              </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DropDownList</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.DropDownList#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.DropDownList#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:openButton"><apiName>openButton</apiName><shortdesc conref="spark.components.supportClasses.DropDownListBase#openButton">Die standardmäßige Skinklasse lautet DropDownListButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.DropDownListBase#openButton">Die standardmäßige Skinklasse lautet DropDownListButtonSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#DropDownListButtonSkin"><linktext>spark.skins.spark.DropDownListButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:popUp"><apiName>popUp</apiName><shortdesc>Das PopUpAnchor-Steuerelement, das die Dropdownliste öffnet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:PopUpAnchor</apiValueClassifier></apiValueDef><apiDesc>Das PopUpAnchor-Steuerelement, das die Dropdownliste öffnet. 
        
        <p><codeph/><codeph/></p></apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:FormSkin"><apiName>FormSkin</apiName><shortdesc>Die standardmäßige Skinklasse für einen Spark-Form-Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für einen Spark-Form-Container. Diese Skin definiert eine contentGroup für den Form-Container mit einem FormLayout als Layoutobjekt. Dieses FormLayout ist ein VerticalLayout, das eine zusätzliche Logik zum Ausrichten der Spalten der FormItems ausweist.
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Form"><linktext>spark.components.Form</linktext></link><link href="spark.layouts.xml#FormLayout"><linktext>spark.layouts.FormLayout</linktext></link></related-links><apiConstructor id="spark.skins.spark:FormSkin:FormSkin"><apiName>FormSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:FormSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Form</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultGridHeaderRenderer"><apiName>DefaultGridHeaderRenderer</apiName><shortdesc>Die DefaultDataGridHeader-Klasse definiert den Standard-Spaltenüberschriftsrenderer für ein Spark-DataGrid-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.gridClasses:GridItemRenderer</apiBaseClassifier></apiClassifierDef><apiDesc>Die DefaultDataGridHeader-Klasse definiert den Standard-Spaltenüberschriftsrenderer für ein Spark-DataGrid-Steuerelement.
<p>In MXML definierte Unterklassen können die Werte der Eigenschaften <codeph>labelDisplay</codeph> und <codeph>sortIndicator</codeph> neu definieren.</p>
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.xml#GridColumnHeaderGroup"><linktext>spark.components.GridColumnHeaderGroup</linktext></link><link href="spark.components.gridClasses.xml#GridItemRenderer"><linktext>spark.components.gridClasses.GridItemRenderer</linktext></link></related-links><apiConstructor id="spark.skins.spark:DefaultGridHeaderRenderer:DefaultGridHeaderRenderer"><apiName>DefaultGridHeaderRenderer</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultGridHeaderRenderer:defaultSortIndicator"><apiName>defaultSortIndicator</apiName><shortdesc>Der Standardwert der sortIndicator-Eigenschaft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Der Standardwert der <codeph>sortIndicator</codeph>-Eigenschaft. Er muss ein IFactory für ein IVisualElement sein.        
        
        <p>Dieser Wert wird in einem <codeph>fx:Declaration</codeph>-Block angegeben und kann von einer Deklaration mit <codeph>id="defaultSortIndicator"</codeph> in einer MXML-Unterklasse überschrieben werden.</p>
        
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridHeaderRenderer:labelDisplayGroup"><apiName>labelDisplayGroup</apiName><shortdesc>Definiert die Größe und Position des visuellen labelDisplay-Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Definiert die Größe und Position des visuellen labelDisplay-Elements. 
        
        <p><codeph>labelDisplay</codeph> wird dieser Gruppe von der <codeph>prepare()</codeph>-Methode des Renderers hinzugefügt. Von labelDisplay angegebene Größen-/Positionsbeschänkungen definieren das Layout relativ zur labelDisplayGroup.</p>
        
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridHeaderRenderer:sortIndicatorGroup"><apiName>sortIndicatorGroup</apiName><shortdesc>Definiert die Größe und Position des visuellen sortIndicator-Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Definiert die Größe und Position des visuellen sortIndicator-Elements. 
        
        <p><codeph>sortIndicator</codeph> wird dieser Gruppe von der <codeph>prepare()</codeph>-Methode des Renderers hinzugefügt. Von sortIndicator angegebene Größen-/Positionsbeschänkungen definieren das Layout relativ zur sortIndicatorGroup. Diese Gruppe wird nur in das Layout aufgenommen, wenn der sortIndicator sichtbar ist.</p>  
        
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridHeaderRenderer:maxDisplayedLines:get"><apiName>maxDisplayedLines</apiName><shortdesc conref="spark.components.supportClasses.TextBase#maxDisplayedLines">
              Der Wert dieser Eigenschaft wird verwendet, um die maxDisplayedLines-Eigenschaft des labelDisplay-Elements dieses Renderers zu initialisieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="maxDisplayedLinesChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1
             
              </apiDefaultValue></apiValueDef><apiDesc conref="spark.components.supportClasses.TextBase#maxDisplayedLines">
              Der Wert dieser Eigenschaft wird verwendet, um die <codeph>maxDisplayedLines</codeph>-Eigenschaft des <codeph>labelDisplay</codeph>-Elements dieses Renderers zu initialisieren.
             
              </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultGridHeaderRenderer:sortIndicator:get"><apiName>sortIndicator</apiName><shortdesc>
              Ein visuelles Element, das angezeigt wird, wenn die Spalte sortiert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="sortIndicatorChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFactory"/><apiDefaultValue>null
             
              </apiDefaultValue></apiValueDef><apiDesc>
              Ein visuelles Element, das angezeigt wird, wenn die Spalte sortiert wurde.
             
              <p>Das visuelle sortIndicator-Element wird der <codeph>sortIndicatorGroup</codeph> von der <codeph>prepare()</codeph>-Methode dieses Renderers hinzugefügt. Von sortIndicator angegebene Größen-/Positionsbeschänkungen definieren die Position relativ zur sortIndicatorGroup.</p>
             
              </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperIncrementButtonSkin"><apiName>NumericStepperIncrementButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-oben-Schaltfläche einer Spark NumericStepper-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Nach-oben-Schaltfläche einer Spark NumericStepper-Komponente.  
    
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#NumericStepper"><linktext>spark.components.NumericStepper</linktext></link></related-links><apiConstructor id="spark.skins.spark:NumericStepperIncrementButtonSkin:NumericStepperIncrementButtonSkin"><apiName>NumericStepperIncrementButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperIncrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-Oben-Taste.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-oben-Taste.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperIncrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TabBarButtonSkin"><apiName>TabBarButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für Spark-TabBar-Schaltflächen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkButtonSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für Spark-TabBar-Schaltflächen.  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TabBar"><linktext>spark.components.TabBar</linktext></link><link href="spark.skins.spark.xml#TabBarSkin"><linktext>spark.skins.spark.TabBarSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:TabBarButtonSkin:TabBarButtonSkin"><apiName>TabBarButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:TextAreaSkin"><apiName>TextAreaSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark-TextArea-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark-TextArea-Komponente.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TextArea"><linktext>spark.components.TextArea</linktext></link></related-links><apiConstructor id="spark.skins.spark:TextAreaSkin:TextAreaSkin"><apiName>TextAreaSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TextAreaSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der TextArea-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der TextArea-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextArea</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:promptDisplay"><apiName>promptDisplay</apiName><shortdesc>Definiert die Beschriftung, die für den Text der Eingabeaufforderung verwendet wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Definiert die Beschriftung, die für den Text der Eingabeaufforderung verwendet wird. Die includeInLayout-Eigenschaft ist „false“, sodass der Text der Eingabeaufforderung nicht die Messung beeinflusst.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:scroller"><apiName>scroller</apiName><shortdesc>Definiert die Bildlaufleiste, die für den Bildlauf im TextArea-Steuerelement verwendet wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc>Definiert die Bildlaufleiste, die für den Bildlauf im TextArea-Steuerelement verwendet wird.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.SkinnableTextBase#textDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperDecrementButtonSkin"><apiName>NumericStepperDecrementButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-unten-Schaltfläche einer Spark NumericStepper-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Nach-unten-Schaltfläche einer Spark NumericStepper-Komponente.  
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#NumericStepper"><linktext>spark.components.NumericStepper</linktext></link></related-links><apiConstructor id="spark.skins.spark:NumericStepperDecrementButtonSkin:NumericStepperDecrementButtonSkin"><apiName>NumericStepperDecrementButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperDecrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-unten-Taste.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-unten-Taste.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperDecrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ImageLoadingSkin"><apiName>ImageLoadingSkin</apiName><shortdesc>Die standardmäßige Skinklasse für den Preloader der Spark-Imageskin-Fortschrittsleiste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für den Preloader der Spark-Imageskin-Fortschrittsleiste.  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Image"><linktext>spark.components.Image</linktext></link></related-links><apiConstructor id="spark.skins.spark:ImageLoadingSkin:ImageLoadingSkin"><apiName>ImageLoadingSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ImageLoadingSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.supportClasses:Range</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderTrackSkin"><apiName>HSliderTrackSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Leiste einer Spark-HSlider-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Leiste einer Spark-HSlider-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#HSlider"><linktext>spark.components.HSlider</linktext></link></related-links><apiConstructor id="spark.skins.spark:HSliderTrackSkin:HSliderTrackSkin"><apiName>HSliderTrackSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HighlightBitmapCaptureSkin"><apiName>HighlightBitmapCaptureSkin</apiName><shortdesc>
      Basisklasse für Skins, die eine Bitmaperfassung der Zielkomponenten durchführen und einen Filter auf die Bitmap anwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
      Basisklasse für Skins, die eine Bitmaperfassung der Zielkomponenten durchführen und einen Filter auf die Bitmap anwenden. Dies ist die Basisklasse für FocusSkin und ErrorSkin.
      
      </apiDesc></apiClassifierDetail><related-links><link href="spark.skins.spark.xml#ErrorSkin"><linktext>spark.skins.spark.ErrorSkin</linktext></link><link href="spark.skins.spark.xml#FocusSkin"><linktext>spark.skins.spark.FocusSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:HighlightBitmapCaptureSkin:HighlightBitmapCaptureSkin"><apiName>HighlightBitmapCaptureSkin</apiName><shortdesc>
         Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
         Konstruktor.
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:processBitmap"><apiName>processBitmap</apiName><shortdesc>
          Anwendung von Post-Processing auf die erfasste Bitmap.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          Anwendung von Post-Processing auf die erfasste Bitmap.
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
          </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
          </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:bitmap"><apiName>bitmap</apiName><shortdesc>
          Bitmaperfassung der Zielkomponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Bitmap"/></apiValueDef><apiDesc>
          Bitmaperfassung der Zielkomponente. 
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:borderWeight:get"><apiName>borderWeight</apiName><shortdesc>
          Anzahl an Pixeln für die Auffüllung um die Bitmap.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
          Anzahl an Pixeln für die Auffüllung um die Bitmap.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:target:get"><apiName>target</apiName><shortdesc>
          Zielobjekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.components.supportClasses:SkinnableComponent</apiValueClassifier></apiValueDef><apiDesc>
          Zielobjekt.
          
          </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarLeftButtonSkin"><apiName>ScrollBarLeftButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-links-Schaltfläche der Spark-ScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Nach-links-Schaltfläche der Spark-ScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#ScrollBarBase"><linktext>spark.components.supportClasses.ScrollBarBase</linktext></link><link href="spark.components.xml#HScrollBar"><linktext>spark.components.HScrollBar</linktext></link><link href="spark.components.xml#VScrollBar"><linktext>spark.components.VScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:ScrollBarLeftButtonSkin:ScrollBarLeftButtonSkin"><apiName>ScrollBarLeftButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-links-Schaltfläche in der ScrollBar-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-links-Schaltfläche in der ScrollBar-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:StackedFormHeadingSkin"><apiName>StackedFormHeadingSkin</apiName><shortdesc>Eine alternative Skinklasse für die Spark-FormHeading-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Eine alternative Skinklasse für die Spark-FormHeading-Komponente. Setzen Sie diese Skin ein, wenn Ihre FormItems die StackedFormItemSkin verwenden..
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#FormHeading"><linktext>spark.components.FormHeading</linktext></link></related-links><apiConstructor id="spark.skins.spark:StackedFormHeadingSkin:StackedFormHeadingSkin"><apiName>StackedFormHeadingSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:StackedFormHeadingSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormHeadingSkin:contentCol"><apiName>contentCol</apiName><shortdesc>Die Spalte, die die Beschriftung und den Inhalt des FormItem enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Beschriftung und den Inhalt des FormItem enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormHeadingSkin:helpCol"><apiName>helpCol</apiName><shortdesc>Die Spalte, die den Hilfeinhalt des FormItem enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die den Hilfeinhalt des FormItem enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormHeadingSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:FormHeading</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormHeadingSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.FormHeading#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormHeading#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:StackedFormHeadingSkin:sequenceCol"><apiName>sequenceCol</apiName><shortdesc>Die Spalte, die die Sequenzbeschriftung enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Sequenzbeschriftung enthält.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultItemRenderer"><apiName>DefaultItemRenderer</apiName><shortdesc>
  Die DefaultItemRenderer-Klasse definiert den Standardelementrenderer für ein List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusBlendMode"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark, mobile" type="uint">
<description conref="spark.components.supportClasses.GroupBase#style:symbolColor">
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="uint">
<description conref="spark.components.supportClasses.GroupBase#style:rollOverColor">
  </description>
<default>0xCEDBEF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark, mobile" type="uint">
<description conref="spark.components.supportClasses.GroupBase#style:focusColor">
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="downColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10.1" theme="mobile" type="uint">
<description conref="spark.components.supportClasses.GroupBase#style:downColor">
  </description>

<playerversion>AIR 2.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark, mobile" type="Array">
<description conref="spark.components.supportClasses.GroupBase#style:alternatingItemColors">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="unfocusedTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Die Farbe von Text, wenn die Komponente aktiviert, jedoch nicht im Fokus ist.
  
  <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="inactiveTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Die Farbe von Text, wenn die Komponente deaktiviert ist.
  
  <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusedTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Die Farbe von Text, wenn die Komponente aktiviert und im Fokus ist.
  
  <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="wordSpacing" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10.5" type="Object">
<description>
  Legt den beim Blocksatz verwendeten Abstand zwischen Wörtern fest. 
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.wordSpacing.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 2.0
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/wordSpacing"><linktext>flashx.textLayout.formats.ITextLayoutFormat.wordSpacing</linktext></link></related-links></style><style enumeration="collapse,preserve" inherit="yes" name="whiteSpaceCollapse" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Blendet Leerraum aus oder behält ihn bei, wenn Text in einem TextFlow importiert wird.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.whiteSpaceCollapse.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/whiteSpaceCollapse"><linktext>flashx.textLayout.formats.ITextLayoutFormat.whiteSpaceCollapse</linktext></link></related-links></style><style enumeration="auto,rotate0,rotate90,rotate180,rotate270" inherit="yes" name="textRotation" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Bestimmt die Gradzahl zum Drehen dieses Texts.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textRotation.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textRotation"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textRotation</linktext></link></related-links></style><style format="Length" inherit="yes" name="textIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Offset der ersten Textzeile links vom Container.
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textIndent.</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style textIndent“. Bei Verwendung von StyleableStageText wird dieses nicht unterstützt.</b></p>
   </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableTextField#style:textIndent
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textIndent"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textIndent</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:textIndent"><linktext>spark.components.supportClasses.StyleableTextField.textIndent</linktext></link></related-links></style><style inherit="yes" name="tabStops" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt die Tabulatoren an, die dem Absatz zugewiesen sind.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.tabStops.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/tabStops"><linktext>flashx.textLayout.formats.ITextLayoutFormat.tabStops</linktext></link></related-links></style><style format="length" inherit="yes" name="paragraphStartIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Betrag, um den der obere Absatzrand eingerückt wird.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.paragraphStartIndent.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/paragraphStartIndent"><linktext>flashx.textLayout.formats.ITextLayoutFormat.paragraphStartIndent</linktext></link></related-links></style><style format="length" inherit="yes" name="paragraphSpaceBefore" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Der Platz, der vor dem Absatz gelassen werden soll.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.paragraphSpaceBefore.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/paragraphSpaceBefore"><linktext>flashx.textLayout.formats.ITextLayoutFormat.paragraphSpaceBefore</linktext></link></related-links></style><style format="length" inherit="yes" name="paragraphSpaceAfter" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Der Platz, der hinter dem Absatz gelassen werden soll.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.paragraphSpaceAfter.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/paragraphSpaceAfter"><linktext>flashx.textLayout.formats.ITextLayoutFormat.paragraphSpaceAfter</linktext></link></related-links></style><style format="length" inherit="yes" name="paragraphEndIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Betrag, um den die obere Absatzrandkante eingerückt wird.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.paragraphEndIndent.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/paragraphEndIndent"><linktext>flashx.textLayout.formats.ITextLayoutFormat.paragraphEndIndent</linktext></link></related-links></style><style enumeration="upperAlpha,lowerAlpha,upperRoman,lowerRoman,none,disc,circle,square,box,check,diamond,hyphen,arabicIndic,bengali,decimal,decimalLeadingZero,devanagari,gujarati,gurmukhi,kannada,persian,thai,urdu,cjkEarthlyBranch,cjkHeavenlyStem,hangul,hangulConstant,hiragana,hiraganaIroha,katakana,katakanaIroha,lowerGreek,lowerLatin,upperGreek,upperLatin" inherit="yes" name="listStyleType" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Dies steuert die Darstellung von Einträgen in Listen.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.listStyleType.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 2.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/listStyleType"><linktext>flashx.textLayout.formats.ITextLayoutFormat.listStyleType</linktext></link></related-links></style><style enumeration="inside,outside" inherit="yes" name="listStylePosition" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Dies steuert die Platzierung von Markern relativ zum Listeneintrag.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.listStylePosition.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 2.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/listStylePosition"><linktext>flashx.textLayout.formats.ITextLayoutFormat.listStylePosition</linktext></link></related-links></style><style format="length" inherit="yes" name="listAutoPadding" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Legt einen automatischen Einzug für den Beginn von Listenrändern fest, wenn der Auffüllwert der Liste auf dieser Seite <codeph>auto</codeph> ist.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.listAutoPadding.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/listAutoPadding"><linktext>flashx.textLayout.formats.ITextLayoutFormat.listAutoPadding</linktext></link></related-links></style><style enumeration="auto,romanUp,ideographicTopUp,ideographicCenterUp,ideographicTopDown,ideographicCenterDown,ascentDescentUp,box" inherit="yes" name="leadingModel" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt das Zeilenabstandsmodell an, das eine Kombination aus Zeilenabstandsbasis und Zeilenabstandsrichtung ist.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.leadingModel.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/leadingModel"><linktext>flashx.textLayout.formats.ITextLayoutFormat.leadingModel</linktext></link></related-links></style><style inherit="yes" name="firstBaselineOffset" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description>
  Gibt die Grundlinienposition der ersten Linie im Container an.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.firstBaselineOffset.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/firstBaselineOffset"><linktext>flashx.textLayout.formats.ITextLayoutFormat.firstBaselineOffset</linktext></link></related-links></style><style enumeration="start,end,left,right,both,none" inherit="yes" name="clearFloats" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Steuert, wie der Text bei einem Float umbricht.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.clearFloats.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/clearFloats"><linktext>flashx.textLayout.formats.ITextLayoutFormat.clearFloats</linktext></link></related-links></style><style enumeration="auto,all,any,none" inherit="yes" name="breakOpportunity" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Steuert, an welcher Stelle Zeilen umbrochen werden können, wenn umbrochener Text in mehrere Zeilen umbrochen wird. 
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.breakOpportunity.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/breakOpportunity"><linktext>flashx.textLayout.formats.ITextLayoutFormat.breakOpportunity</linktext></link></related-links></style><style enumeration="tb,rl" inherit="yes" name="blockProgression" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt eine vertikale oder horizontale Abfolge der Zeilenplatzierung an.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.blockProgression.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/blockProgression"><linktext>flashx.textLayout.formats.ITextLayoutFormat.blockProgression</linktext></link></related-links></style><style enumeration="default,capsToSmallCaps,uppercase,lowercase,lowercaseToSmallCaps" inherit="yes" name="typographicCase" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Die für diesen Text verwendete typografische Groß-/Kleinschreibung.   
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.typographicCase</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/typographicCase"><linktext>flashx.textLayout.formats.ITextLayoutFormat.typographicCase</linktext></link></related-links></style><style inherit="yes" name="trackingRight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description>
  Die Laufweite (manuelles Kerning), die auf die rechte Seite jedes Zeichens angewendet werden soll.   
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.trackingRight</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/trackingRight"><linktext>flashx.textLayout.formats.ITextLayoutFormat.trackingRight</linktext></link></related-links></style><style inherit="yes" name="trackingLeft" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description>
  Die Laufweite (manuelles Kerning), die auf die linke Seite jedes Zeichens angewendet werden soll.   
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.trackingLeft</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/trackingLeft"><linktext>flashx.textLayout.formats.ITextLayoutFormat.trackingLeft</linktext></link></related-links></style><style enumeration="interWord,distribute" inherit="yes" name="textJustify" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt Optionen für die Ausrichtung des Texts an.  
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textJustify</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textJustify"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textJustify</linktext></link></related-links></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird.
   <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textDecoration</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style textDecoration“. Bei Verwendung von StyleableStageText wird dieses nicht unterstützt.</b></p>
   </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableTextField#style:textDecoration
   </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textDecoration"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textDecoration</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:textDecoration"><linktext>spark.components.supportClasses.StyleableTextField.textDecoration</linktext></link></related-links></style><style inherit="yes" name="textAlpha" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Wert für Alpha (Transparenz) des Texts.  
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textAlpha</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textAlpha"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textAlpha</linktext></link></related-links></style><style enumeration="start,end,left,right,center,justify" inherit="yes" name="textAlignLast" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Ausrichtung der letzten Zeile im Absatz in Relation zum Container bei Verwendung von Blocksatz. 
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textAlignLast</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textAlignLast"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textAlignLast</linktext></link></related-links></style><style enumeration="start,end,left,right,center,justify" inherit="yes" name="textAlign" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Ausrichtung von Text in einem Container.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.textAlign</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style textAlign“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style textAlign“.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:textAlign
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/textAlign"><linktext>flashx.textLayout.formats.ITextLayoutFormat.textAlign</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:textAlign"><linktext>spark.components.supportClasses.StyleableStageText.textAlign</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:textAlign"><linktext>spark.components.supportClasses.StyleableTextField.textAlign</linktext></link></related-links></style><style enumeration="cff,normal" inherit="yes" name="renderingMode" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Der für diesen Text verwendete Rendervorgang, wird nur auf eingebettete Schriftarten verwendet.  
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.renderingMode</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/renderingMode"><linktext>flashx.textLayout.formats.ITextLayoutFormat.renderingMode</linktext></link></related-links></style><style inherit="yes" name="locale" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des Texts. Steuert die Transformation und Form von Groß- und Kleinschreibung. Nutzt standardmäßige Gebietsschemabezeichner, wie in Unicode Technical Standard #35 beschrieben. Beispiel: „en“, „en_US“ und „en-US“ stehen für Englisch, „ja“ für Japanisch. 
  
  <p>Der Standardwert ist „undefined“. Diese Eigenschaft übernimmt ihren Wert von einem Vorgänger. Ist er immer noch „undefined“, erbt sie ihn vom globalen <codeph>locale</codeph>-Stil. Ist während der Initialisierung der Anwendung der globale <codeph>locale</codeph>-Stil nicht definiert, wird der Standardwert auf „en“ gesetzt.</p>
 
  <p>Beim Einsatz der Spark-Formatierer und -Globalisierungsklassen können Sie diesen Stil in der Stammanwendung auf den Wert der <codeph>LocaleID.DEFAULT</codeph>-Konstante setzen. Diese Klassen nutzen dann die internationalen Einstellungen des Client-Betriebssystems.</p>
 
  </description>
<default>undefined
  </default>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="http://www.unicode.org/reports/tr35/"><linktext>http://www.unicode.org/reports/tr35/</linktext></link></related-links></style><style inherit="yes" name="lineThrough" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Boolean">
<description> 
  Wenn „true“, wird Durchstreichung angewendet, d. h eine mitten durch den Text gezogene Linie.  
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.lineThrough</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/lineThrough"><linktext>flashx.textLayout.formats.ITextLayoutFormat.lineThrough</linktext></link></related-links></style><style inherit="yes" name="lineHeight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description>
  Steuerelemente für den Zeilenabstand des Texts. 
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.lineHeight.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b> Siehe <codeph>leading</codeph>.</p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

<see>#style:leading
 
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/lineHeight"><linktext>flashx.textLayout.formats.ITextLayoutFormat.lineHeight</linktext></link><link href="spark.skins.spark.xml#DefaultItemRenderer/style:leading"><linktext>leading</linktext></link></related-links></style><style enumeration="common,minimum,uncommon,exotic" inherit="yes" name="ligatureLevel" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Steuert, welche in der Schriftart definierten Ligaturen im Text verwendet werden können. 
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.ligatureLevel</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/ligatureLevel"><linktext>flashx.textLayout.formats.ITextLayoutFormat.ligatureLevel</linktext></link></related-links></style><style inherit="yes" name="letterSpacing" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10.1" theme="mobile" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen.
 
  <p><b>Dies wird im Spark-Design nicht unterstützt.</b> Siehe <codeph>trackingLeft</codeph> und <codeph>trackingRight</codeph>.</p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField.letterSpacing“. Bei Verwendung von StyleableStageText wird dieses nicht unterstützt.</b></p>
   </description>

<playerversion>AIR 2.0
  </playerversion>

<see>#style:trackingLeft
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:letterSpacing"><linktext>spark.components.supportClasses.StyleableTextField.letterSpacing</linktext></link><link href="spark.skins.spark.xml#DefaultItemRenderer/style:trackingLeft"><linktext>trackingLeft</linktext></link><link href="spark.skins.spark.xml#DefaultItemRenderer/style:trackingRight"><linktext>trackingRight</linktext></link></related-links></style><style format="Length" inherit="yes" name="leading" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10.1" theme="mobile" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
   <p><b>Dies wird im Spark-Design nicht unterstützt.</b> Siehe <codeph>lineHeight</codeph>.</p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableStageText Style fontWeight“. Bei Verwendung von StyleableStageText wird dieses nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 2.0
  </playerversion>

<see>#style:lineHeight
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:leading"><linktext>spark.components.supportClasses.StyleableTextField.leading</linktext></link><link href="spark.skins.spark.xml#DefaultItemRenderer/style:lineHeight"><linktext>lineHeight</linktext></link></related-links></style><style enumeration="auto,on,off" inherit="yes" name="kerning" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Der Stil, der zum Ausrichten des Absatzes verwendet wird. 
  
  <p>Kerning ist standardmäßig für Spark-Komponenten aktiviert, für MX-Komponenten jedoch standardmäßig deaktiviert. Spark-Komponenten interpretieren <codeph>default</codeph> als <codeph>auto</codeph>, während MX-Komponenten <codeph>default</codeph> als <codeph>false</codeph> interpretieren.</p>
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.kerning</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/kerning"><linktext>flashx.textLayout.formats.ITextLayoutFormat.kerning</linktext></link></related-links></style><style enumeration="auto,prioritizeLeastAdjustment,pushInKinsoku,pushOutOnly" inherit="yes" name="justificationStyle" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Der Stil, der zum Ausrichten des Absatzes verwendet wird. 
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.justificationStyle</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/justificationStyle"><linktext>flashx.textLayout.formats.ITextLayoutFormat.justificationStyle</linktext></link></related-links></style><style enumeration="auto,space,eastAsian" inherit="yes" name="justificationRule" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Regel zum Ausrichten von Text in einem Absatz.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.justificationRule</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/justificationRule"><linktext>flashx.textLayout.formats.ITextLayoutFormat.justificationRule</linktext></link></related-links></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontWeight</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style fontWeight“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style fontWeight“.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontWeight
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontWeight"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontWeight</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontWeight"><linktext>spark.components.supportClasses.StyleableStageText.fontWeight</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontWeight"><linktext>spark.components.supportClasses.StyleableTextField.fontWeight</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontStyle</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter spark.components.supportClasses.StyleableTextField Style fontStyle. Bei Verwendung von StyleableStageText siehe spark.components.supportClasses.StyleableStageText Style fontStyle.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontStyle
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontStyle"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontStyle</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontStyle"><linktext>spark.components.supportClasses.StyleableStageText.fontStyle</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontStyle"><linktext>spark.components.supportClasses.StyleableTextField.fontStyle</linktext></link></related-links></style><style format="Length" inherit="yes" name="fontSize" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description>
  Die Höhe des Texts in Pixeln.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontSize</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style fontSize“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style fontSize“.</b></p>
 
  <p>Der Standardwert für das Spark-Design beträgt <codeph>12</codeph>. Der Standardwert für das Mobile-Design beträgt <codeph>24</codeph>.</p>
   </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontSize
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontSize"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontSize</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontSize"><linktext>spark.components.supportClasses.StyleableStageText.fontSize</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontSize"><linktext>spark.components.supportClasses.StyleableTextField.fontSize</linktext></link></related-links></style><style enumeration="auto,device,embeddedCFF" inherit="yes" name="fontLookup" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Zu verwendende Schriftartensuche. 
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontLookup</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontLookup"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontLookup</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Der Name der zu verwendenden Schriftart oder eine durch Kommas getrennte Liste mit Schriftartennamen. 
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.fontFamily.</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter spark.components.supportClasses.StyleableTextField Style fontFamily. Bei Verwendung von StyleableStageText siehe spark.components.supportClasses.StyleableStageText Style fontFamily.</b></p>
 
  <p>Der Standardwert für das Spark-Design ist <codeph>Arial</codeph>. Der Standardwert für das Mobile-Design ist <codeph>_sans</codeph>.</p>
   </description>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableStageText#style:fontFamily
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/fontFamily"><linktext>flashx.textLayout.formats.ITextLayoutFormat.fontFamily</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:fontFamily"><linktext>spark.components.supportClasses.StyleableStageText.fontFamily</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:fontFamily"><linktext>spark.components.supportClasses.StyleableTextField.fontFamily</linktext></link></related-links></style><style enumeration="auto,roman,ascent,descent,ideographicTop,ideographicCenter,ideographicBottom" inherit="yes" name="dominantBaseline" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt an, welche Elementgrundlinie an der <codeph>alignmentBaseline</codeph> ausgerichtet wird, um die vertikale Position des Elements auf der Linie zu bestimmen. 
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.dominantBaseline.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/dominantBaseline"><linktext>flashx.textLayout.formats.ITextLayoutFormat.dominantBaseline</linktext></link></related-links></style><style enumeration="ltr,rtl" inherit="yes" name="direction" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt die standardmäßige bidirektionale Einbettungsebene des Texts an.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.direction.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/direction"><linktext>flashx.textLayout.formats.ITextLayoutFormat.direction</linktext></link></related-links></style><style enumeration="default,proportional,tabular" inherit="yes" name="digitWidth" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Die für diesen Text verwendete Ziffernbreite.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.digitWidth.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/digitWidth"><linktext>flashx.textLayout.formats.ITextLayoutFormat.digitWidth</linktext></link></related-links></style><style enumeration="default,lining,oldStyle" inherit="yes" name="digitCase" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Die für diesen Text verwendete Ziffernart.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.digitCase.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/digitCase"><linktext>flashx.textLayout.formats.ITextLayoutFormat.digitCase</linktext></link></related-links></style><style format="Color" inherit="yes" name="color" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Farbe des Texts.
 
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.color.</b></p>
   <p><b>Wenn für das Mobile-Design StyleableTextField verwendet wird, finden Sie Informationen unter „spark.components.supportClasses.StyleableTextField Style color“. Bei Verwendung von StyleableStageText siehe „spark.components.supportClasses.StyleableStageText Style color“.</b></p>
   </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.5
  </playerversion>

<see>spark.components.supportClasses.StyleableTextField#style:color
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/color"><linktext>flashx.textLayout.formats.ITextLayoutFormat.color</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableTextField/style:color"><linktext>spark.components.supportClasses.StyleableTextField.color</linktext></link><link href="" invalidHref="spark.components.supportClasses.xml#StyleableStageText/style:color"><linktext>spark.components.supportClasses.StyleableStageText.color</linktext></link></related-links></style><style enumeration="horizontalStem,none" inherit="yes" name="cffHinting" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Die für diesen Text verwendete Art der CFF-Hinweise.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.cffHinting.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/cffHinting"><linktext>flashx.textLayout.formats.ITextLayoutFormat.cffHinting</linktext></link></related-links></style><style inherit="yes" name="baselineShift" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description>
  Betrag, um den die Grundlinie verschoben wird.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.baselineShift.</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/baselineShift"><linktext>flashx.textLayout.formats.ITextLayoutFormat.baselineShift</linktext></link></related-links></style><style enumeration="useDominantBaseline,roman,ascent,descent,ideographicTop,ideographicCenter,ideographicBottom" inherit="yes" name="alignmentBaseline" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description>
  Gibt die Grundlinie an, an der die dominierende Grundlinie ausgerichtet wird.
  
  <p><b>Spark-Design: siehe flashx.textLayout.formats.ITextLayoutFormat.alignmentBaseline</b></p>
   <p><b>Dies wird im Mobile-Design nicht unterstützt.</b></p>
 
  </description>

<playerversion>AIR 1.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flashx.textLayout.formats.xml#ITextLayoutFormat/alignmentBaseline"><linktext>flashx.textLayout.formats.ITextLayoutFormat.alignmentBaseline</linktext></link></related-links></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>spark.components:IItemRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DefaultItemRenderer-Klasse definiert den Standardelementrenderer für ein List-Steuerelement. Der Standardelementrenderer zeichnet den Text, der mit den einzelnen Elementen der Liste verknüpft ist.
 
  <p>Sie können den Standardelementrenderer überschreiben, indem Sie einen benutzerdefinierten Elementrenderer erstellen.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer.</linktext></link><link href="spark.components.xml#IItemRenderer"><linktext>spark.components.IItemRenderer</linktext></link><link href="spark.components.supportClasses.xml#ItemRenderer"><linktext>spark.components.supportClasses.ItemRenderer</linktext></link></related-links><adobeApiEvent id="spark.skins.spark:DefaultItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Data-Eigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft verändert
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.skins.spark:DefaultItemRenderer:DefaultItemRenderer"><apiName>DefaultItemRenderer</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultItemRenderer:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>
      Optionale Elementrenderer-Beschriftungskomponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.supportClasses:TextBase</apiValueClassifier></apiValueDef><apiDesc>
      Optionale Elementrenderer-Beschriftungskomponente. Mit dieser Komponente wird der Wert der <codeph>baselinePosition</codeph>-Eigenschaft in der Hostkomponente des Elementrenderers bestimmt. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Die Implementierung der data-Eigenschaft gemäß der IDataRenderer-Schnittstelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die Implementierung der <codeph>data</codeph>-Eigenschaft gemäß der IDataRenderer-Schnittstelle. Wenn festgelegt, wird der Wert gespeichert und die Komponente entwertet, damit das Layout der Komponente neu aufgebaut werden kann.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer.</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:dragging:get"><apiName>dragging</apiName><shortdesc>
      
      Enthält „true“, wenn der Elementrenderer gezogen wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      Enthält <codeph>true</codeph>, wenn der Elementrenderer gezogen wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:itemIndex:get"><apiName>itemIndex</apiName><shortdesc>
      
      Die Indexposition des Elements im Datenprovider der Hostkomponente des Elementrenderers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     </apiDefaultValue></apiValueDef><apiDesc>
      
      Die Indexposition des Elements im Datenprovider der Hostkomponente des Elementrenderers.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:label:get"><apiName>label</apiName><shortdesc>
      
      Der String, der im Elementrenderer anzuzeigen ist.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""    
     </apiDefaultValue></apiValueDef><apiDesc>
      
      Der String, der im Elementrenderer anzuzeigen ist. 
     
      <p>Die Hostkomponente des Elementrenderers kann mithilfe der <codeph>itemToLabel()</codeph>-Methode das Datenelement in einen String konvertieren, der vom Elementrenderer angezeigt wird. </p>
     
      <p>Für Steuerelemente wie „List“ und „ButtonBar“ können Sie mithilfe der Eigenschaften <codeph>labelField</codeph> und <codeph>labelFunction</codeph> das Feld des Datenelements angeben, das den String enthält. Andernfalls verwendet die Hostkomponente die <codeph>toString()</codeph>-Methode, um das Datenelement in einen String zu konvertieren. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:selected:get"><apiName>selected</apiName><shortdesc>
      
      Enthält „true“, wenn der Elementrenderer sich selbst als ausgewählt anzeigen kann.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     </apiDefaultValue></apiValueDef><apiDesc>
      
      Enthält <codeph>true</codeph>, wenn der Elementrenderer sich selbst als ausgewählt anzeigen kann.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:showsCaret:get"><apiName>showsCaret</apiName><shortdesc>
      
      Enthält „true“, wenn der Elementrenderer im Fokus dargestellt werden kann.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false  
     </apiDefaultValue></apiValueDef><apiDesc>
      
      Enthält <codeph>true</codeph>, wenn der Elementrenderer im Fokus dargestellt werden kann. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarTrackSkin"><apiName>HScrollBarTrackSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Leiste einer Spark-HScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Leiste einer Spark-HScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#HScrollBar"><linktext>spark.components.HScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:HScrollBarTrackSkin:HScrollBarTrackSkin"><apiName>HScrollBarTrackSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxButtonSkin"><apiName>ComboBoxButtonSkin</apiName><shortdesc>Die standardmäßige Skinlasse für die Ankerschaltfläche in einer Spark-ComboBox-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinlasse für die Ankerschaltfläche in einer Spark-ComboBox-Komponente.  
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.skins.spark.xml#ComboBoxSkin"><linktext>spark.skins.spark.ComboBoxSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:ComboBoxButtonSkin:ComboBoxButtonSkin"><apiName>ComboBoxButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Die in der Ankerschaltfläche angezeigte Pfeilgrafik.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Die in der Ankerschaltfläche angezeigte Pfeilgrafik.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:FormHeadingSkin"><apiName>FormHeadingSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-FormHeading-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-FormHeading-Komponente.  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#FormHeading"><linktext>spark.components.FormHeading</linktext></link></related-links><apiConstructor id="spark.skins.spark:FormHeadingSkin:FormHeadingSkin"><apiName>FormHeadingSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:FormHeadingSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der Form-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormHeadingSkin:contentCol"><apiName>contentCol</apiName><shortdesc>Die Spalte, die den Inhalt des Formularelements enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die den Inhalt des Formularelements enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormHeadingSkin:helpCol"><apiName>helpCol</apiName><shortdesc>Die Spalte, die den Hilfeinhalt des Formularelements enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die den Hilfeinhalt des Formularelements enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormHeadingSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:FormHeading</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormHeadingSkin:labelCol"><apiName>labelCol</apiName><shortdesc>Die Spalte, die die Beschriftung des Formularelements enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Beschriftung des Formularelements enthält.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormHeadingSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.FormHeading#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.FormHeading#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:FormHeadingSkin:sequenceCol"><apiName>sequenceCol</apiName><shortdesc>Die Spalte, die die Sequenzbeschriftung enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.containers.utilityClasses:ConstraintColumn"/></apiValueDef><apiDesc>Die Spalte, die die Sequenzbeschriftung enthält.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarDownButtonSkin"><apiName>ScrollBarDownButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-unten-Schaltfläche der Spark-ScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Nach-unten-Schaltfläche der Spark-ScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#ScrollBarBase"><linktext>spark.components.supportClasses.ScrollBarBase</linktext></link><link href="spark.components.xml#HScrollBar"><linktext>spark.components.HScrollBar</linktext></link><link href="spark.components.xml#VScrollBar"><linktext>spark.components.VScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:ScrollBarDownButtonSkin:ScrollBarDownButtonSkin"><apiName>ScrollBarDownButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-Unten-Taste in der ScrollBar-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-unten-Taste in der ScrollBar-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollerSkin"><apiName>ScrollerSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-Scroller-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-Scroller-Komponente. 
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Scroller"><linktext>spark.components.Scroller</linktext></link></related-links><apiConstructor id="spark.skins.spark:ScrollerSkin:ScrollerSkin"><apiName>ScrollerSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollerSkin:horizontalScrollBarFactory"><apiName>horizontalScrollBarFactory</apiName><shortdesc>Eine horizontale Bildlaufleiste, mit der Sie steuern können, welche Daten angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht horizontal in den Anzeigebereich passen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Eine horizontale Bildlaufleiste, mit der Sie steuern können, welche Daten angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht horizontal in den Anzeigebereich passen. Der Scroller bestimmt, ob die horizontale Bildlaufleiste sichtbar ist.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:verticalScrollBarFactory"><apiName>verticalScrollBarFactory</apiName><shortdesc>Eine vertikale Bildlaufleiste, mit der Sie steuern können, welche Daten angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht vertikal in den Anzeigebereich passen.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Eine vertikale Bildlaufleiste, mit der Sie steuern können, welche Daten angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht vertikal in den Anzeigebereich passen. Der Scroller bestimmt, ob die vertikale Bildlaufleiste sichtbar ist.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerIncrementButtonSkin"><apiName>SpinnerIncrementButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-oben-Schaltfläche einer Spark-Spinner-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Nach-oben-Schaltfläche einer Spark-Spinner-Komponente.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Spinner"><linktext>spark.components.Spinner</linktext></link></related-links><apiConstructor id="spark.skins.spark:SpinnerIncrementButtonSkin:SpinnerIncrementButtonSkin"><apiName>SpinnerIncrementButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-Oben-Taste.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-oben-Taste.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SkinnableDataContainerSkin"><apiName>SkinnableDataContainerSkin</apiName><shortdesc>Die standardmäßige Skinklasse für den Spark-SkinnableDataContainer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für den Spark-SkinnableDataContainer.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#SkinnableDataContainer"><linktext>spark.components.SkinnableDataContainer</linktext></link></related-links><apiConstructor id="spark.skins.spark:SkinnableDataContainerSkin:SkinnableDataContainerSkin"><apiName>SkinnableDataContainerSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:SkinnableDataContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarSkin"><apiName>HScrollBarSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-HScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-HScrollBar-Komponente. Die Bildlauffeld- und die Leistenskin werden durch die HScrollBarThumbSkin- bzw. die HScrollBarTrackSkin-Klasse definiert.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#HScrollBar"><linktext>spark.components.HScrollBar</linktext></link><link href="spark.skins.spark.xml#HScrollBarThumbSkin"><linktext>spark.skins.spark.HScrollBarThumbSkin</linktext></link><link href="spark.skins.spark.xml#HScrollBarTrackSkin"><linktext>spark.skins.spark.HScrollBarTrackSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:HScrollBarSkin:HScrollBarSkin"><apiName>HScrollBarSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc conref="spark.components.supportClasses.ScrollBarBase#decrementButton">Die standardmäßige Skinklasse lautet ScrollBarLeftButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ScrollBarBase#decrementButton">Die standardmäßige Skinklasse lautet ScrollBarLeftButtonSkin.
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#ScrollBarLeftButtonSkin"><linktext>spark.skins.spark.ScrollBarLeftButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HScrollBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc conref="spark.components.supportClasses.ScrollBarBase#incrementButton">Die standardmäßige Skinklasse lautet ScrollBarRightButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ScrollBarBase#incrementButton">Die standardmäßige Skinklasse lautet ScrollBarRightButtonSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#ScrollBarRightButtonSkin"><linktext>spark.skins.spark.ScrollBarRightButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:thumb"><apiName>thumb</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet HScrollBarThumbSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet HScrollBarThumbSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#HScrollBarThumbSkin"><linktext>spark.skins.spark.HScrollBarThumbSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:track"><apiName>track</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet HScrollBarTrackSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet HScrollBarTrackSkin.    
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#HScrollBarTrackSkin"><linktext>spark.skins.spark.HScrollBarTrackSkin</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerSkin"><apiName>SpinnerSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-Spinner-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-Spinner-Komponente. Die Skins für die Nach-unten- und Nach-oben-Schaltflächen der Spinner-Komponente werden jeweils durch die SpinnerDecrementButtonSkin- bzw. die SpinnerIncrementButtonSkin-Klasse definiert.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Spinner"><linktext>spark.components.Spinner</linktext></link><link href="spark.skins.spark.xml#SpinnerDecrementButtonSkin"><linktext>spark.skins.spark.SpinnerDecrementButtonSkin</linktext></link><link href="spark.skins.spark.xml#SpinnerIncrementButtonSkin"><linktext>spark.skins.spark.SpinnerIncrementButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:SpinnerSkin:SpinnerSkin"><apiName>SpinnerSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc conref="spark.components.Spinner#decrementButton">Die standardmäßige Skinklasse ist die SpinnerDecrementButtonSkin-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Spinner#decrementButton">Die standardmäßige Skinklasse ist die SpinnerDecrementButtonSkin-Klasse. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#SpinnerDecrementButtonSkin"><linktext>spark.skins.spark.SpinnerDecrementButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Spinner</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc conref="spark.components.Spinner#incrementButton">Die standardmäßige Skinklasse ist die SpinnerIncrementButtonSkin-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Spinner#incrementButton">Die standardmäßige Skinklasse ist die SpinnerIncrementButtonSkin-Klasse.
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#SpinnerIncrementButtonSkin"><linktext>spark.skins.spark.SpinnerIncrementButtonSkin</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperSkin"><apiName>NumericStepperSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark-NumericStepper-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark-NumericStepper-Komponente. Die Skin für das Texteingabefeld auf einer NumericStepper-Komponente wird durch die NumericStepperTextInputSkin-Klasse definiert.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#NumericStepper"><linktext>spark.components.NumericStepper</linktext></link><link href="spark.skins.spark.xml#NumericStepperTextInputSkin"><linktext>spark.skins.spark.NumericStepperTextInputSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:NumericStepperSkin:NumericStepperSkin"><apiName>NumericStepperSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc conref="spark.components.Spinner#decrementButton">Die Standardklasse lautet NumericStepperDecrementButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Spinner#decrementButton">Die Standardklasse lautet NumericStepperDecrementButtonSkin.
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#NumericStepperDecrementButtonSkin"><linktext>spark.skins.spark.NumericStepperDecrementButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:NumericStepper</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc conref="spark.components.Spinner#incrementButton">Die Standardklasse lautet NumericStepperIncrementButtonSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Spinner#incrementButton">Die Standardklasse lautet NumericStepperIncrementButtonSkin.
           </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#NumericStepperIncrementButtonSkin"><linktext>spark.skins.spark.NumericStepperIncrementButtonSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc conref="spark.components.NumericStepper#textDisplay">Die Standardklasse lautet NumericStepperTextInputSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.NumericStepper#textDisplay">Die Standardklasse lautet NumericStepperTextInputSkin.
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#NumericStepperTextInputSkin"><linktext>spark.skins.spark.NumericStepperTextInputSkin</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarThumbSkin"><apiName>HScrollBarThumbSkin</apiName><shortdesc>Die standardmäßige Skinklasse für das Bildlauffeld einer Spark-HScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für das Bildlauffeld einer Spark-HScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#HScrollBar"><linktext>spark.components.HScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:HScrollBarThumbSkin:HScrollBarThumbSkin"><apiName>HScrollBarThumbSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:RadioButtonSkin"><apiName>RadioButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark-RadioButton-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark-RadioButton-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#RadioButton"><linktext>spark.components.RadioButton</linktext></link><link href="spark.components.xml#RadioButtonGroup"><linktext>spark.components.RadioButtonGroup</linktext></link></related-links><apiConstructor id="spark.skins.spark:RadioButtonSkin:RadioButtonSkin"><apiName>RadioButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:RadioButtonSkin:dot"><apiName>dot</apiName><shortdesc>Definiert die Darstellung des Punkts für den RadioButton.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Punkts für den RadioButton. Erstellen Sie zum Anpassen der Darstellung des Punkts eine angepasste RadioButtonSkin-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RadioButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ApplicationSkin"><apiName>ApplicationSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-Application-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-Application-Komponente. 
        
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Application"><linktext>spark.components.Application</linktext></link></related-links><apiConstructor id="spark.skins.spark:ApplicationSkin:ApplicationSkin"><apiName>ApplicationSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>Ein Rechteck mit einer Volltonfarbe, die den Hintergrund der Anwendung bildet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Ein Rechteck mit einer Volltonfarbe, die den Hintergrund der Anwendung bildet. Die Farbe der Füllung wird in der backgroundColor-Eigenschaft der Anwendung eingestellt.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:controlBarGroup"><apiName>controlBarGroup</apiName><shortdesc conref="spark.components.Application#controlBarGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Application#controlBarGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc> 
         Eine Eigenschaft in strenger Typisierung, die auf die Komponente verweist, auf die diese Skin angewendet wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Application</apiValueClassifier></apiValueDef><apiDesc> 
         Eine Eigenschaft in strenger Typisierung, die auf die Komponente verweist, auf die diese Skin angewendet wird.
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:BorderContainerSkin"><apiName>BorderContainerSkin</apiName><shortdesc>
  Die standardmäßige Skinklasse für eine Spark-BorderContainer-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die standardmäßige Skinklasse für eine Spark-BorderContainer-Komponente.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#BorderContainer"><linktext>spark.components.BorderContainer</linktext></link></related-links><apiConstructor id="spark.skins.spark:BorderContainerSkin:BorderContainerSkin"><apiName>BorderContainerSkin</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:BorderContainerSkin:contentGroup:get"><apiName>contentGroup</apiName><shortdesc>
      Der erforderliche Skinteil für SkinnableContainer. 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>
      Der erforderliche Skinteil für SkinnableContainer. 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:BorderContainerSkin:hostComponent:get"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:BorderContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderSkin"><apiName>HSliderSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-HSlider-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-HSlider-Komponente. Die Schieberegler- und die Leistenskin werden durch die HSliderThumbSkin- bzw. die HSliderTrackSkin-Klasse definiert.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#HSlider"><linktext>spark.components.HSlider</linktext></link><link href="spark.skins.spark.xml#HSliderThumbSkin"><linktext>spark.skins.spark.HSliderThumbSkin</linktext></link><link href="spark.skins.spark.xml#HSliderTrackSkin"><linktext>spark.skins.spark.HSliderTrackSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:HSliderSkin:HSliderSkin"><apiName>HSliderSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderSkin:dataTip"><apiName>dataTip</apiName><shortdesc>Die QuickInfo, die im mx.controls.Slider-Steuerelement verwendet wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Die QuickInfo, die im mx.controls.Slider-Steuerelement verwendet wird. Erstellen Sie zum Anpassen der Darstellung des DataTip eine angepasste HSliderSkin-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HSlider</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:thumb"><apiName>thumb</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet HSliderThumbSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#thumb">Die standardmäßige Skinklasse lautet HSliderThumbSkin.
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#HSliderThumbSkin"><linktext>spark.skins.spark.HSliderThumbSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:HSliderSkin:track"><apiName>track</apiName><shortdesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet HSliderTrackSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.TrackBase#track">Die standardmäßige Skinklasse lautet HSliderTrackSkin. 
            </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.xml#HSliderTrackSkin"><linktext>spark.skins.spark.HSliderTrackSkin</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerDecrementButtonSkin"><apiName>SpinnerDecrementButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-unten-Schaltfläche einer Spark-Spinner-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Pfeil-nach-unten-Schaltfläche einer Spark-Spinner-Komponente.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Spinner"><linktext>spark.components.Spinner</linktext></link></related-links><apiConstructor id="spark.skins.spark:SpinnerDecrementButtonSkin:SpinnerDecrementButtonSkin"><apiName>SpinnerDecrementButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-unten-Taste.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-unten-Taste.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SkinnableContainerSkin"><apiName>SkinnableContainerSkin</apiName><shortdesc>Die standardmäßige Skinklasse für einen Spark-SkinnableContainer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für einen Spark-SkinnableContainer.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#SkinnableContainer"><linktext>spark.components.SkinnableContainer</linktext></link></related-links><apiConstructor id="spark.skins.spark:SkinnableContainerSkin:SkinnableContainerSkin"><apiName>SkinnableContainerSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SkinnableContainerSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der SkinnableContainer-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der SkinnableContainer-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:SkinnableContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarUpButtonSkin"><apiName>ScrollBarUpButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Nach-oben-Schaltfläche der Spark-ScrollBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Nach-oben-Schaltfläche der Spark-ScrollBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.supportClasses.xml#ScrollBarBase"><linktext>spark.components.supportClasses.ScrollBarBase</linktext></link><link href="spark.components.xml#HScrollBar"><linktext>spark.components.HScrollBar</linktext></link><link href="spark.components.xml#VScrollBar"><linktext>spark.components.VScrollBar</linktext></link></related-links><apiConstructor id="spark.skins.spark:ScrollBarUpButtonSkin:ScrollBarUpButtonSkin"><apiName>ScrollBarUpButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Definiert die Darstellung der Nach-oben-Schaltfläche in der ScrollBar-Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung der Nach-oben-Schaltfläche in der ScrollBar-Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:PanelSkin"><apiName>PanelSkin</apiName><shortdesc>Die standardmäßige Skinklasse für einen Spark-Panel-Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für einen Spark-Panel-Container.  
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Panel"><linktext>spark.components.Panel</linktext></link></related-links><apiConstructor id="spark.skins.spark:PanelSkin:PanelSkin"><apiName>PanelSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:PanelSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der PanelSkin-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der PanelSkin-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:contents"><apiName>contents</apiName><shortdesc>Enthält den vertikalen Stapel von Titelleisteninhalt und Steuerleiste.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Enthält den vertikalen Stapel von Titelleisteninhalt und Steuerleiste.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:controlBarGroup"><apiName>controlBarGroup</apiName><shortdesc conref="spark.components.Panel#controlBarGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Panel#controlBarGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Panel</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:titleDisplay"><apiName>titleDisplay</apiName><shortdesc conref="spark.components.Panel#titleDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.Panel#titleDisplay"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultButtonSkin"><apiName>DefaultButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark-DefaultButton-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkButtonSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark-DefaultButton-Komponente. Die DefaultButton-Komponente wird in Bedienfeldern wie Warnungen verwendet. Sie wird durch die defaultButton-Eigenschaft in einem Container definiert.  
</apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.controls.Alert.xml"><linktext>mx.controls.Alert</linktext></link></related-links><apiConstructor id="spark.skins.spark:DefaultButtonSkin:DefaultButtonSkin"><apiName>DefaultButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:FocusSkin"><apiName>FocusSkin</apiName><shortdesc>
  Definiert das „Glühen“ um Spark-Komponenten, wenn diese den Fokus haben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins.spark:HighlightBitmapCaptureSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Definiert das „Glühen“ um Spark-Komponenten, wenn diese den Fokus haben.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:FocusSkin:FocusSkin"><apiName>FocusSkin</apiName><shortdesc>
     Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
     Konstruktor.
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:FocusSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     
          </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     
          </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:FocusSkin:protected:borderWeight:get"><apiName>borderWeight</apiName><shortdesc>
      
          Anzahl an Pixeln für die Auffüllung um die Bitmap.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
          Anzahl an Pixeln für die Auffüllung um die Bitmap.
          
          </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarFirstButtonSkin"><apiName>ButtonBarFirstButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die erste Schaltfläche in einer Spark-ButtonBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkButtonSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die erste Schaltfläche in einer Spark-ButtonBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link></related-links><apiConstructor id="spark.skins.spark:ButtonBarFirstButtonSkin:ButtonBarFirstButtonSkin"><apiName>ButtonBarFirstButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:DropDownListButtonSkin"><apiName>DropDownListButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Ankerschaltfläche in einer Spark-DropDownList-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Ankerschaltfläche in einer Spark-DropDownList-Komponente.  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DropDownList"><linktext>spark.components.DropDownList</linktext></link><link href="spark.skins.spark.xml#DropDownListSkin"><linktext>spark.skins.spark.DropDownListSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:DropDownListButtonSkin:DropDownListButtonSkin"><apiName>DropDownListButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DropDownListButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Die in der Ankerschaltfläche angezeigte Pfeilgrafik.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Die in der Ankerschaltfläche angezeigte Pfeilgrafik.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:UITextFieldGridItemRenderer"><apiName>UITextFieldGridItemRenderer</apiName><shortdesc>
  Die UITextFieldGridItemRenderer-Klasse definiert einen einfachen und effizienten Elementrenderer, der eine einzelne Textbeschriftung anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><Exclude kind="style" name="layoutDirection"/><Exclude kind="property" name="layoutDirection"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>spark.components.gridClasses:IGridItemRenderer</apiBaseInterface><apiBaseInterface>mx.styles:IStyleClient</apiBaseInterface><apiBaseClassifier>mx.core:UITextField</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die UITextFieldGridItemRenderer-Klasse definiert einen einfachen und effizienten Elementrenderer, der eine einzelne Textbeschriftung anzeigt. Für Anwendungen, die Rastersteuerelemente mit zahlreichen sichtbaren Zellen anzeigen, bietet dieser Renderer unter Microsoft Windows optimale Leistung. Es basiert auf TextField, nicht auf der Flash Text Engine (FTE); daher unterstützt es einige Spark-Textfunktionen sowie FTE-spezifische Textstile nicht.
 
  <p>Sie können den Beschriftungstextumbruch regeln, indem Sie die <codeph>wordWrap</codeph>-Eigenschaft verwenden. Beispiel: Wenn Sie <codeph>wordWrap="false"</codeph> und <codeph>variableRowHeight="false"</codeph> festlegen, werden Zellen mit fester Höhe erstellt, deren Beschriftungen nicht umbrochen werden. Wenn Sie die <codeph>wordWrap</codeph>-Eigenschaft nicht explizit festlegen, wird für <codeph>wordWrap</codeph> der Wert der <codeph>variableRowHeight</codeph>-Eigenschaft des Rasters festgelegt.</p>
 
  <p>UITextFieldGridItemRenderer übernimmt den Wert der <codeph>layoutDirection</codeph>-Eigenschaft vom übergeordneten Element. Sie sollte nicht direkt für UITextFieldGridItemRenderer festgelegt werden.</p> 
 
  <p>Die UITextFieldGridItemRenderer-Klasse ist nicht dafür konzipiert, untergeordnet oder kopiert zu werden. Erstellt benutzerdefinierte Elementrenderer basierend auf der GridItemRenderer-Klasse.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DataGrid"><linktext>spark.components.DataGrid</linktext></link><link href="spark.components.gridClasses.xml#GridItemRenderer"><linktext>spark.components.gridClasses.GridItemRenderer</linktext></link><link href="spark.skins.spark.xml#DefaultGridItemRenderer"><linktext>spark.skins.spark.DefaultGridItemRenderer</linktext></link><link href="mx.core.xml#FTETextField"><linktext>mx.core.FTETextField</linktext></link></related-links><adobeApiEvent id="spark.skins.spark:UITextFieldGridItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die bindbare Dateneigenschaft ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die bindbare <codeph>data</codeph>-Eigenschaft ändert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.skins.spark:UITextFieldGridItemRenderer:UITextFieldGridItemRenderer"><apiName>UITextFieldGridItemRenderer</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:UITextFieldGridItemRenderer:discard"><apiName>discard</apiName><shortdesc>
      
      Wird von der updateDisplayList()-Methode des übergeordneten Elements des Elementrenderers aufgerufen, sobald bestimmt wurde, dass dieser Renderer nicht mehr sichtbar sein wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>hasBeenRecycled</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn dieser Renderer der internen freien Liste des Eigentümers zur Wiederverwendung hinzugefügt wird.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird von der <codeph>updateDisplayList()</codeph>-Methode des übergeordneten Elements des Elementrenderers aufgerufen, sobald bestimmt wurde, dass dieser Renderer nicht mehr sichtbar sein wird. Wenn der <codeph>willBeRecycled</codeph>-Parameter <codeph>true</codeph> ist, fügt der Eigentümer diesen Renderer seiner internen freien Liste zur Wiederverwendung hinzu. Implementierungen können mit dieser Methode alle Renderer-Eigenschaften löschen, die nicht mehr benötigt werden.
     
      <p>Diese Methode wird nicht direkt aufgerufen. Wird von der DataGrid-Implementierung aufgerufen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.skins.spark:UITextFieldGridItemRenderer:prepare"><apiName>prepare</apiName><shortdesc>
      
      Wird von der updateDisplayList()-Methode des übergeordneten Elements des Elementrenderers aufgerufen, nachdem alle Eigenschaften des Renderers festgelegt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>willBeRecycled</apiItemName><apiType value="Boolean"/><apiDesc> <codeph>true</codeph>, wenn dieser Renderer wiederverwendet wird.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird von der <codeph>updateDisplayList()</codeph>-Methode des übergeordneten Elements des Elementrenderers aufgerufen, nachdem alle Eigenschaften des Renderers festgelegt wurden. Der <codeph>hasBeenRecycled</codeph>-Parameter ist <codeph>false</codeph>, wenn dieser Renderer noch nicht verwendet wurde, d. h. er wurde nicht wiederverwendet. Diese Methode wird aufgerufen, wenn ein Renderer sichtbar wird und jedes Mal, wenn er aufgrund einer Änderung einer Renderereigenschaft oder einer ausdrücklichen Anforderung erneut angezeigt wird. 
     
      <p>Diese Methode kann zum Konfigurieren aller visuellen Elemente und Eigenschaften eines Renderers verwendet werden. Diese Methode kann effizienter sein als die Einbindung von <codeph>data</codeph>-Eigenschaften in die Eigenschaften visueller Elemente. Hinweis: Da die <codeph>prepare</codeph>-Methode oft aufgerufen wird, achten Sie darauf, dass sie effizient kodiert ist.</p>
     
      <p>Die <codeph>prepare()</codeph>-Methode kann viele Male aufgerufen werden, bevor die <codeph>discard()</codeph>-Methode aufgerufen wird.</p>
     
      <p>Diese Methode wird nicht direkt aufgerufen. Wird von der DataGrid-Implementierung aufgerufen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:columnIndex:get"><apiName>columnIndex</apiName><shortdesc>
      
      Die Spaltenindexposition der Zelle dieses Elementrenderers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      
      Die Spaltenindexposition der Zelle dieses Elementrenderers. Dieser Wert entspricht <codeph>column.columnIndex</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:column:get"><apiName>column</apiName><shortdesc>
      
      Das GridColumn-Objekt, das die mit diesem Elementrenderer verknüpfte Spalte darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="columnChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.components.gridClasses:GridColumn</apiValueClassifier><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      
      Das GridColumn-Objekt, das die mit diesem Elementrenderer verknüpfte Spalte darstellt.  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Der Wert des Datenproviderelements für die gesamte Zeile des Rastersteuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Wert des Datenproviderelements für die gesamte Zeile des Rastersteuerelements. Elementrenderer binden Elementattribute oft an Eigenschaften dieses Objekts.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:down:get"><apiName>down</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von prepare() fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="downChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.   </p>
     
      
      Diese Eigenschaft ist auf <codeph>true</codeph> gesetzt, wenn eine von zwei Eingabeaktionen in einer Rasterzelle erfolgt: Drücken der Maustaste oder Tippen auf den Touchscreen. Die <codeph>down</codeph>-Eigenschaft wird auf <codeph>false</codeph> zurückgesetzt, wenn die Maustaste losgelassen wird, der Benutzer den Finger vom Touchscreen nimmt oder der Mauszeiger/der Finger aus der Rasterzelle gezogen wird.   
     
      <p>Im Gegensatz zu Renderern für Listenelemente sind nicht ausschließlich die Renderer für Rasterelemente dafür zuständig, den Down-Indikator anzuzeigen. Das Raster selbst stellt den Down-Indikator für die ausgewählte Zeile oder Zelle dar. Der Elementrenderer kann auch seine visuellen Eigenschaften ändern, um anzuzeigen, dass mit der Maus auf ihn gezeigt wird.</p>   
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:dragging:get"><apiName>dragging</apiName><shortdesc>
      
      Enthält „true“, wenn der Elementrenderer normalerweise als Teil eines Drag &amp; Drop-Vorgangs gezogen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="draggingChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      
      Enthält <codeph>true</codeph>, wenn der Elementrenderer normalerweise als Teil eines Drag &amp; Drop-Vorgangs gezogen wird. Zurzeit wird die Drag &amp; Drop-Funktion nicht vom Spark-DataGrid-Steuerelement unterstützt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:grid:get"><apiName>grid</apiName><shortdesc>
      Das mit diesem Elementrenderer verknüpfte Rastersteuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Grid</apiValueClassifier></apiValueDef><apiDesc>
      Das mit diesem Elementrenderer verknüpfte Rastersteuerelement.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:hovered:get"><apiName>hovered</apiName><shortdesc>
      Ist „true“, wenn die Maus auf den Elementrenderer zeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="hoveredChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Ist <codeph>true</codeph>, wenn die Maus auf den Elementrenderer zeigt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:label:get"><apiName>label</apiName><shortdesc>
      Das Rastersteuerelement setzt diese Eigenschaft auf den Wert der itemToLabel()-Methode der Spalte, bevor preprare() aufgerufen wird. Der String, der im Elementrenderer anzuzeigen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="labelChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""  
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Das Rastersteuerelement setzt diese Eigenschaft auf den Wert der <codeph>itemToLabel()</codeph>-Methode der Spalte, bevor <codeph>preprare()</codeph> aufgerufen wird.</p>
     
      
      Der String, der im Elementrenderer anzuzeigen ist.  
     
      <p>Die GridItemRenderer-Klasse kopiert automatisch den Wert dieser Eigenschaft in die <codeph>text</codeph>-Eigenschaft ihres <codeph>labelDisplay</codeph>-Elements, sofern das Element festgelegt wurde. Das Grid legt <codeph>label</codeph> auf den Wert fest, der von der <codeph>itemToLabel()</codeph>-Methode der Spalte zurückgegeben wird.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:rowIndex:get"><apiName>rowIndex</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von prepare() fest. Die auf null basierende Indexposition der Zeile der dargestellten Zelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="rowIndexChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.</p>
     
      
      Die auf null basierende Indexposition der Zeile der dargestellten Zelle.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:selected:get"><apiName>selected</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von prepare() fest. Enthält „true“, wenn die Zelle des Elementrenderers Teil der aktuellen Auswahl ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="selectedChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.</p>
     
      
      Enthält <codeph>true</codeph>, wenn die Zelle des Elementrenderers Teil der aktuellen Auswahl ist.
     
      <p> Im Gegensatz zu Renderern für Listenelemente sind nicht ausschließlich die Renderer für Rasterelemente zuständig, um anzuzeigen, dass sie Teil der Auswahl sind. Das Raster selbst zeigt automatisch den selectionIndicator-Skinteil für die ausgewählten Zeilen oder Zellen an. Der Elementrenderer kann auch seine visuellen Eigenschaften ändern, um hervorzuheben, dass er Teil der Auswahl ist.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:UITextFieldGridItemRenderer:showsCaret:get"><apiName>showsCaret</apiName><shortdesc>
      Die updateDisplayList()-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von preprare() fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.0"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="showsCaretChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      <p>Die <codeph>updateDisplayList()</codeph>-Methode des Rastersteuerelements legt diese Eigenschaft vor dem Aufrufen von <codeph>prepare()</codeph> fest.   </p>
     
      
      Enthält <codeph>true</codeph>, wenn die Zelle des Elementrenderers vom Einfügezeichen angezeigt wird.
     
      <p> Im Gegensatz zu Renderern für Listenelemente sind nicht ausschließlich die Renderer für Rasterelemente zuständig, etwas anzuzeigen, um darauf hinzuweisen, dass ihre Zellen oder Zeilen ein Einfügezeichen aufweisen. Das Raster selbst zeigt automatisch den caretIndicator-Skinteil für die Zeile oder Zelle mit dem Einfügezeichen an. Der Elementrenderer kann auch seine visuellen Eigenschaften ändern, um hervorzuheben, dass er die Einfügezeichen aufweist.</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderThumbSkin"><apiName>HSliderThumbSkin</apiName><shortdesc>Die standardmäßige Skinklasse für den Schieberegler einer Spark-HSlider-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für den Schieberegler einer Spark-HSlider-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#HSlider"><linktext>spark.components.HSlider</linktext></link></related-links><apiConstructor id="spark.skins.spark:HSliderThumbSkin:HSliderThumbSkin"><apiName>HSliderThumbSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ListSkin"><apiName>ListSkin</apiName><shortdesc>Die standardmäßige Skinklasse für eine Spark-List-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für eine Spark-List-Komponente.  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link></related-links><apiConstructor id="spark.skins.spark:ListSkin:ListSkin"><apiName>ListSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ListSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds einer listenbasierten Komponente.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds einer listenbasierten Komponente.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Definiert die Farbe des Hintergrunds.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Definiert die Farbe des Hintergrunds. Die Standardfarbe lautet 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:dropIndicator"><apiName>dropIndicator</apiName><shortdesc conref="spark.components.List#dropIndicator">Definiert das Aussehen des Dropindikators von „List“.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc conref="spark.components.List#dropIndicator">Definiert das Aussehen des Dropindikators von „List“. Erstellen Sie zum Anpassen der Darstellung des Dropindikators eine angepasste ListSkin-Klasse. Das Layout von „List“ ist für die Größenanpassung und Platzierung des dropIndicator zuständig. Die Größe des <codeph>dropIndicator</codeph> wird normalerweise auf die Größe der Lücken zwischen den Objekten festgelegt. Die Einstellungen bezüglich Minimum und Maximum werden normalerweise nur entlang der Hauptachse (Lückenachse) berücksichtigt. Beispielsweise ignoriert ein VerticalLayout die Einstellungen für <codeph>minWidth</codeph> und <codeph>maxWidth</codeph>, berücksichtigt jedoch <codeph>minHeight</codeph> und <codeph>maxHeight</codeph>. 
        
              </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:List</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:scroller"><apiName>scroller</apiName><shortdesc>Die Scroller-Komponente zum Hinzufügen von Bildlaufleisten zur Liste.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc>Die Scroller-Komponente zum Hinzufügen von Bildlaufleisten zur Liste.</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SkinnablePopUpContainerSkin"><apiName>SkinnablePopUpContainerSkin</apiName><shortdesc>Die standardmäßige Skinklasse für einen Spark-SkinnablePopUpContainer-Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für einen Spark-SkinnablePopUpContainer-Container.  
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#SkinnablePopUpContainer"><linktext>spark.components.SkinnablePopUpContainer</linktext></link></related-links><apiConstructor id="spark.skins.spark:SkinnablePopUpContainerSkin:SkinnablePopUpContainerSkin"><apiName>SkinnablePopUpContainerSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SkinnablePopUpContainerSkin:background"><apiName>background</apiName><shortdesc>Definiert die Darstellung des Hintergrunds der SkinnablePopUpContainer-Klasse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Definiert die Darstellung des Hintergrunds der SkinnablePopUpContainer-Klasse.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnablePopUpContainerSkin:chrome"><apiName>chrome</apiName><shortdesc>Definiert den Hintergrund und die Inhaltsgruppe, die von dieser Skin verwendet werden.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Definiert den Hintergrund und die Inhaltsgruppe, die von dieser Skin verwendet werden.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnablePopUpContainerSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnablePopUpContainerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:SkinnablePopUpContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TabBarSkin"><apiName>TabBarSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die Spark-TabBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die Spark-TabBar-Komponente. Die von TabBarSkin erstellten ButtonBarButtons verwenden die TabBarButtonSkin-Klasse.  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TabBar"><linktext>spark.components.TabBar</linktext></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link><link href="spark.skins.spark.xml#TabBarButtonSkin"><linktext>spark.skins.spark.TabBarButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:TabBarSkin:TabBarSkin"><apiName>TabBarSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TabBarSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TabBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarLastButtonSkin"><apiName>ButtonBarLastButtonSkin</apiName><shortdesc>Die standardmäßige Skinklasse für die letzte Schaltfläche in einer Spark ButtonBar-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkButtonSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Die standardmäßige Skinklasse für die letzte Schaltfläche in einer Spark ButtonBar-Komponente.  
       </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link></related-links><apiConstructor id="spark.skins.spark:ButtonBarLastButtonSkin:ButtonBarLastButtonSkin"><apiName>ButtonBarLastButtonSkin</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage>