<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.globalization.supportClasses"><apiName>spark.globalization.supportClasses</apiName><apiDetail/><apiClassifier id="spark.globalization.supportClasses:CollatorBase"><apiName>CollatorBase</apiName><shortdesc>
     CollatorBase est une classe de base pour les classes SortingCollator et MatchingCollator.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.globalization.supportClasses:GlobalizationBase</apiBaseClassifier></apiClassifierDef><apiDesc>
     <codeph>CollatorBase</codeph> est une classe de base pour les classes SortingCollator et MatchingCollator.
          <p>Cette classe est une classe d’enveloppe autour de la classe <codeph>flash.globalization.Collator</codeph>. Par conséquent, la comparaison de chaînes spécifiques aux paramètres régionaux est fournie par la classe <codeph>flash.globalization.Collator</codeph>. Toutefois, en utilisant cette classe comme classe de base, les classes <codeph>SortingCollator</codeph> et <codeph>MatchingCollator</codeph> peuvent être utilisées dans les déclarations MXML. Dans ces classes, le style <codeph>locale</codeph> est utilisé pour le nom d’identificateur de paramètres régionaux demandé et possède des méthodes et des propriétés qui sont liables.
     </p>
          <p>La classe flash.globalization.Collator utilise le système d’exploitation sous-jacent pour la fonctionnalité de formatage et pour fournir les données spécifiques aux paramètres régionaux. Sur certains systèmes d’exploitation, les classes flash.globalization ne sont pas prises en charge. Sur ces systèmes, la classe d’enveloppe fournit des fonctionnalités de secours pour la comparaison des chaînes.</p>
          </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.globalization.Collator.xml"><linktext>flash.globalization.Collator</linktext></link></related-links><apiConstructor id="spark.globalization.supportClasses:CollatorBase:CollatorBase"><apiName>CollatorBase</apiName><shortdesc>
          Construit un nouvel objet CollatorBase en vue d’effectuer des comparaisons de chaînes en fonction des conventions des paramètres régionaux spécifiés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>initialMode</apiItemName><apiType value="String"/><apiDesc>Définit les options de classement initial pour deux cas d’utilisation : le tri et la mise en correspondance.
                   </apiDesc></apiParam></apiConstructorDef><apiDesc>
          Construit un nouvel objet CollatorBase en vue d’effectuer des comparaisons de chaînes conformément aux conventions des paramètres régionaux spécifiés.
                   <p>Le paramètre <codeph>initialMode</codeph> définit les options de classement initial pour deux cas d’utilisation : le tri et la mise en correspondance. Il peut lui être affectée l’une des deux valeurs suivantes :</p>
                   <ul>
           <li><codeph>CollatorMode.SORTING</codeph> : définit les options de classement à des fins de tri linguistique général, comme par exemple le tri d’une liste de chaînes de caractères présentées à un utilisateur final. Dans ce mode, les différences entre majuscules et minuscules, caractères accentués et autres différences spécifiques aux paramètres régionaux sont prises en compte lors de la comparaison de chaînes.</li>
           <li><codeph>CollatorMode.MATCHING</codeph> : définit les options de classement à des fins telles que le fait de déterminer si deux chaînes sont équivalentes. Dans ce mode, les différences entre majuscules et minuscules, caractères accentués, etc., sont ignorées lors de la comparaison de chaînes.</li>
          </ul>
                   <p>Pour plus de détails et des exemples d’utilisation de ces deux modes, veuillez consulter la documentation relative à la classe <codeph>flash.globalization.Collator</codeph>.</p>
                   <p>Les paramètres régionaux pour cette classe sont fournis par le style <codeph>locale</codeph>. Le style <codeph>locale</codeph> peut être défini de plusieurs manières :</p>
                   <ul>
              <li>En héritant le style à partir d’un composant <codeph>UIComponent</codeph> en appelant la méthode <codeph>addStyleClient</codeph> du composant UIComponent avec une occurrence de cet objet comme paramètre.</li>
              <li>En utilisant la classe dans une déclaration MXML et en héritant le style <codeph>locale</codeph> à partir du document qui contient la déclaration.
          <pre>
          &lt;fx:Declarations>
                 &lt;s:SortingCollator id="collator" />
          &lt;/fx:Declarations>
          </pre>
          </li>
              <li>En utilisant une déclaration MXML et en spécifiant la valeur <codeph>locale</codeph> dans la liste des affectations.
          <pre>
          &lt;fx:Declarations>
              &lt;s:SortingCollator id="collator_german" locale="de-DE" />
          &lt;/fx:Declarations>
          </pre>
          </li>
              <li>En appelant la méthode setStyle, par ex. <codeph>collator.setStyle("locale", "de-DE")</codeph>.</li>
          </ul>
                   <p>Si le style <codeph>locale</codeph> n’est pas défini selon l’une des techniques ci-dessus, les méthodes de cette classe qui dépendent du style <codeph>locale</codeph><codeph> définissent la propriété lastOperationStatus sur spark.globalization.LastOperationStatus.LOCALE_UNDEFINED_ERROR</codeph>.</p>
                   </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.globalization.Collator.xml"><linktext>flash.globalization.Collator</linktext></link><link href="spark.globalization.xml#LastOperationStatus"><linktext>spark.globalization.LastOperationStatus</linktext></link></related-links></apiConstructor><apiOperation id="spark.globalization.supportClasses:CollatorBase:compare"><apiName>compare</apiName><shortdesc>
          Compare deux chaînes et renvoie un nombre entier indiquant si la première chaîne est inférieure, égale ou supérieure à la deuxième chaîne.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Nombre entier indiquant si la première chaîne est inférieure, égale ou supérieure à la deuxième chaîne.
                 <ul>
                     <li>Si la valeur renvoyée est négative, <codeph>string1</codeph> est inférieure à <codeph>string2</codeph> ou <codeph>string2</codeph> a la valeur <codeph>null</codeph>.</li>
                     <li>Si la valeur renvoyée est zéro, <codeph>string1</codeph> est égale à <codeph>string2</codeph>.</li>
                     <li>Si la valeur renvoyée est positive, <codeph>string1</codeph> est supérieure à <codeph>string2</codeph> ou <codeph>string1</codeph> a la valeur <codeph>null</codeph>.</li>
                 </ul>
                   </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>string1</apiItemName><apiType value="String"/><apiDesc>Première chaîne de comparaison.
          </apiDesc></apiParam><apiParam><apiItemName>string2</apiItemName><apiType value="String"/><apiDesc>Deuxième chaîne de comparaison.
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Compare deux chaînes et renvoie un nombre entier indiquant si la première chaîne est inférieure, égale ou supérieure à la deuxième chaîne. La comparaison utilise les règles de tri du style <codeph>locale</codeph> qui est en vigueur lorsque la méthode compare est appelée.
                   </apiDesc></apiOperationDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/CollatorBase()"><linktext>CollatorBase()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiOperation><apiOperation id="spark.globalization.supportClasses:CollatorBase:equals"><apiName>equals</apiName><shortdesc>
          Compare deux chaînes et renvoie une valeur booléenne indiquant si les chaînes sont égales.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Valeur booléenne indiquant si les chaînes sont égales (<codeph>true</codeph>) ou ne le sont pas (<codeph>false</codeph>).
                   </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>string1</apiItemName><apiType value="String"/><apiDesc>Première chaîne de comparaison.
          </apiDesc></apiParam><apiParam><apiItemName>string2</apiItemName><apiType value="String"/><apiDesc>Deuxième chaîne de comparaison.
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Compare deux chaînes et renvoie une valeur booléenne indiquant si les chaînes sont égales. La comparaison utilise les règles de tri de l’identificateur de paramètres régionaux spécifié dans le constructeur <codeph>CollatorBase()</codeph>.
                   </apiDesc></apiOperationDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/CollatorBase()"><linktext>CollatorBase()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/compare"><linktext>compare</linktext></link></related-links></apiOperation><apiOperation id="spark.globalization.supportClasses:CollatorBase:getAvailableLocaleIDNames"><apiName>getAvailableLocaleIDNames</apiName><shortdesc>
          Répertorie tous les noms des ID de paramètres régionaux pris en charge par cette classe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Vecteur de chaînes contenant tous les noms des identificateurs de paramètres régionaux pris en charge par cette classe et ce système d'exploitation.
                   </apiDesc><apiType value="Vector$String"/></apiReturn></apiOperationDef><apiDesc>
          Répertorie tous les noms des ID de paramètres régionaux pris en charge par cette classe.
                   </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.globalization.supportClasses:CollatorBase:actualLocaleIDName:get"><apiName>actualLocaleIDName</apiName><shortdesc>
          
      Nom de l’identificateur de paramètres régionaux utilisé par cet objet de classe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          
      Nom de l’identificateur de paramètres régionaux utilisé par cet objet de classe. Il s’agit des paramètres régionaux qui sont utilisés pour accéder à la fonctionnalité et aux données de formatage à partir du système d’exploitation. 
     
      <p>Si les paramètres régionaux définis par le style des <codeph>paramètres régionaux</codeph> ne sont pas disponibles, la valeur de la propriété <codeph>actualLocaleIDName</codeph> est différente de la valeur du style des <codeph>paramètres régionaux</codeph>. Elle indique les paramètres régionaux de secours qui sont utilisés. Si le style de paramètres régionaux a été défini sur <codeph>LocaleID.DEFAULT</codeph>, le nom des paramètres régionaux spécifié par le système d’exploitation de l’utilisateur est utilisé.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.globalization.Collator.actualLocaleIDName.xml"><linktext>flash.globalization.Collator.actualLocaleIDName</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/CollatorBase()"><linktext>CollatorBase()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreCase:get"><apiName>ignoreCase</apiName><shortdesc>
          Lorsque cette propriété est définie sur true, les chaînes identiques, ainsi que les chaînes dont l’unique différence réside dans la casse typographique, sont considérées comme égales.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Lorsque cette propriété est définie sur true, les chaînes identiques, ainsi que les chaînes dont l’unique différence réside dans la casse typographique, sont considérées comme égales.
                   <p>La valeur par défaut est <codeph>true</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.MATCHING</codeph>. La valeur est <codeph>false</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreCharacterWidth:get"><apiName>ignoreCharacterWidth</apiName><shortdesc>
          Lorsque cette propriété est définie sur true, les formes à pleine chasse et à demi-chasse de certains caractères chinois et japonais sont considérées comme égales.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Lorsque cette propriété est définie sur true, les formes à pleine chasse et à demi-chasse de certains caractères chinois et japonais sont considérées comme égales.
                   <p>Pour assurer la compatibilité avec les normes existantes relatives aux jeux de caractères chinois et japonais, Unicode fournit des codes de caractères pour certains caractères à pleine chasse et à demi-chasse. Par exemple, lorsque la propriété <codeph>ignoreCharacterWidth</codeph> est définie sur <codeph>true</codeph>, <codeph>compare("Ａｱ", "Aア")</codeph> renvoie <codeph> true</codeph>.</p>
                   <p>Si la propriété <codeph>ignoreCharacterWidth</codeph> est définie sur <codeph>false</codeph>, les caractères à pleine chasse et à demi-chasse ne sont pas égaux.</p>
                   <p>La valeur par défaut est <codeph>true</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.MATCHING</codeph>. La valeur est <codeph>false</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreDiacritics:get"><apiName>ignoreDiacritics</apiName><shortdesc>
          Lorsque cette propriété est définie sur true, les chaînes qui utilisent les mêmes caractères de base, mais des accents différents ou d’autres signes diacritiques, sont considérées comme égales.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Lorsque cette propriété est définie sur true, les chaînes qui utilisent les mêmes caractères de base, mais des accents différents ou d’autres signes diacritiques, sont considérées comme égales. Par exemple, <codeph>compare("coté", "côte")</codeph> renvoie <codeph>true</codeph> lorsque la propriété <codeph>ignoreDiacritics</codeph> est définie sur <codeph>true</codeph>.
                   <p>Lorsque la propriété <codeph>ignoreDiacritics</codeph> est définie sur <codeph>false</codeph>, les caractères de base possédant des signes diacritiques ou des accents ne sont pas considérés comme égaux.</p>
                            <p>La valeur par défaut est <codeph>true</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.MATCHING</codeph>. La valeur est <codeph>false</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreKanaType:get"><apiName>ignoreKanaType</apiName><shortdesc>
          Lorsque cette propriété est définie sur true, les chaînes dont l’unique différence réside dans le type de caractères kana utilisés sont considérées comme égales.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Lorsque cette propriété est définie sur true, les chaînes dont l’unique différence réside dans le type de caractères kana utilisés sont considérées comme égales. Par exemple, <codeph>compare("カナ", "かな")</codeph> renvoie <codeph>true</codeph> lorsque la propriété <codeph>ignoreKanaType</codeph> est définie sur <codeph>true</codeph>.
                   <p>Si la propriété <codeph>ignoreKanaType</codeph> est définie sur <codeph>false</codeph>, les caractères hiragana et katakana qui font référence à la même syllabe ne sont pas égaux.</p>
                   <p>La valeur par défaut est <codeph>true</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.MATCHING</codeph>. La valeur est <codeph>false</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:ignoreSymbols:get"><apiName>ignoreSymbols</apiName><shortdesc>
          Lorsque cette propriété est définie sur true, les caractères de symbole, tels qu’espaces, symboles de devises, symboles mathématiques et autres types de symboles, ne sont pas pris en compte lors du tri ou de la correspondance.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Lorsque cette propriété est définie sur true, les caractères de symbole, tels qu’espaces, symboles de devises, symboles mathématiques et autres types de symboles, ne sont pas pris en compte lors du tri ou de la correspondance. Par exemple, les chaînes "OBrian", "O’Brian" et "o Brian" sont toutes considérées comme égales lorsque la propriété <codeph>ignoreSymbols</codeph> est définie sur <codeph>true</codeph>.
                   <p>La valeur par défaut est <codeph>true</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.MATCHING</codeph>. La valeur est <codeph>false</codeph> lorsque le paramètre <codeph>initialMode</codeph> du constructeur <codeph>CollatorBase()</codeph> est défini sur <codeph>Collator.SORTING</codeph>.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:lastOperationStatus:get"><apiName>lastOperationStatus</apiName><shortdesc>
          
      Etat de la dernière opération que cet objet de classe a effectuée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          
      Etat de la dernière opération que cet objet de classe a effectuée. La propriété <codeph>lastOperationStatus</codeph> est définie chaque fois que le constructeur ou une méthode de cette classe est appelé, ou qu’une autre propriété est définie. Pour les valeurs disponibles, voir la description de chaque méthode.
     
     </apiDesc></apiValueDetail><related-links><link href="spark.globalization.xml#LastOperationStatus"><linktext>spark.globalization.LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="spark.globalization.supportClasses:CollatorBase:numericComparison:get"><apiName>numericComparison</apiName><shortdesc>
          Contrôle la manière dont les valeurs numériques intégrées aux chaînes sont gérées lors de la comparaison des chaînes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>&lt;code>false&lt;/code>
                   </apiDefaultValue></apiValueDef><apiDesc>
          Contrôle la manière dont les valeurs numériques intégrées aux chaînes sont gérées lors de la comparaison des chaînes.
                   <p>Lorsque la propriété <codeph>numericComparison</codeph> est définie sur <codeph>true</codeph>, la méthode de comparaison convertit les nombres figurant dans les chaînes en valeurs numériques en vue de le comparaison.</p>
                   <p>Lorsque cette propriété est définie sur <codeph>false</codeph><codeph>, la comparaison considère les nombres en tant que codes de caractères et les classe conformément aux règles de tri des caractères des paramètres régionaux spécifiés</codeph>.</p>
                   <p>Par exemple, lorsque cette propriété est définie sur true pour l’identificateur de paramètres régionaux "en-US", les chaînes "version1", "version10" et "version2" sont classées dans l’ordre suivant : version1 &lt; version2 &lt; version10.</p>
                   <p>Lorsque cette propriété est définie sur false pour "en-US", ces mêmes chaînes sont classées dans l’ordre suivant : version1 &lt; version10 &lt; version2.</p>
                   </apiDesc></apiValueDetail><related-links><link href="spark.globalization.supportClasses.xml#CollatorBase/compare()"><linktext>compare()</linktext></link><link href="spark.globalization.supportClasses.xml#CollatorBase/equals()"><linktext>equals()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.globalization.supportClasses:GlobalizationBase"><apiName>GlobalizationBase</apiName><shortdesc>
  Il s’agit d’une classe de base utilisée pour les classes d’enveloppe qui utilisent les classes flash.globalization pour le formatage spécifique à la langue et à la région des dates, des heures, des nombres et des montants en devise, ainsi que pour la comparaison de chaînes et la conversion de casse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion><styles><style inherit="yes" name="locale" owner="spark.globalization.supportClasses:GlobalizationBase" playerVersion="Flash10.1" type="String">
<description>
  Identificateur de paramètres régionaux qui spécifie la langue, la région, le script et éventuellement d’autres balises et touches associées. La syntaxe de cet identificateur doit suivre la syntaxe définie par la norme technique Unicode nº 35 (par ex., fr-FR, de-DE, zh-Hans-CN).
 
  </description>

<playerversion>AIR 2.5
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4.5
 </productversion></asCustoms></prolog><related-links><link href="http://www.unicode.org/reports/tr35/"><linktext>http://www.unicode.org/reports/tr35/</linktext></link></related-links></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.styles:AdvancedStyleClient</apiBaseClassifier></apiClassifierDef><apiDesc>
  Il s’agit d’une classe de base utilisée pour les classes d’enveloppe qui utilisent les classes flash.globalization pour le formatage spécifique à la langue et à la région des dates, des heures, des nombres et des montants en devise, ainsi que pour la comparaison de chaînes et la conversion de casse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.formatters.xml#CurrencyFormatter"><linktext>spark.formatters.CurrencyFormatter</linktext></link><link href="spark.formatters.xml#DateTimeFormatter"><linktext>spark.formatters.DateTimeFormatter</linktext></link><link href="spark.formatters.xml#NumberFormatter"><linktext>spark.formatters.NumberFormatter</linktext></link><link href="spark.globalization.xml#MatchingCollator"><linktext>spark.globalization.MatchingCollator</linktext></link><link href="spark.globalization.xml#SortingCollator"><linktext>spark.globalization.SortingCollator</linktext></link><link href="spark.globalization.xml#StringTools"><linktext>spark.globalization.StringTools</linktext></link></related-links><adobeApiEvent id="spark.globalization.supportClasses:GlobalizationBase_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  L’événement change est généré chaque fois que le style de paramètres régionaux est modifié ou qu’une autre propriété est définie qui entraînerait la modification du format d’un nombre ou la mise à jour des autres valeurs disponibles par le biais de cette classe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  L’événement change est généré chaque fois que le style de <codeph>paramètres régionaux</codeph> est modifié ou qu’une autre propriété est définie qui entraînerait la modification du format d’un nombre ou la mise à jour des autres valeurs disponibles par le biais de cette classe.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.globalization.supportClasses:GlobalizationBase:GlobalizationBase"><apiName>GlobalizationBase</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.globalization.supportClasses:GlobalizationBase:getStyle"><apiName>getStyle</apiName><shortdesc conref="mx.core.UIComponent#getStyle()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc conref="mx.core.UIComponent#getStyle()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.globalization.supportClasses:GlobalizationBase:actualLocaleIDName:get"><apiName>actualLocaleIDName</apiName><shortdesc>
      Nom de l’identificateur de paramètres régionaux utilisé par cet objet de classe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Nom de l’identificateur de paramètres régionaux utilisé par cet objet de classe. Il s’agit des paramètres régionaux qui sont utilisés pour accéder à la fonctionnalité et aux données de formatage à partir du système d’exploitation. 
     
      <p>Si les paramètres régionaux définis par le style des <codeph>paramètres régionaux</codeph> ne sont pas disponibles, la valeur de la propriété <codeph>actualLocaleIDName</codeph> est différente de la valeur du style des <codeph>paramètres régionaux</codeph>. Elle indique les paramètres régionaux de secours qui sont utilisés. Si le style de paramètres régionaux a été défini sur <codeph>LocaleID.DEFAULT</codeph>, le nom des paramètres régionaux spécifié par le système d’exploitation de l’utilisateur est utilisé.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.globalization.supportClasses:GlobalizationBase:lastOperationStatus:get"><apiName>lastOperationStatus</apiName><shortdesc>
      Etat de la dernière opération que cet objet de classe a effectuée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.1"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="change"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Etat de la dernière opération que cet objet de classe a effectuée. La propriété <codeph>lastOperationStatus</codeph> est définie chaque fois que le constructeur ou une méthode de cette classe est appelé, ou qu’une autre propriété est définie. Pour les valeurs disponibles, voir la description de chaque méthode.
     
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.globalization.LastOperationStatus.xml"><linktext>flash.globalization.LastOperationStatus</linktext></link></related-links></apiValue></apiClassifier></apiPackage>