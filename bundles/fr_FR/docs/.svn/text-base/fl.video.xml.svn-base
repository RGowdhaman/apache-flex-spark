<?xml version="1.0"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="fl.video"><apiName>fl.video</apiName><apiDetail/><apiClassifier id="fl.video:DVRManager"><apiName>DVRManager</apiName><shortdesc>
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 
	  
     
     </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:DVRManager:DVRManager"><apiName>DVRManager</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>nc</apiItemName><apiType value="flash.net:NetConnection"/><apiDesc>
		 
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
		  
         
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:DVRManager:checkInterval"><apiName>checkInterval</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
         
         </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>interval</apiItemName><apiType value="Number"/><apiDesc>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/><codeph/> 
         
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DVRManager:getStreamDuration"><apiName>getStreamDuration</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamName</apiItemName><apiType value="String"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         <codeph/> <codeph/> 
         
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:DVRManager:DVR_ERROR"><apiName>DVR_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dvrError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:DVR_EVENT"><apiName>DVR_EVENT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dvrEvent</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:DVR_STOP"><apiName>DVR_STOP</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dvrStop</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:currentDuration:get"><apiName>currentDuration</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		  
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:isRec:get"><apiName>isRec</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		   
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:nc:get"><apiName>nc</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc>
		  
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:offline:get"><apiName>offline</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:offset:get"><apiName>offset</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		  
         
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DVRManager:totalDuration:get"><apiName>totalDuration</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
           
		  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:NCManagerDynamicStream"><apiName>NCManagerDynamicStream</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>
     </apiTipText></apiTipTexts><apiBaseInterface>fl.video:INCManager</apiBaseInterface><apiBaseClassifier>fl.video:NCManager</apiBaseClassifier></apiClassifierDef><apiDesc>
	  
	 
	 <p/>
	 
     <codeblock rev="3.0">
     import fl.video.
     VideoPlayer.iNCManagerClass = fl.video.NCManagerDynamicStream;
     </codeblock>
	 
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#NCManager"><linktext>NCManager</linktext></link></related-links><apiConstructor id="fl.video:NCManagerDynamicStream:NCManagerDynamicStream"><apiName>NCManagerDynamicStream</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiTipTexts><apiTipText>
         </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
         
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:NCManagerDynamicStream:connectDynamicStream"><apiName>connectDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiType value=""/><apiDesc>
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		  
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:NCManagerDynamicStream:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version court du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version court du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManagerDynamicStream/VERSION"><linktext>Variable VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManagerDynamicStream:VERSION"><apiName>VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version long du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version long du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11. La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManagerDynamicStream/SHORT_VERSION"><linktext>Variable SHORT_VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManagerDynamicStream:streamLength:get"><apiName>streamLength</apiName><shortdesc>
		 Longueur du flux, en millisecondes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiTipTexts><apiTipText>Propriété streamLength
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Longueur du flux, en millisecondes. Lorsque la méthode <codeph>VideoPlayer.ncConnected()</codeph> est appelée et si elle renvoie undefined, <codeph>null</codeph> ou une valeur inférieure à 0, l'objet VideoPlayer ne dispose d'aucune information sur la longueur du flux. Si des informations sur la longueur du flux sont renvoyées, elles remplacent toutes les informations de flux existantes qui sont définies par le paramètre <codeph>totalTime</codeph> de la méthode <codeph>VideoPlayer.play()</codeph>, par la méthode <codeph>VideoPlayer.load()</codeph> ou toute autre information reçue à partir des métadonnées du fichier FLV.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamLength"><linktext>INCManager.streamLength</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:IVPEvent"><apiName>IVPEvent</apiName><shortdesc>
	 L'interface IVPEvent est mise en œuvre par les événements vidéo qui s'appliquent à un objet VideoPlayer au sein d'un composant FLVPlayback.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>Interface IVPEvent
     
     </apiTipText></apiTipTexts><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 L'interface IVPEvent est mise en œuvre par les événements vidéo qui s'appliquent à un objet VideoPlayer au sein d'un composant FLVPlayback. Lorsque plusieurs objets VideoPlayer sont utilisés au sein du composant FLVPlayback, chacun reçoit un index différent et ces index sont utilisés avec la propriété <codeph>visibleVideoPlayerIndex</codeph>, la propriété <codeph>activeVideoPlayerIndex</codeph> et la méthode <codeph>getVideoPlayer()</codeph>. Lorsqu'un événement est déclenché et est propre à un objet VideoPlayer unique, la classe event met en œuvre l'interface IVPEvent et la propriété <codeph>vp</codeph> reprend l'index de l'objet VideoPlayer concerné par l'événement.
     
     </apiDesc></apiClassifierDetail><apiValue id="fl.video:IVPEvent:fl.video:IVPEvent:type:get"><apiName>type</apiName><shortdesc>
         Type d’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/><apiTipTexts><apiTipText>type, propriété
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
         Type d’événement. Le type respecte la casse.
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:IVPEvent:fl.video:IVPEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/><apiTipTexts><apiTipText>Propriété vp
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:AutoLayoutEvent"><apiName>AutoLayoutEvent</apiName><shortdesc>
     Flash&amp;#xAE; Player distribue un objet AutoLayoutEvent lorsque le lecteur vidéo est redimensionné et disposé automatiquement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>fl.video:LayoutEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
     Flash<sup>®</sup> Player diffuse un objet AutoLayoutEvent lorsque le lecteur vidéo est redimensionné et disposé automatiquement. Le lecteur vidéo est disposé de façon automatique lorsque les propriétés <codeph>maintainAspectRatio</codeph> ou <codeph>autoSize</codeph> sont définies sur <codeph>true</codeph> ou lorsqu'un nouveau fichier FLV est chargé. 
     
     <p>Il n'existe qu'un seul type d'objet AutoLayoutEvent : <codeph>AutoLayoutEvent.AUTO_LAYOUT</codeph>.</p>
     
     <p>Lorsqu'une tentative de positionnement automatique d'un lecteur vidéo se produit, l'objet événement est distribué même si les dimensions n'ont pas été modifiées. </p>
     
     <p>Un objet <codeph>LayoutEvent</codeph> est également distribué dans le cadre des trois scénarios suivants :</p>
     <ul>
     <li>Le lecteur vidéo qui s'est mis en place est visible.</li>
     <li>Il existe deux lecteurs vidéo de taille ou position différente et si la propriété <codeph>visibleVideoPlayerIndex</codeph> passe d'un lecteur vidéo à l'autre.</li>
     <li>Si des méthodes ou des propriétés qui modifient la taille ou l'emplacement du lecteur vidéo sont appelées, telles que <codeph>setSize()</codeph>, <codeph>setScale()</codeph>, <codeph>width</codeph>, <codeph>height</codeph>, <codeph>scaleX</codeph>, <codeph>scaleY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph>.</li>
     </ul>
     
     <p>Lorsque plusieurs occurrences du lecteur vidéo sont en cours d'utilisation, l'événement risque de ne pas s'appliquer au lecteur vidéo visible.</p>
     
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#AutoLayoutEvent/AUTO_LAYOUT"><linktext>AUTO_LAYOUT</linktext></link></related-links><adobeApiEvent id="fl.video:AutoLayoutEvent:AUTO_LAYOUT_autoLayout"><apiName>autoLayout</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:AutoLayoutEvent:AUTO_LAYOUT</apiEventType><adobeApiEventClassifier>fl.video:AutoLayoutEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:autoLayout"><linktext>FLVPlayback.autoLayout</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:AutoLayoutEvent:AutoLayoutEvent"><apiName>AutoLayoutEvent</apiName><shortdesc>
         Crée un objet Event contenant des informations sur les événements autoLayout.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. l n’existe qu'un seul type d'événement de mise en forme automatique : <codeph>AutoLayoutEvent.AUTO_LAYOUT</codeph>.
         
         </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>bubbles</codeph> héritée.
         
         </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>cancelable</codeph> héritée.
         
         </apiDesc></apiParam><apiParam><apiItemName>oldBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Indique les valeurs des propriétés <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> et <codeph>height</codeph> de la cible avant l'occurrence de l'événement <codeph>autoLayout</codeph>. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>LayoutEvent.oldBounds</codeph>.
         
         </apiDesc></apiParam><apiParam><apiItemName>oldRegistrationBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Indique les valeurs des propriétés <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph> de la cible avant l'occurrence de l'événement <codeph>autoLayout</codeph>. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>LayoutEvent.oldRegistrationBounds</codeph>.
         
         </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Index de l'objet VideoPlayer impliqué dans cet événement.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Crée un objet Event contenant des informations sur les événements <codeph>autoLayout</codeph>. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
         
         </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#LayoutEvent/oldBounds"><linktext>LayoutEvent.oldBounds</linktext></link><link href="fl.video.xml#LayoutEvent/oldRegistrationBounds"><linktext>LayoutEvent.oldRegistrationBounds</linktext></link></related-links></apiConstructor><apiValue id="fl.video:AutoLayoutEvent:AUTO_LAYOUT"><apiName>AUTO_LAYOUT</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement autoLayout.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>autoLayout</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>autoLayout</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>oldBounds</codeph></entry><entry>Les valeurs des propriétés <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> et <codeph>height</codeph> de la cible avant l'occurrence de l'événement <codeph>autoLayout</codeph>.</entry></row><row><entry><codeph>oldRegistrationBounds</codeph></entry><entry>Les valeurs des propriétés <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph> de la cible avant l'occurrence de l'événement <codeph>autoLayout</codeph>.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:autoLayout"><linktext>FLVPlayback.autoLayout</linktext></link></related-links></apiValue><apiValue id="fl.video:AutoLayoutEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.
         
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/activeVideoPlayerIndex"><linktext>FLVPlayback.activeVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/visibleVideoPlayerIndex"><linktext>FLVPlayback.visibleVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/getVideoPlayer()"><linktext>FLVPlayback.getVideoPlayer()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:DynamicStreamItem"><apiName>DynamicStreamItem</apiName><shortdesc>
     
     </shortdesc><prolog><author>Adobe Systems Incorporated
     
     </author><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
     
       <codeph/> 
     
     </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:DynamicStreamItem:DynamicStreamItem"><apiName>DynamicStreamItem</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
           
		 <p> </p>
         <p><codeph/></p>
         
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:DynamicStreamItem:addStream"><apiName>addStream</apiName><shortdesc>
		  
         
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamName</apiItemName><apiType value="String"/><apiDesc>   <codeph/><codeph/>  <codeph/>
         
         </apiDesc></apiParam><apiParam><apiItemName>bitRate</apiItemName><apiType value="Number"/><apiDesc>   <codeph/>
		 
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		  
         
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:DynamicStreamItem:streams:get"><apiName>streams</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 <codeph/> <codeph/><codeph/><codeph/><codeph/><codeph/> 
         
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
         Flash&amp;#xAE; Player distribue un objet MetadataEvent lorsque l’utilisateur sollicite le paquet de métadonnées du fichier FLV (NetStream.onMetaData) et lorsque des points de repère (NetStream.onCuePoint) sont détectés dans le fichier FLV.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
         Flash<sup>®</sup> Player distribue un objet MetadataEvent lorsque l'utilisateur demande le paquet de métadonnées du fichier FLV (<codeph>NetStream.onMetaData</codeph> et lorsque des points de repère (<codeph>NetStream.onCuePoint</codeph>) surviennent dans le fichier FLV.
		 
		 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.net.xml#NetStream/event:onCuePoint"><linktext>Evénement NetStream.onCuePoint</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onMetaData"><linktext>Evénement NetStream.onMetaData</linktext></link></related-links><adobeApiEvent id="fl.video:MetadataEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:MetadataEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>fl.video:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:cuePoint"><linktext>Evénement cuePoint</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:MetadataEvent:METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:MetadataEvent:METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>fl.video:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:metadataReceived"><linktext>Evénement metadataReceived</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:MetadataEvent:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
		 Crée un objet événement contenant des informations sur les événements metadata.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. Les valeurs possibles sont <codeph>MetadataEvent.CUE_POINT</codeph> et <codeph>MetadataEvent.METADATA_RECEIVED</codeph>.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>bubbles</codeph> héritée.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>cancelable</codeph> héritée.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Détermine les propriétés dynamiques à ajouter.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Détermine l'index de l'objet VideoPlayer.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Crée un objet événement contenant des informations sur les événements metadata. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:MetadataEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
		 Définit la valeur de la propriété type d'un objet de l'événement cuePoint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Définit la valeur de la propriété <codeph>type</codeph> d'un objet de l'événement <codeph>cuePoint</codeph>.
		 
		 <p>Les propriétés de cet événement sont les suivantes :</p>
		 <adobetable class="innertable">
		     
		     
		     
		     
		     
		     
	         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>info</codeph></entry><entry>Objet disposant de propriétés qui décrivent le point de repère.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:cuePoint"><linktext>Evénement cuePoint</linktext></link></related-links></apiValue><apiValue id="fl.video:MetadataEvent:METADATA_RECEIVED"><apiName>METADATA_RECEIVED</apiName><shortdesc>
		 Définit la valeur de la propriété type d'un objet de l'événement metadataReceived.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>metadataReceived</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Définit la valeur de la propriété <codeph>type</codeph> d'un objet de l'événement <codeph>metadataReceived</codeph>.
		 
		 <p>Les propriétés de cet événement sont les suivantes :</p>
		 <adobetable class="innertable">
		     
		     
		     
		     
		     
		     
	         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>info</codeph></entry><entry>Objet disposant de propriétés qui décrivent le fichier FLV.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:metadataReceived"><linktext>Evénement metadataReceived</linktext></link></related-links></apiValue><apiValue id="fl.video:MetadataEvent:info:get"><apiName>info</apiName><shortdesc>
		 Objet dont les propriétés dynamiques sont ajoutées en fonction du type d'événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
		 Objet dont les propriétés dynamiques sont ajoutées en fonction du type d'événement.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.net.xml#NetStream/event:onCuePoint"><linktext>Evénement NetStream.onCuePoint</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onMetaData"><linktext>Evénement NetStream.onMetaData</linktext></link></related-links></apiValue><apiValue id="fl.video:MetadataEvent:vp:get"><apiName>vp</apiName><shortdesc>
		 Index de l'objet VideoPlayer impliqué dans cet événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Index de l'objet VideoPlayer impliqué dans cet événement.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/activeVideoPlayerIndex"><linktext>FLVPlayback.activeVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/visibleVideoPlayerIndex"><linktext>FLVPlayback.visibleVideoPlayerIndex</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/getVideoPlayer()"><linktext>FLVPlayback.getVideoPlayer()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:FMSCapabilities"><apiName>FMSCapabilities</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="fl.video:FMSCapabilities:FMSCapabilities"><apiName>FMSCapabilities</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>version</apiItemName><apiType value="String"/><apiData>2,0,0,0</apiData><apiDesc>        
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         <codeph/>  
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:FMSCapabilities:codecs:get"><apiName>codecs</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:dataStreamAccess:get"><apiName>dataStreamAccess</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:dvr:get"><apiName>dvr</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:dynamicStreaming:get"><apiName>dynamicStreaming</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:progressive:get"><apiName>progressive</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
           
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FMSCapabilities:version:get"><apiName>version</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoPlayer"><apiName>VideoPlayer</apiName><shortdesc>
	 La classe VideoPlayer permet de créer un lecteur vidéo avec un fichier SWF légèrement plus petit que si vous utilisiez le composant FLVPlayback.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>classe VideoPlayer
     
     </apiTipText></apiTipTexts><apiBaseClassifier>flash.media:Video</apiBaseClassifier></apiClassifierDef><apiDesc>
	 La classe VideoPlayer permet de créer un lecteur vidéo avec un fichier SWF légèrement plus petit que si vous utilisiez le composant FLVPlayback. <codeph/> 
	 
     <p>La classe FLVPlayback englobe la classe VideoPlayer. La classe FLVPlayback s'applique dans la quasi totalité des cas dans la mesure où aucune des fonctionnalités de la classe VideoPlayer ne sont accessibles à l'aide de la classe FLVPlayback.</p>
	 
	 <p> <codeph/><codeph/><codeph/> </p>
	 
	 <codeblock>var _forceNCManager:fl.video.NCManager;</codeblock>
	 
	 <p>La classe NCManager implémente une interface, INCManager, et peut être remplacée par une classe personnalisée pour gérer les communications réseau qui mettent cette interface en œuvre. Le cas échéant, vous devez inclure l'instruction suivante, en remplaçant NCManager par le nom de la classe que vous avez indiqué :</p>
	 
	 <codeblock>fl.video.VideoPlayer.iNCManagerClass = fl.video.NCManager;</codeblock>
	 
	 <p>Vous n'êtes pas tenu d'ajouter cette instruction si vous utilisez la classe NCManager par défaut.</p>
	 
     <p><b>Remarque </b>: vous pouvez également définir <codeph>iNCManagerClass</codeph> pour remplacer la valeur par défaut, fl.video.NCManager, lors de l'utilisation du composant FLVPlayback.</p>
	 
	 <p>NCManager prend en charge un sous-ensemble de SMIL afin de gérer plusieurs flux continus pour plusieurs bandes passantes.</p>
	 
	 </apiDesc><example conref="VideoPlayerExample.as"/></apiClassifierDetail><related-links><link href="fl.video.xml#NCManager"><linktext>NCManager</linktext></link><link href="" invalidHref="fl.video.FLVPlayback.xml"><linktext>FLVPlayback</linktext></link></related-links><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.UNSUPPORTED_PLAYER_VERSION_unsupportedPlayerVersion"><apiName>unsupportedPlayerVersion</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType/><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	  <codeph/>
	 
	 <p><codeph/><codeph/></p>
	 
     </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/UNSUPPORTED_PLAYER_VERSION"><linktext/></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.STATE_CHANGE_stateChange"><apiName>stateChange</apiName><shortdesc>
	 Distribué lorsque l'état de lecture est modifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.STATE_CHANGE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>événement stateChange
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué lorsque l'état de lecture est modifié. Lorsque l'appel <codeph>autoRewind</codeph> est terminé, l'événement <codeph>stateChange</codeph> est distribué avec l'état rewinding. L'événement <codeph>stateChange</codeph> ne se produit pas avant la fin du rembobinage. 
	 
	 <p>Il permet de procéder au suivi lorsque la lecture passe à un état réactif ou non réactif, comme par exemple au cours d'une connexion, d'un redimensionnement ou d'un rembobinage. Les méthodes <codeph>play()</codeph>, <codeph>pause()</codeph>, <codeph>stop()</codeph> et <codeph>seek()</codeph> placent les requêtes à exécuter en file d'attente lorsque le lecteur active un état non réactif.</p>
	 
	 <p>L'événement <codeph>stateChange</codeph> est de type VideoEvent et dispose de la constante <codeph>VideoEvent.STATE_CHANGE</codeph>.</p>
	 
     </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/STATE_CHANGE"><linktext>VideoEvent.STATE_CHANGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.AUTO_REWOUND_autoRewound"><apiName>autoRewound</apiName><shortdesc>
	 Distribué lorsque la tête de lecture est ramenée au début de la piste car la propriété autoRewind est définie sur True.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.AUTO_REWOUND</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>événement autoRewound
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué lorsque la tête de lecture est placée au début de la piste car la propriété <codeph>autoRewind</codeph> est définie sur <codeph>true</codeph>.
	 
	 <p>L'événement <codeph>autoRewound</codeph> est de type VideoEvent et dispose de la constante <codeph>VideoEvent.AUTO_REWOUND</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/AUTO_REWOUND"><linktext>VideoEvent.AUTO_REWOUND</linktext></link><link href="fl.video.xml#VideoPlayer/autoRewind"><linktext>autoRewind</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.LayoutEvent.LAYOUT_layout"><apiName>layout</apiName><shortdesc>
	 Distribué lorsque le lecteur vidéo est redimensionné ou redisposé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.LayoutEvent.LAYOUT</apiEventType><adobeApiEventClassifier>fl.video.LayoutEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>Evénement layout
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué lorsque le lecteur vidéo est redimensionné ou redisposé. Vous trouverez ci-dessous deux scénarios de disposition du lecteur :
	 <ul><li>si le lecteur vidéo est disposé à l'aide de l'événement <codeph>autoLayout</codeph> ou en appelant les méthodes <codeph>setScale()</codeph> ou <codeph>setSize()</codeph>, ou en modifiant les propriétés <codeph>width</codeph>, <codeph>height</codeph>, <codeph>scaleX</codeph> et <codeph>scaleY</codeph>.</li>
	 <li>s'il existe deux lecteurs vidéo de taille différente et si la propriété <codeph>visibleVideoPlayerIndex</codeph> passe de l'un à l'autre.</li>
	 </ul>  
	 
	 <p>L'événement <codeph>layout</codeph> est de type LayoutEvent et dispose de la constante <codeph>LayoutEvent.LAYOUT</codeph>.</p> 
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:autoLayout"><linktext>Evénement autoLayout</linktext></link><link href="fl.video.xml#LayoutEvent/LAYOUT"><linktext>LayoutEvent.LAYOUT</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/visibleVideoPlayerIndex"><linktext>FLVPlayback.visibleVideoPlayerIndex</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.READY_ready"><apiName>ready</apiName><shortdesc>
	 Evénement distribué lorsque le fichier FLV est chargé et prêt à s'afficher.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.READY</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>événement ready
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Evénement distribué lorsque le fichier FLV est chargé et prêt à s'afficher. Il est déclenché la première fois que vous entrez un état réactif après avoir chargé un nouveau fichier FLV avec la méthode <codeph>play()</codeph> ou <codeph>load()</codeph>. Il est déclenché une seule fois par fichier FLV chargé.
	 
	 <p>L'événement <codeph>ready</codeph> est de type VideoEvent et dispose de la constante <codeph>VideoEvent.READY</codeph>.</p> 
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link><link href="fl.video.xml#VideoEvent/READY"><linktext>VideoEvent.READY</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
	 Il indique la progression en nombre d’octets téléchargés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>fl.video.VideoProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>événement progress
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Il indique la progression en nombre d’octets téléchargés. Evénement distribué à la fréquence spécifiée par la propriété <codeph>progressInterval</codeph>, il se déclenche au début du chargement et se termine lorsque tous les octets sont chargés ou en cas d'erreur réseau. La valeur par défaut est une exécution toutes les 0,25 secondes, en commençant lorsque la méthode load est appelée et en se terminant lorsque tous les octets sont chargés ou en cas d'erreur réseau. Utilisez cet événement pour vérifier les octets chargés ou le nombre d’octets du tampon. 
	 
	 <p>Il est distribué uniquement s’il s’agit d’un téléchargement HTTP progressif. Indique la progression, en nombre d’octets téléchargés. L’objet d’événement dispose de propriétés <codeph>bytesLoaded</codeph> et <codeph>bytesTotal</codeph>., qui sont identiques aux propriétés FLVPlayback du même nom.</p>
	 
	 <p>L'événement <codeph>progress</codeph> est de type VideoProgressEvent et dispose de la constante <codeph>VideoProgressEvent.PROGRESS</codeph>.</p> 
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoPlayer/bytesLoaded"><linktext>bytesLoaded</linktext></link><link href="fl.video.xml#VideoPlayer/bytesTotal"><linktext>bytesTotal</linktext></link><link href="fl.video.xml#VideoProgressEvent/PROGRESS"><linktext>VideoProgressEvent.PROGRESS</linktext></link><link href="fl.video.xml#VideoPlayer/progressInterval"><linktext>progressInterval</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><shortdesc>
	 Distribué pendant la lecture du fichier FLV à la fréquence spécifiée par la propriété playheadUpdateInterval ou lorsque la procédure de retour en début de fichier commence.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiDefaultValue>0.25
	 
	 </apiDefaultValue><apiTipTexts><apiTipText>événement change
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué pendant la lecture du fichier FLV à la fréquence spécifiée par la propriété <codeph>playheadUpdateInterval</codeph> ou lorsque la procédure de retour en début de fichier commence. Le composant ne distribue pas cet événement lorsque le lecteur vidéo est en pause ou arrêté, à moins qu'une recherche n'ait lieu. 
	 
	 <p>L'événement <codeph>playheadUpdate</codeph> est de type VideoEvent et dispose de la constante <codeph>VideoEvent.PLAYHEAD_UPDATE</codeph>.</p> 
     
     </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/PLAYHEAD_UPDATE"><linktext>VideoEvent.PLAYHEAD_UPDATE</linktext></link><link href="fl.video.xml#VideoPlayer/playheadUpdateInterval"><linktext>playheadUpdateInterval</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.MetadataEvent.METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><shortdesc>
	 Distribué la première fois que les métadonnées du fichier FLV sont atteintes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.MetadataEvent.METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>fl.video.MetadataEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>Evénement metadataReceived
	 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué la première fois que les métadonnées du fichier FLV sont atteintes. L’objet événement possède une propriété <codeph>info</codeph> qui contient l’objet info reçu par le rappel de l’événement <codeph>NetStream.onMetaData</codeph>.
	 
	 <p>L'événement <codeph>metadataReceived</codeph> est de type MetadataEvent et comporte la constante <codeph>MetadataEvent.METADATA_RECEIVED</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#MetadataEvent/METADATA_RECEIVED"><linktext>MetadataEvent.METADATA_RECEIVED</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onMetaData"><linktext>Evénement NetStream.onMetaData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.MetadataEvent.CUE_POINT_cuePoint"><apiName>cuePoint</apiName><shortdesc>
	 Distribué lorsqu'un point de repère est atteint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.MetadataEvent.CUE_POINT</apiEventType><adobeApiEventClassifier>fl.video.MetadataEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>Evénement cuePoint
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué lorsqu'un point de repère est atteint. L'objet événement possède une propriété <codeph>info</codeph> qui contient l'objet info reçu par le rappel de l'événement <codeph>NetStream.onCuePoint</codeph> pour les points de repère du fichier FLV. S'il s'agit de points de repère ActionScript, il contient l'objet transmis aux méthodes ou aux propriétés de points de repère ActionScript.
	 
	 <p>L'événement <codeph>cuePoint</codeph> est de type MetadataEvent et comporte la constante <codeph>MetadataEvent.CUE_POINT</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#MetadataEvent/CUE_POINT"><linktext>MetadataEvent.CUE_POINT</linktext></link><link href="" invalidHref="flash.net.xml#NetStream/event:onCuePoint"><linktext>Evénement NetStream.onCuePoint</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
	 Distribué à la fin de la lecture, car le lecteur a atteint la fin du fichier FLV.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.COMPLETE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>événement complete
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué à la fin de la lecture car le lecteur a atteint la fin du fichier FLV. Le composant ne distribue pas l’événement si vous appelez les méthodes <codeph>stop()</codeph> ou <codeph>pause()</codeph>, ou si vous cliquez sur les commandes correspondantes. 
	 
	 <p>Lorsque l'application a recours au téléchargement progressif, elle ne définit pas la propriété <codeph>totalTime</codeph> de façon explicite, et elle télécharge un fichier FLV qui ne spécifie pas la durée dans les métadonnées. Le lecteur vidéo définit la propriété <codeph>totalTime</codeph> sur une valeur totale approximative avant de diffuser cet événement.</p>
	 
	 <p>Le lecteur vidéo distribue également les événements <codeph>stateChange</codeph> et <codeph>stopped</codeph>.</p>
	 
	 <p>L'événement <codeph>complete</codeph> est de type VideoEvent et dispose de la constante <codeph>VideoEvent.COMPLETE</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoPlayer/event:stateChange"><linktext>événement stateChange</linktext></link><link href="fl.video.xml#VideoPlayer/stop()"><linktext>stop()</linktext></link><link href="fl.video.xml#VideoPlayer/pause()"><linktext>pause()</linktext></link><link href="fl.video.xml#VideoPlayer/totalTime"><linktext>totalTime</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoPlayer_fl.video.VideoEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
	 Distribué par l'occurrence de VideoPlayer à la fermeture de NetConnection, en faisant expirer le délai ou par un appel de la méthode close(), ou lorsque vous appelez les méthodes load() ou play() ou définissez la propriété source et provoquez la fermeture de la connexion RTMP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video.VideoEvent.CLOSE</apiEventType><adobeApiEventClassifier>fl.video.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>événement close
     </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
	 Distribué par l'occurrence VideoPlayer à la fermeture de NetConnection, en faisant expirer le délai ou via un appel à la méthode <codeph>closeVideoPlayer()</codeph>, ou lorsque vous appelez les méthodes <codeph>load()</codeph> ou <codeph>play()</codeph> ou définissez la propriété <codeph>source</codeph>, ce qui entraîne la fermeture de la connexion RTMP. L'occurrence de FLVPlayback ne distribue cet événement que lorsque le flux provient de Flash Media Server (FMS) ou d'un autre service FVSS (Flash Video Streaming Service). 
	 
	 <p>L'événement <codeph>close</codeph> est de type VideoEvent et dispose de la constante <codeph>VideoEvent.CLOSE</codeph>.</p>
	 
 	 </apiDesc></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoEvent/CLOSE"><linktext>VideoEvent.CLOSE</linktext></link><link href="fl.video.xml#VideoPlayer/close()"><linktext>close()</linktext></link><link href="fl.video.xml#VideoPlayer/source"><linktext>source</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:VideoPlayer:VideoPlayer"><apiName>VideoPlayer</apiName><shortdesc>
		 Crée un objet VideoPlayer avec une largeur et une hauteur spécifiées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>width</apiItemName><apiType value="int"/><apiData>320</apiData><apiDesc>Largeur du lecteur vidéo, en pixels.
		 </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="int"/><apiData>240</apiData><apiDesc>Hauteur du lecteur vidéo, en pixels.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Crée un objet VideoPlayer avec une largeur et une hauteur spécifiées.
		 
		 </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#INCManager"><linktext>INCManager</linktext></link><link href="fl.video.xml#NCManager"><linktext>NCManager</linktext></link></related-links></apiConstructor><apiOperation id="fl.video:VideoPlayer:flvplayback_internal:_playDynamicStream"><apiName>_playDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="flvplayback_internal"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>startTime</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>endTime</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>	 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:close"><apiName>close</apiName><shortdesc>
		 Impose la fermeture du flux vidéo et de la connexion à Flash Media Server.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Impose la fermeture du flux vidéo et de la connexion à Flash Media Server. Cette méthode déclenche l'événement <codeph>close</codeph>. Il est généralement inutile d'appeler cette méthode de façon directe, car le flux est arrêté par la fonctionnalité de délai de temporisation.
		 
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/idleTimeout"><linktext>idleTimeout</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:flvplayback_internal:handleDVRError"><apiName>handleDVRError</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="flvplayback_internal"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>e</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:load"><apiName>load</apiName><shortdesc>
		 Similaire à la méthode play(), mais provoque le chargement du fichier FLV sans lecture.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>Une chaîne d'URL pour le fichier FLV que vous devez charger. Si aucune valeur n'est transmise pour l'URL, une erreur est renvoyée avec le message <codeph>null URL sent to VideoPlayer.load</codeph>.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>totalTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Longueur du fichier FLV. Transmet 0, <codeph>null</codeph> ou undefined pour détecter automatiquement la longueur à partir des métadonnées, du serveur ou du code XML. 
		  
		 </apiDesc></apiParam><apiParam><apiItemName>isLive</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Cette valeur est <codeph>true</codeph> si vous procédez à une diffusion en continu à partir d'un serveur FMS. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Similaire à la méthode <codeph>play()</codeph>, mais provoque le chargement du fichier FLV sans lecture. Autoresizing se produit si nécessaire et si la première image du fichier FLV s'affiche. Une fois le chargement initial et la mise en forme automatique terminés, l'état devient <codeph>VideoState.PAUSED</codeph>.
		 
		 <p>Cette méthode accepte les mêmes paramètres que la méthode <codeph>play()</codeph>, mais vous ne pouvez pas appeler la méthode <codeph>load()</codeph> sans URL. Sinon, une erreur sera renvoyée. Si le lecteur vidéo est dans un état non réactif, la méthode <codeph>load()</codeph> place la requête dans une file d'attente.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:ncConnected"><apiName>ncConnected</apiName><shortdesc>
		 Appelé par INCManager lorsque la connexion est terminée ou a échoué après un appel à la méthode INCManager.connectToURL().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Appelé par INCManager lorsque la connexion est terminée ou a échoué après un appel à la méthode <codeph>INCManager.connectToURL()</codeph>. Si la connexion a échoué, définissez la propriété <codeph>INCManager.netConnection</codeph> sur <codeph>null</codeph> ou undefined avant de procéder à l'appel.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/ncReconnected()"><linktext>ncReconnected()</linktext></link><link href="fl.video.xml#INCManager/connectToURL()"><linktext>INCManager.connectToURL()</linktext></link><link href="fl.video.xml#NCManager/connectToURL()"><linktext>NCManager.connectToURL()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:ncReconnected"><apiName>ncReconnected</apiName><shortdesc>
		 Appelé par INCManager lorsque la reconnexion est terminée ou a échoué après un appel à la méthode INCManager.reconnect().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Appelé par INCManager lorsque la reconnexion est terminée ou a échoué après un appel à la méthode <codeph>INCManager.reconnect()</codeph>. Si la connexion échoue, définissez la propriété <codeph>INCManager.netconnection</codeph> sur <codeph>null</codeph> avant de l'appeler.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>ncConnected()</linktext></link><link href="fl.video.xml#INCManager/reconnect()"><linktext>INCManager.reconnect()</linktext></link><link href="fl.video.xml#NCManager/reconnect()"><linktext>NCManager.reconnect()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:pause"><apiName>pause</apiName><shortdesc>
		 Interrompt la lecture de la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Interrompt la lecture de la vidéo. Si la vidéo est interrompue ou arrêtée, n'a aucun effet. Pour relancer la lecture, appelez <codeph>play()</codeph>. Ne prend aucun paramètre.
		 
		 <p>Lorsque l'état du lecteur n'est pas réactif, la méthode <codeph>pause()</codeph> place la requête en file d'attente.</p>
		 
		 <p>Renvoie une exception si appelée alors qu'aucun flux n'est connecté. Utilisez l'événement <codeph>stateChange</codeph> et la propriété <codeph>connected</codeph> pour déterminer dans quelles situations l'appel de cette méthode est sûr.</p>
		 
         <p>Si le lecteur vidéo est en état arrêté, l'appel à la méthode <codeph>pause()</codeph> n'a aucun effet et le lecteur demeure dans cet état.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:play"><apiName>play</apiName><shortdesc>
		 Entraîne la lecture de la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Transmettez une chaîne d'URL si vous devez charger et lire un nouveau fichier FLV. Si vous avez déjà chargé un fichier FLV et souhaitez poursuivre sa lecture, transmettez <codeph>null</codeph>. 
		 
		 </apiDesc></apiParam><apiParam><apiItemName>totalTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Transmet la longueur du fichier FLV. Transmet <codeph>0</codeph> ou <codeph>NaN</codeph> pour détecter automatiquement la longueur à partir des métadonnées, du serveur ou du code XML. Si la propriété <codeph>INCManager.streamLength</codeph> n'a pas la valeur <codeph>0</codeph> ou <codeph>null</codeph> ou undefined lorsque la propriété <codeph>ncConnected</codeph> est appelée, cette valeur s'impose dans tous les cas.  
		 
		 </apiDesc></apiParam><apiParam><apiItemName>isLive</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Transmet <codeph>true</codeph> en cas de diffusion d'une source vidéo en direct de FCS. 
		 
		 </apiDesc></apiParam><apiTipTexts><apiTipText>Méthode play
		 
		 </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
		 Entraîne la lecture de la vidéo. Peut être appelé lorsque la vidéo est interrompue ou arrêtée ou lorsque la vidéo est déjà en cours de lecture. Appelle cette méthode sans argument pour lire une vidéo déjà chargée ou transmet une URL pour charger un nouveau flux.
		 
		 <p>Lorsque l'état du lecteur n'est pas réactif, la requête est placée en file d'attente.</p>
		 
		 <p>Renvoie une exception lorsque l'appel se fait sans argument lorsque aucun flux n'est connecté. Utilisez l'événement <codeph>stateChange</codeph> et la propriété <codeph>connected</codeph> pour déterminer dans quelles situations l'appel de cette méthode est sûr.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:play2"><apiName>play2</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiOperationClassifier>fl.video:DynamicStreamItem</apiOperationClassifier><apiDesc>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		   
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:playWhenEnoughDownloaded"><apiName>playWhenEnoughDownloaded</apiName><shortdesc>
		 Lit le fichier FLV lorsqu'une quantité suffisante de ce dernier est téléchargée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiTipTexts><apiTipText>Méthode playWhenEnoughDownloaded
		 
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
		 Lit le fichier FLV lorsqu'une quantité suffisante de ce dernier est téléchargée. Lorsque le fichier FLV est téléchargé ou si vous diffusez en continu à partir d'un serveur FMS, l'appel de la méthode <codeph>playWhenEnoughDownloaded()</codeph> est identique à celle de <codeph>play()</codeph>, sans paramètre. L'appel de cette méthode ne suspend pas la lecture. Par conséquent, il est recommandé d'appeler la méthode <codeph>pause()</codeph> au préalable.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:VideoPlayer:seek"><apiName>seek</apiName><shortdesc>
		 Recherche une heure donnée (en secondes) dans le fichier, avec une précision décimale allant jusqu'aux millisecondes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Si temps est &lt; 0 ou <codeph>NaN</codeph>.
         </apiDesc><apiItemName>VideoError</apiItemName><apiOperationClassifier>fl.video:VideoError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>time</apiItemName><apiType value="Number"/><apiDesc>Nombre qui indique l'heure, en secondes, à laquelle positionner la tête de lecture.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Recherche une heure donnée (en secondes) dans le fichier, avec une précision décimale allant jusqu'aux millisecondes. Lorsque la vidéo est en cours de lecture, la vidéo poursuit sa lecture à partir de ce point. Si la vidéo est interrompue, elle recherche ce point et reste interrompue. Si la vidéo est arrêtée, elle recherche ce point et active l'état paused. Sans effet sur les flux vidéo en direct.
		 
         <p>La propriété <codeph>playheadTime</codeph> peut ne pas avoir la valeur attendue immédiatement après l’appel aux méthodes de recherche ou la définition de la propriété <codeph>playheadTime</codeph> pour provoquer une recherche. S’il s’agit d’un téléchargement progressif, vous pouvez rechercher uniquement une image-clé. Ainsi une recherche vous amène à l’heure de la première image-clé après l’heure spécifiée.</p>
		 
		 <p><b>Remarque </b>: en cas de diffusion à flux continu, une recherche vous conduit toujours à l’heure exacte spécifiée même si le fichier FLV source n’y possède pas d’image-clé.</p>
		 
		 <p>La recherche est asynchrone. Ainsi si vous appelez une méthode de recherche ou définissez la propriété <codeph>playheadTime</codeph>, celle-ci<codeph> </codeph>n’est pas immédiatement mise à jour. Pour obtenir l’heure à la fin de la recherche, écoutez l’événement <codeph>seek</codeph>, qui ne se déclenche pas tant que la propriété <codeph>playheadTime</codeph> n’a pas été mise à jour.</p>
		 
		 <p>Renvoie une exception si appelée alors qu'aucun flux n'est connecté. Utilisez l'événement <codeph>stateChange</codeph> et la propriété <codeph>connected</codeph> pour déterminer dans quelles situations l'appel de cette méthode est sûr.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:setScale"><apiName>setScale</apiName><shortdesc>
		 Définit simultanément les propriétés scaleX et scaleY.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>scaleX</apiItemName><apiType value="Number"/><apiDesc>Nombre représentant le redimensionnement horizontal.
		 </apiDesc></apiParam><apiParam><apiItemName>scaleY</apiItemName><apiType value="Number"/><apiDesc>Nombre représentant le redimensionnement vertical.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Définit simultanément les propriétés <codeph>scaleX</codeph> et <codeph>scaleY</codeph>. La définition de <codeph>scaleX</codeph> ou <codeph>scaleY</codeph> déclenche de façon distincte deux événements <codeph>autolayout</codeph>, tandis que l'appel de la méthode <codeph>setScale()</codeph> déclenche uniquement l'événement <codeph>autolayout</codeph>. 
                 
		 <p>Lorsque la propriété <codeph>scaleMode</codeph> est définie sur <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> ou <codeph>VideoScaleMode.NO_SCALE</codeph>, l'appel de cette méthode déclenche immédiatement un événement <codeph>autolayout</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/scaleX"><linktext>scaleX</linktext></link><link href="fl.video.xml#VideoPlayer/scaleY"><linktext>scaleY</linktext></link><link href="fl.video.xml#VideoScaleMode/MAINTAIN_ASPECT_RATIO"><linktext>VideoScaleMode.MAINTAIN_ASPECT_RATIO</linktext></link><link href="fl.video.xml#VideoScaleMode/NO_SCALE"><linktext>VideoScaleMode.NO_SCALE</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:setSize"><apiName>setSize</apiName><shortdesc>
		 Définit simultanément les propriétés width et height.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>La largeur du lecteur vidéo.
		 </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>La hauteur du lecteur vidéo.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Définit simultanément les propriétés <codeph>width</codeph> et <codeph>height</codeph>. La définition de <codeph>width</codeph> ou <codeph>height</codeph> déclenche de façon distincte deux événements <codeph>autolayout</codeph>, tandis que l'appel de la méthode <codeph>setSize()</codeph> déclenche uniquement l'événement <codeph>autolayout</codeph>. 
		 
		 <p>Lorsque la propriété <codeph>scaleMode</codeph> est définie sur <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> ou <codeph>VideoScaleMode.NO_SCALE</codeph>, l'appel de cette méthode déclenche immédiatement un événement <codeph>autolayout</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/width"><linktext>width</linktext></link><link href="fl.video.xml#VideoPlayer/height"><linktext>height</linktext></link><link href="fl.video.xml#VideoScaleMode/MAINTAIN_ASPECT_RATIO"><linktext>VideoScaleMode.MAINTAIN_ASPECT_RATIO</linktext></link><link href="fl.video.xml#VideoScaleMode/NO_SCALE"><linktext>VideoScaleMode.NO_SCALE</linktext></link></related-links></apiOperation><apiOperation id="fl.video:VideoPlayer:stop"><apiName>stop</apiName><shortdesc>
		 Arrête la lecture de la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Arrête la lecture de la vidéo. Si <codeph>autoRewind</codeph> est défini sur <codeph>true</codeph>, revient à la première image. Si la vidéo est déjà arrêtée, n’a aucun effet. Pour relancer la lecture, appelez <codeph>play()</codeph>. Ne prend aucun paramètre.
		 
		 <p>Lorsque l'état du lecteur n'est pas réactif, la requête est placée en file d'attente.</p>
		 
		 <p>Renvoie une exception si appelée alors qu'aucun flux n'est connecté. Utilisez l'événement <codeph>stateChange</codeph> et la propriété <codeph>connected</codeph> pour déterminer dans quelles situations l'appel de cette méthode est sûr.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>stateResponsive</linktext></link><link href="fl.video.xml#VideoPlayer/autoRewind"><linktext>autoRewind</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiValue id="fl.video:VideoPlayer:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version court du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version court du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/VERSION"><linktext>Variable VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:VERSION"><apiName>VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version long du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version long du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11. La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/SHORT_VERSION"><linktext>Variable SHORT_VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:iNCManagerClass"><apiName>iNCManagerClass</apiName><shortdesc>
		 Pour que tous les objets VideoPlayer exploitent votre classe personnalisée en tant que mise en œuvre d'INCManager par défaut, définissez la propriété iNCManagerClass sur l'objet classe ou le nom de chaîne de votre classe personnalisée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>fl.video.NCManagerDynamicStream</apiData><apiType value="Object"/><apiDefaultValue>"fl.video.NCManager" as a string
		 
		 </apiDefaultValue><apiTipTexts><apiTipText>classe VideoPlayer
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Pour que tous les objets VideoPlayer exploitent votre classe personnalisée en tant que mise en œuvre d'INCManager par défaut, définissez la propriété <codeph>iNCManagerClass</codeph> sur l'objet classe ou le nom de chaîne de votre classe personnalisée. La classe FLVPlayback inclut la définition de la classe personnalisée, contrairement au lecteur vidéo.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:netStreamClientClass"><apiName>netStreamClientClass</apiName><shortdesc>
	Enregistre une classe personnalisée pour la propriété client de NetStream.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.115.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiType value="Object"/><apiException><apiDesc>Si cette propriété est définie sur une valeur non valide, l'erreur <codeph>VideoError.NETSTREAM_CLIENT_CLASS_UNSET</codeph> sera émise.
   </apiDesc><apiItemName>VideoError</apiItemName><apiOperationClassifier>fl.video:VideoError</apiOperationClassifier></apiException><apiDefaultValue>fl.video.VideoPlayerClient
   </apiDefaultValue></apiValueDef><apiDesc>
	Enregistre une classe personnalisée pour la propriété client de NetStream. Par défaut, <codeph>fl.video.VideoPlayerClient</codeph> est utilisée ; cette·classe gère les messages <codeph>onMetaData()</codeph> et <codeph>onCuePoint()</codeph>. Pour ajouter la gestion personnalisée des autres messages, tels que <codeph>onImageData()</codeph> et·<codeph>onTextData()</codeph>, vous pouvez créer votre propre classe et définir cette propriété sur cette·classe.
	
	<p>Le·constructeur de la classe doit accepter une occurrence de <codeph>VideoPlayer</codeph> comme seul paramètre et avoir une propriété ready booléenne. La valeur de cette propriété doit être <codeph>false</codeph> tant que le Client attend les messages de données qui doivent se trouver au début du fichier. Si le lecteur VideoPlayer effectue son rembobinage avant la réception de ces messages, ils risquent de n'être jamais reçus. Par défaut, <codeph>fl.video.VideoPlayerClient</codeph> renvoie <codeph>true</codeph> pour la propriété ready dès l'appel de <codeph>onMetaData()</codeph>.</p>
	
	<p>Vous pouvez définir la propriété sur l'objet de classe lui-même (comme dans l'exemple suivant) ou sur le nom de chaîne de la classe :</p>
	<codeblock>
        import fl.video.
        VideoPlayer.netStreamClientClass = MyCustomClient;
        </codeblock>
        <p>La définition sur le nom de chaîne de la classe ne suffit pas pour imposer la compilation de la classe dans le fichier SWF. La valeur par défaut est l'objet de classe <codeph>fl.video.VideoPlayerClient</codeph>, pas le nom de chaîne.</p>
	<p>Il est fortement conseillé que toute implémentation personnalisée soit une sous-classe de <codeph>fl.video.VideoPlayer</codeph>. Toute autre pratique risque de corrompre les métadonnées et la gestion des points de répère construite dans le lecteur VideoPlayer et le composant FLVPlayback.</p>
	
        
   </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:align:get"><apiName>align</apiName><shortdesc>
		 Indique comment la vidéo est affichée par rapport aux propriétés registrationX, registrationY, registrationWidth et registrationHeight.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>VideoAlign.CENTER
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Indique comment la vidéo s'affiche par rapport aux propriétés <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph>. La propriété <codeph>align</codeph> procède à cette mise en forme automatique lorsque la propriété <codeph>scaleMode</codeph> est définie sur <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> ou <codeph>VideoScaleMode.NO_SCALE</codeph>. La modification de cette propriété après le chargement d'un fichier FLV active immédiatement la mise en forme automatique. Les valeurs proviennent de la classe VideoAlign.
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>scaleMode</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:autoRewind:get"><apiName>autoRewind</apiName><shortdesc>
		 Valeur booléenne qui, si elle est définie sur true, provoque le rembobinage du fichier FLV jusqu'à l'image 1 lorsque la lecture s'arrête, soit parce que le lecteur a atteint la fin du flux, soit parce que la méthode stop() a été appelée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
         
         </apiDefaultValue></apiValueDef><apiDesc>
		 Valeur booléenne qui, si elle est définie sur <codeph>true</codeph>, provoque le rembobinage du fichier FLV jusqu'à l'image 1 lorsque la lecture s'arrête, soit parce que le lecteur a atteint la fin du flux, soit parce que la méthode <codeph>stop()</codeph> a été appelée. Cette propriété n'a aucune signification pour les flux en direct.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:bufferTime:get"><apiName>bufferTime</apiName><shortdesc>
		 Nombre de secondes à mettre en mémoire tampon avant de commencer la lecture d'un flux vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Nombre de secondes à mettre en mémoire tampon avant de commencer la lecture d'un flux vidéo. Pour la diffusion en continu des fichiers FLV sur RTMP, qui ne sont pas téléchargés et sont placés simplement en mémoire tampon, il peut être important d'augmenter la valeur par défaut qui est de 0,1. Pour les fichiers FLV téléchargés de façon progressive avec le protocole HTTP, l'augmentation de cette valeur aura peu d'effets, bien qu'elle puisse améliorer l'affichage d'une vidéo haute qualité sur un ordinateur plus ancien et plus lent.
		 
		 <p>Pour les vidéos préenregistrées (sans diffusion en direct), ne définissez pas la propriété <codeph>bufferTime</codeph> sur <codeph>0</codeph>, appliquez la valeur par défaut de cette propriété ou augmentez-la.</p>
		 
		 <p>Cette propriété n'indique pas la proportion du fichier FLV à télécharger avant de démarrer sa lecture.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/bufferTime"><linktext>FLVPlayback.bufferTime</linktext></link><link href="fl.video.xml#VideoPlayer/isLive"><linktext>isLive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
		 Nombre indiquant le degré de téléchargement en nombre d'octets pour un téléchargement HTTP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/><apiTipTexts><apiTipText>Nombre d'octets déjà chargés
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Nombre indiquant le degré de téléchargement en nombre d'octets pour un téléchargement HTTP. Renvoie la valeur 0 en cas d'absence de flux, lorsque le flux est de type FMS (Flash Media Server) ou si les informations ne sont pas encore disponibles. La valeur renvoyée est utile uniquement pour un téléchargement HTTP.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
		 Nombre total d'octets téléchargés pour un téléchargement HTTP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/><apiTipTexts><apiTipText>Nombre d'octets à charger
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Nombre total d'octets téléchargés pour un téléchargement HTTP. Renvoie la valeur -1 en cas d'absence de flux, lorsque le flux est de type FMS (Flash Media Server) ou si les informations ne sont pas encore disponibles. La valeur renvoyée est utile uniquement pour un téléchargement HTTP. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:dvrFixedDuration:get"><apiName>dvrFixedDuration</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		   
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrement"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrementVariance"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:dvrIncrement:get"><apiName>dvrIncrement</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		  
		  
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrementVariance"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:dvrIncrementVariance:get"><apiName>dvrIncrementVariance</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		   
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link><link href="fl.video.xml#VideoPlayer/dvrIncrement"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:dvrSnapToLive:get"><apiName>dvrSnapToLive</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		  
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:idleTimeout:get"><apiName>idleTimeout</apiName><shortdesc>
		 Temps écoulé (en millisecondes) avant que Flash mette fin à une connexion inactive à un serveur vidéo (tel que Flash Media Server) en raison de l'interruption ou de l'arrêt de la lecture.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Temps écoulé (en millisecondes) avant que Flash mette fin à une connexion inactive à un serveur vidéo (tel que Flash Media Server) en raison de l'interruption ou de l'arrêt de la lecture. Cette propriété n'a aucune incidence sur le téléchargement HTTP d'un fichier FLV.
		 
		 <p>Si cette propriété est définie lorsqu'un flux vidéo est déjà inactif, elle redémarre la période de délai d'attente avec la nouvelle valeur.</p>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:isDVR:get"><apiName>isDVR</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10.0.0.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/isDVR"><linktext/></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:isLive:get"><apiName>isLive</apiName><shortdesc>
		 Valeur booléenne définie sur true si le flux vidéo est en direct.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Valeur booléenne définie sur <codeph>true</codeph> si le flux vidéo est en direct. Cette propriété n'est efficace que si le flux provient d'un serveur vidéo, tel que Flash Media Server ou un autre service FVSS (Flash Video Streaming Service). La valeur de cette propriété est ignorée s'il s'agit d'un téléchargement HTTP.
		 
		 <p>Définit la propriété <codeph>isLive</codeph> sur <codeph>false</codeph> lors de l'envoi d'un flux vidéo pré-enregistré vers le lecteur vidéo et sur <codeph>true</codeph> lors de l'envoi de données en temps réel, telles qu'une diffusion en direct. Pour de meilleures performances, lorsque vous définissez la propriété <codeph>isLive</codeph> sur <codeph>false</codeph>, ne définissez pas la propriété <codeph>bufferTime</codeph> sur <codeph>0</codeph>.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/bufferTime"><linktext>bufferTime</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/isLive"><linktext>FLVPlayback.isLive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:isRTMP:get"><apiName>isRTMP</apiName><shortdesc>
		 Valeur booléenne définie sur true si le fichier FLV est en diffusion en flux continu (streaming) à partir d'un serveur FMS via RTMP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Valeur booléenne définie sur <codeph>true</codeph> si le fichier FLV est en diffusion en flux continu à partir d'un serveur FMS via RTMP. Sa valeur est définie sur <codeph>false</codeph> pour toute autre source de fichier FLV. 
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/isRTMP"><linktext>FLVPlayback.isRTMP</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:metadata:get"><apiName>metadata</apiName><shortdesc>
         Objet représentant un paquet de métadonnées reçu par un appel à la méthode de rappel NetSteam.onMetaData(), le cas échéant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
         Objet représentant un paquet de métadonnées reçu par un appel à la méthode de rappel <codeph>NetSteam.onMetaData()</codeph>, le cas échéant. Prêt lorsque l’événement <codeph>metadataReceived</codeph> est distribué.
		 
		 <p>Si le fichier FLV est codé à l’aide de l’encodeur de Flash 8, la propriété <codeph>metadata</codeph> contient les informations présentées ci-dessous. Les fichiers FLV plus anciens contiennent uniquement les valeurs <codeph>height</codeph>, <codeph>width</codeph> et <codeph>duration</codeph>.</p>
		 
		 <adobetable class="innertable">
		 	
		 		
		 		
		 
		 
 		 
 		 
 		 
 		 
		 
 		 
 		 
		 <tgroup cols="2"><thead><row><entry><b>Paramètre</b></entry><entry><b>Description</b></entry></row></thead><tbody><row><entry><codeph>canSeekToEnd</codeph></entry><entry>Valeur booléenne définie sur <codeph>true</codeph> si le fichier FLV est codé avec une image-clé sur la dernière image qui permet de rechercher jusqu’à la fin d’un clip téléchargé progressivement. Elle est définie sur <codeph>false</codeph> si le fichier FLV n’est pas codé avec une image-clé sur la dernière image.</entry></row><row><entry><codeph>cuePoints</codeph></entry><entry>Tableau d'objets (un par point de repère intégré dans le fichier FLV). Cette valeur n’est pas définie si le fichier FLV ne contient pas de points de repère. Chaque objet possède les propriétés ci-dessous.
	       	
		 			<ul>
		 				<li><codeph>type</codeph>—Chaîne qui spécifie le type de point de repère : "navigation" ou "event".</li>
		 				<li><codeph>name</codeph>—Chaîne représentant le nom du point de repère.</li>
		 				<li><codeph>time</codeph>—Nombre correspondant à l'heure du point de repère (en secondes) avec une précision de trois décimales (millisecondes).</li>
		 				<li><codeph>parameters</codeph>—Objet facultatif possédant des paires nom/valeur désignées par l'utilisateur au moment de la création des points de repère.</li>
		 			</ul>
		 		</entry></row><row><entry><codeph>audiocodecid</codeph></entry><entry>Nombre qui indique le codec audio (technique de codage/décodage) utilisé.</entry></row><row><entry><codeph>audiodelay</codeph></entry><entry> Nombre représentant le temps <codeph>0</codeph> dans le fichier source à partir duquel le fichier FLV a été encodé. 
		 <p>Le contenu vidéo est légèrement retardé pour que l’audio puisse être synchronisé. Par exemple, si la valeur <codeph>audiodelay</codeph> est <codeph>.038</codeph>, la vidéo qui commençait à <codeph>0</codeph> dans le fichier source commence à <codeph>.038</codeph> dans le fichier FLV.</p> 
		 <p>Notez que les classes FLVPlayback et VideoPlayer corrigent ce décalage dans leurs paramètres de temps. Vous pouvez donc conserver les paramètres que vous utilisiez dans le fichier source.</p>
</entry></row><row><entry><codeph>audiodatarate</codeph></entry><entry>Nombre indiquant les kilo-octets par seconde de l'audio.</entry></row><row><entry><codeph>videocodecid</codeph></entry><entry>Nombre indiquant la version codec utilisée pour coder la vidéo.</entry></row><row><entry><codeph>framerate</codeph></entry><entry>Nombre indiquant la fréquence d'images du fichier FLV.</entry></row><row><entry><codeph>videodatarate</codeph></entry><entry>Nombre indiquant la vitesse de transmission vidéo du fichier FLV.</entry></row><row><entry><codeph>height</codeph></entry><entry>Nombre indiquant la hauteur du fichier FLV.</entry></row><row><entry><codeph>width</codeph></entry><entry>Nombre indiquant la largeur du fichier FLV.</entry></row><row><entry><codeph>duration</codeph></entry><entry>Nombre indiquant la durée du fichier FLV en secondes.</entry></row></tbody></tgroup></adobetable>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/metadata"><linktext>FLVPlayback.metadata</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:ncMgr:get"><apiName>ncMgr</apiName><shortdesc>
		 Objet INCManager qui permet d'accéder à une occurrence de la classe implémentant INCManager, interface de la classe NCManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>fl.video:INCManager</apiValueClassifier></apiValueDef><apiDesc>
		 Objet INCManager qui permet d'accéder à une occurrence de la classe implémentant INCManager, interface de la classe <codeph>INCManager</codeph>.
		 
		 <p>Vous pouvez utiliser cette propriété pour mettre en œuvre un objet INCManager personnalisé qui requiert une initialisation personnalisée.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/ncMgr"><linktext>FLVPlayback.ncMgr</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:netConnection:get"><apiName>netConnection</apiName><shortdesc>
		 Permet d'accéder directement à l'occurrence de NetConnection créée par le lecteur vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc>
		 Permet d'accéder directement à l'occurrence de NetConnection créée par le lecteur vidéo.  
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:netStream:get"><apiName>netStream</apiName><shortdesc>
		 Permet d'accéder directement à l'occurrence de NetStream créée par le lecteur vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetStream"/></apiValueDef><apiDesc>
		 Permet d'accéder directement à l'occurrence de NetStream créée par le lecteur vidéo.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
		 Nombre représentant la durée de lecture (ou position de la tête de lecture) actuelle, mesurée en secondes, qui peut être une valeur décimale.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiTipTexts><apiTipText>Position actuelle de la tête de lecture, en secondes
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Nombre représentant la durée de lecture (ou position de la tête de lecture) actuelle, mesurée en secondes, qui peut être une valeur décimale. Lorsque vous définissez cette propriété, vous déclenchez une recherche et vous avez toutes les restrictions d'une recherche.
		 
		 <p>Lorsque la position de la tête de lecture change (une fois toutes les 0,25 secondes lors de la lecture du fichier FLV), le composant distribue l'événement <codeph>playheadUpdate</codeph>.</p>
		 
		 <p>La propriété <codeph>playheadTime</codeph> peut ne pas avoir la valeur attendue immédiatement après l'appel aux méthodes de recherche ou la définition de la propriété <codeph>playheadTime</codeph> pour provoquer une recherche. Tout d'abord, s'il s'agit d'un téléchargement progressif, vous pouvez rechercher uniquement une image-clé. Ainsi une recherche vous amène à l'heure de la première image-clé après l'heure spécifiée. (En cas de diffusion à flux continu, une recherche vous conduit toujours à l'heure exacte spécifiée même si le fichier FLV source n'y possède pas d'image-clé.) En second lieu, une recherche est asynchrone. Ainsi si vous appelez une méthode de recherche ou définissez la propriété <codeph>playheadTime</codeph>, celle-ci n'est pas immédiatement mise à jour. Pour déterminer le temps écoulé à la fin de la recherche, écoutez l'événement <codeph>seek</codeph>, qui ne se déclenche pas tant que la propriété <codeph>playheadTime</codeph> n'a pas été mise à jour.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/seek()"><linktext>seek()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/playheadTime"><linktext>FLVPlayback.playheadTime</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:playheadUpdateInterval:get"><apiName>playheadUpdateInterval</apiName><shortdesc>
		 Nombre représentant l'intervalle (en millisecondes) entre chaque événement playheadUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>250
         
         </apiDefaultValue></apiValueDef><apiDesc>
		 Nombre représentant l'intervalle (en millisecondes) entre chaque événement <codeph>playheadUpdate</codeph>. Lorsque vous définissez cette propriété pendant la lecture du fichier FLV, l'horloge redémarre. 
		 
		 <p>Etant donné que les points de repère ActionScript démarrent aux mises à jour de la tête de lecture, diminuer la valeur de la propriété <codeph>playheadUpdateInterval</codeph> peut améliorer la précision des points de repère ActionScript.</p>
		 
		 <p>Comme l'intervalle des mises à jour de la tête de lecture est défini par un appel à la méthode globale <codeph>setInterval()</codeph>, la mise à jour ne peut pas être déclenchée plus fréquemment que la fréquence d'images du fichier FLV, comme pour tout intervalle défini de cette façon. Par exemple, pour la fréquence par défaut de 12 images par seconde, l'intervalle efficace le plus petit que vous pouvez créer est approximativement de 83 millisecondes ou d'une seconde (1 000 millisecondes) divisée par 12.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/playheadUpdateInterval"><linktext>FLVPlayback.playheadUpdateInterval</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:progressInterval:get"><apiName>progressInterval</apiName><shortdesc>
		 Nombre représentant l'intervalle (en millisecondes) entre chaque événement progress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Nombre représentant l'intervalle (en millisecondes) entre chaque événement <codeph>progress</codeph>. Si vous définissez cette propriété pendant la lecture du flux vidéo, l'horloge redémarre. 
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:registrationHeight:get"><apiName>registrationHeight</apiName><shortdesc>
		 Hauteur utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Hauteur utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique. La propriété <codeph>registrationHeight</codeph> ne doit pas être confondue avec la propriété <codeph>height</codeph>. La propriété <codeph>height</codeph> reflète la hauteur réelle du contenu vidéo.
		 
		 <p>Exemple 1, chargement d'un fichier FLV de 80x80 avec les paramètres suivants :
		 <ul>
		 <li><codeph>registrationX</codeph> = 100</li> 
		 <li><codeph>registrationY</codeph> = 100</li>
		 <li><codeph>registrationWidth</codeph> = 60</li> 
		 <li><codeph>registrationHeight</codeph> = 40</li>
		 <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Ensuite, après le redimensionnement automatique, vous obtenez le résultat suivant :
		 <ul>
		 <li><codeph>x</codeph> = 90</li>
		 <li><codeph>y</codeph> = 80</li>
		 <li><codeph>width</codeph> = 80</li>
		 <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Exemple 2, charge le même scénario que l'exemple 1, à l'exception des paramètres suivants :
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Vous obtenez alors le résultat suivant :
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Exemple 3, charge le même scénario que l'exemple 2, à l'exception des paramètres suivants :
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Vous obtenez exactement les mêmes valeurs que les valeurs d'alignement :
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>La définition de la propriété <codeph>registrationHeight</codeph> est équivalente à la définition de la propriété <codeph>height</codeph> et inversement. La définition de toute autre propriété ou l'appel de toute méthode de modification de la hauteur, telle que <codeph>scaleX</codeph>, <codeph>setSize</codeph> et <codeph>setScale</codeph>. Assurez-vous également que <codeph>height</codeph> et <codeph>registrationHeight</codeph> restent synchronisés.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:registrationWidth:get"><apiName>registrationWidth</apiName><shortdesc>
		 Largeur utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Largeur utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique. La propriété <codeph>registrationWidth</codeph> ne doit pas être confondue avec la propriété <codeph>width</codeph>. La propriété <codeph>width</codeph> reprend la largeur réelle du contenu vidéo.
		 
		 <p>Exemple 1, chargement d'un fichier FLV de 80x80 avec les paramètres suivants :
		 <ul>
		 <li><codeph>registrationX</codeph> = 100</li> 
		 <li><codeph>registrationY</codeph> = 100</li>
		 <li><codeph>registrationWidth</codeph> = 60</li> 
		 <li><codeph>registrationHeight</codeph> = 40</li>
		 <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Ensuite, après le redimensionnement automatique, vous obtenez le résultat suivant :
		 <ul>
		 <li><codeph>x</codeph> = 90</li>
		 <li><codeph>y</codeph> = 80</li>
		 <li><codeph>width</codeph> = 80</li>
		 <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Exemple 2, charge le même scénario que l'exemple 1, à l'exception des paramètres suivants :
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Vous obtenez alors le résultat suivant :
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Exemple 3, charge le même scénario que l'exemple 2, à l'exception des paramètres suivants :
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Vous obtenez exactement les mêmes valeurs que les valeurs d'alignement :
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>La définition de la propriété <codeph>registrationWidth</codeph> est équivalente à la définition de la propriété <codeph>width</codeph> et inversement. La définition de toute autre propriété ou l'appel de toute méthode de modification de la largeur, telle que <codeph>scaleX</codeph> , <codeph>setSize</codeph> et <codeph>setScale</codeph>. Assurez-vous également que <codeph>width</codeph> et <codeph>registrationWidth</codeph> restent synchronisés.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:registrationX:get"><apiName>registrationX</apiName><shortdesc>
		 Coordonnée x utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Coordonnée x utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique. A ne pas confondre avec la propriété <codeph>x</codeph>, qui dépend de l'emplacement réel du contenu vidéo.
		 
		 <p>Exemple 1, chargement d'un fichier FLV de 80x80 avec les paramètres suivants :
		 <ul>
		     <li><codeph>registrationX</codeph> = 100</li> 
		     <li><codeph>registrationY</codeph> = 100</li>
		     <li><codeph>registrationWidth</codeph> = 60</li> 
		     <li><codeph>registrationHeight</codeph> = 40</li>
		     <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		     <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Ensuite, après le redimensionnement automatique, vous obtenez le résultat suivant :
		 <ul>
             <li><codeph>x</codeph> = 90</li>
             <li><codeph>y</codeph> = 80</li>
             <li><codeph>width</codeph> = 80</li>
             <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Exemple 2, charge le même scénario que l'exemple 1, à l'exception des paramètres suivants :
		 <ul>
		     <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Vous obtenez alors le résultat suivant :
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Exemple 3, charge le même scénario que l'exemple 2, à l'exception des paramètres suivants :
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Vous obtenez exactement les mêmes valeurs que les valeurs d'alignement :
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>Lorsque la propriété <codeph>x</codeph> ou <codeph>registrationX</codeph> est définie, la deuxième propriété est modifiée pour préserver son décalage par rapport à la première. Par exemple, si <codeph>x</codeph> = 10 et <codeph>registrationX</codeph> = 20, la sélection de <codeph>x</codeph> = 110 définit également <codeph>registrationX</codeph> = 120.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationY"><linktext>registrationY</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:registrationY:get"><apiName>registrationY</apiName><shortdesc>
		 Coordonnée y utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Coordonnée y utilisée pour aligner le contenu vidéo lors d'un redimensionnement automatique. A ne pas confondre avec la propriété <codeph>y</codeph>, qui dépend de l'emplacement réel du contenu vidéo.
		 
		 <p>Exemple 1, chargement d'un fichier FLV de 80x80 avec les paramètres suivants :
		 <ul>
		 <li><codeph>registrationX</codeph> = 100</li> 
		 <li><codeph>registrationY</codeph> = 100</li>
		 <li><codeph>registrationWidth</codeph> = 60</li> 
		 <li><codeph>registrationHeight</codeph> = 40</li>
		 <li><codeph>align</codeph> = <codeph>VideoAlign.CENTER</codeph></li> 
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.NO_SCALE</codeph></li>
		 </ul>
		 
		 
		 Ensuite, après le redimensionnement automatique, vous obtenez le résultat suivant :
		 <ul>
		 <li><codeph>x</codeph> = 90</li>
		 <li><codeph>y</codeph> = 80</li>
		 <li><codeph>width</codeph> = 80</li>
		 <li><codeph>height</codeph> = 80</li>  
		 </ul>
		 </p>
		 
		 <p>Exemple 2, charge le même scénario que l'exemple 1, à l'exception des paramètres suivants :
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph></li>
		 </ul>
		 
		 Vous obtenez alors le résultat suivant :
		 <ul>
		 <li><codeph>x</codeph> = 110</li>
		 <li><codeph>y</codeph> = 100</li> 
		 <li><codeph>width</codeph> = 40</li> 
		 <li><codeph>height</codeph> = 80</li>
		 </ul>
		 </p>
		 
		 <p>Exemple 3, charge le même scénario que l'exemple 2, à l'exception des paramètres suivants :
		 <ul>
		 <li><codeph>scaleMode</codeph> = <codeph>VideoScaleMode.EXACT_FIT</codeph></li>
		 </ul>
		 
		 Vous obtenez exactement les mêmes valeurs que les valeurs d'alignement :
		 <ul>
		 <li><codeph>x</codeph> = 100</li> 
		 <li><codeph>y</codeph> = 100</li>
		 <li><codeph>width</codeph> = 60</li> 
		 <li><codeph>height</codeph> = 40</li>
		 </ul>
		 </p>
		 
		 <p>Lorsque la propriété <codeph>y</codeph> ou <codeph>registrationY</codeph> est définie, la deuxième propriété est modifiée pour préserver son décalage par rapport à la première. Par exemple, si <codeph>y</codeph> = 10 et <codeph>registrationy</codeph> = 20, la sélection de <codeph>y</codeph> = 110 définit également <codeph>registrationy</codeph> = 120.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/registrationX"><linktext>registrationX</linktext></link><link href="fl.video.xml#VideoPlayer/registrationWidth"><linktext>registrationWidth</linktext></link><link href="fl.video.xml#VideoPlayer/registrationHeight"><linktext>registrationHeight</linktext></link><link href="fl.video.xml#VideoAlign"><linktext>VideoAlign</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:scaleMode:get"><apiName>scaleMode</apiName><shortdesc>
		 Spécifie le redimensionnement de la vidéo après le chargement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>VideoScaleMode.MAINTAIN_ASPECT_RATIO
                 
                 </apiDefaultValue></apiValueDef><apiDesc>
		 Spécifie le redimensionnement de la vidéo après le chargement. Si défini sur <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph>, conserve les proportions de la vidéo dans le rectangle défini par <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph>. Si défini sur <codeph>VideoScaleMode.NO_SCALE</codeph>, adapte automatiquement la taille de la vidéo au fichier FLV. Si défini sur <codeph>VideoScaleMode.EXACT_FIT</codeph>, ignore les dimensions du fichier FLV source et la vidéo est étirée pour s'adapter au rectangle défini par <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph>. S défini après le chargement du fichier FLV, la mise en forme automatique commence immédiatement. Les valeurs proviennent de <codeph>VideoScaleMode</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoScaleMode"><linktext>VideoScaleMode</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:soundTransform:get"><apiName>soundTransform</apiName><shortdesc>
		 Ménage un accès direct à la propriété NetStream.soundTransform pour exposer davantage de contrôles audio.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.media:SoundTransform"/></apiValueDef><apiDesc>
		 Ménage un accès direct à la propriété <codeph>NetStream.soundTransform</codeph> pour exposer davantage de contrôles audio. Définissez la propriété pour modifier les paramètres ; utilisez la méthode de l'accesseur getter de la propriété pour récupérer les paramètres actuels.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/volume"><linktext>volume</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:source:get"><apiName>source</apiName><shortdesc>
		 Chaîne indiquant l'URL du fichier FLV à diffuser en continu et de quelle façon.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Chaîne indiquant l'URL du fichier FLV à diffuser en continu et de quelle façon. L'URL peut être l'URL HTTP d'un fichier FLV, l'URL RTMP d'un flux ou l'URL HTTP d'un fichier XML.
		 
		 <p>Si vous définissez cette propriété dans l'inspecteur de composants ou l'inspecteur des propriétés, le chargement et la lecture du fichier FLV débutent au prochain événement « <codeph>enterFrame</codeph> ». Ce délai donne du temps pour définir les propriétés <codeph>isLive</codeph> , <codeph>autoPlay</codeph> et <codeph>cuePoints</codeph>, entre autres, qui affectent le chargement. Il permet également à ActionScript placé sur la première image d'avoir une incidence sur le composant FLVPlayback avant le début de la lecture.</p>
		 
		 <p>Si vous définissez cette propriété avec ActionScript, elle appelle immédiatement la méthode <codeph>VideoPlayer.load()</codeph> lorsque la propriété <codeph>autoPlay</codeph> est définie sur <codeph>false</codeph>. Ou, elle appelle la méthode <codeph>VideoPlayer.play()</codeph> lorsque la propriété <codeph>autoPlay</codeph> est définie sur <codeph>true</codeph>. Les propriétés <codeph>autoPlay</codeph>, <codeph>totalTime</codeph> et <codeph>isLive</codeph> affectent le mode de chargement du nouveau fichier FLV. Ainsi, si vous les définissez, vous devez le faire avant la propriété <codeph>source</codeph>.</p>
		 
		 <p>Définissez la propriété <codeph>autoPlay</codeph> sur <codeph>false</codeph> pour empêcher la lecture automatique du nouveau fichier FLV.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/autoPlay"><linktext>FLVPlayback.autoPlay</linktext></link><link href="fl.video.xml#VideoPlayer/isLive"><linktext>isLive</linktext></link><link href="fl.video.xml#VideoPlayer/totalTime"><linktext>totalTime</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>load()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>play()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/load()"><linktext>FLVPlayback.load()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/play()"><linktext>FLVPlayback.play()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:state:get"><apiName>state</apiName><shortdesc>
		 Chaîne indiquant l'état du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Chaîne indiquant l'état du composant. Cette propriété est définie par les méthodes <codeph>load()</codeph>, <codeph>play()</codeph>, <codeph>stop()</codeph>, <codeph>pause()</codeph> et <codeph>seek()</codeph>. 
		 
		 <p>Les valeurs possibles pour la propriété state sont : <codeph>buffering</codeph>, <codeph>connectionError</codeph>, <codeph>disconnected</codeph>, <codeph>loading</codeph>, <codeph>paused</codeph>, <codeph>playing</codeph>, <codeph>rewinding</codeph>, <codeph>seeking</codeph> et <codeph>stopped</codeph>. Vous pouvez utiliser les propriétés de la classe FLVPlayback pour tester ces états. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState/DISCONNECTED"><linktext>VideoState.DISCONNECTED</linktext></link><link href="fl.video.xml#VideoState/STOPPED"><linktext>VideoState.STOPPED</linktext></link><link href="fl.video.xml#VideoState/PLAYING"><linktext>VideoState.PLAYING</linktext></link><link href="fl.video.xml#VideoState/PAUSED"><linktext>VideoState.PAUSED</linktext></link><link href="fl.video.xml#VideoState/BUFFERING"><linktext>VideoState.BUFFERING</linktext></link><link href="fl.video.xml#VideoState/LOADING"><linktext>VideoState.LOADING</linktext></link><link href="fl.video.xml#VideoState/CONNECTION_ERROR"><linktext>VideoState.CONNECTION_ERROR</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link><link href="fl.video.xml#VideoState/SEEKING"><linktext>VideoState.SEEKING</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
		 Valeur booléenne définie sur true si l'état est réactif.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Valeur booléenne définie sur <codeph>true</codeph> si l'état est réactif. Si l'état n'est pas réactif, les appels aux méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph>, <codeph>pause()</codeph> et <codeph>seek()</codeph> sont placés en file d'attente et exécutés ultérieurement, lorsque l'état change et devient réactif. Etant donné que ces appels sont mis en file d'attente pour être exécutés plus tard, il n'est habituellement pas nécessaire de suivre la valeur de la propriété <codeph>stateResponsive</codeph>. Les états réactifs sont : <codeph>stopped</codeph>, <codeph>playing</codeph>, <codeph>paused</codeph> et <codeph>buffering</codeph>. 
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="fl.video.xml#VideoState/DISCONNECTED"><linktext>VideoState.DISCONNECTED</linktext></link><link href="fl.video.xml#VideoState/STOPPED"><linktext>VideoState.STOPPED</linktext></link><link href="fl.video.xml#VideoState/PLAYING"><linktext>VideoState.PLAYING</linktext></link><link href="fl.video.xml#VideoState/PAUSED"><linktext>VideoState.PAUSED</linktext></link><link href="fl.video.xml#VideoState/LOADING"><linktext>VideoState.LOADING</linktext></link><link href="fl.video.xml#VideoState/RESIZING"><linktext>VideoState.RESIZING</linktext></link><link href="fl.video.xml#VideoState/CONNECTION_ERROR"><linktext>VideoState.CONNECTION_ERROR</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:totalTime:get"><apiName>totalTime</apiName><shortdesc>
		 Nombre représentant la durée de lecture totale de la vidéo en secondes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiTipTexts><apiTipText>La durée totale du fichier FLV en secondes
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Nombre représentant la durée de lecture totale de la vidéo en secondes.
		 
		 <p>Lors de la diffusion en continu à partir d'un serveur FMS (Flash Media Server) et de l'utilisation de <codeph>NCManager</codeph> par défaut, cette valeur est déterminée automatiquement par des API côté serveur, et elle écrase celle définie au moyen de cette propriété ou obtenue à partir de métadonnées. La propriété est prête pour la lecture lorsque l'état <codeph>stopped</codeph> ou <codeph>playing</codeph> est atteint après la définition de la propriété <codeph>source</codeph>. Cette propriété n'a aucune signification pour les flux en direct à partir d'un serveur FMS.</p>
		 
		 <p>Lors d'un téléchargement HTTP, cette valeur est déterminée de façon automatique si le fichier FLV comporte des métadonnées intégrées. Dans tous les autres cas, définissez-la de façon explicite, faute de quoi elle aura la valeur NaN. Lorsque vous la définissez de façon explicite, la valeur des métadonnées du flux sont ignorées.</p>
		 
		 <p>Lorsque vous définissez cette propriété, la valeur est effective pour le prochain fichier FLV chargé en définissant <codeph>source</codeph>. Elle n'a aucun effet sur un fichier FLV déjà chargé. En outre, cette propriété ne renvoie pas la nouvelle valeur transmise tant qu'un fichier FLV n'a pas été chargé.</p>
		 
		 <p>La lecture continue si cette propriété n'est jamais définie (de façon explicite ou automatique), mais elle risque de poser des problèmes avec les commandes de recherche.</p>
		 
		 <p>Si cette valeur n'est pas définie de façon explicite, elle reste NaN jusqu'à ce que les métadonnées permettent de lui accorder une valeur valide.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/source"><linktext>source</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:videoHeight:get"><apiName>videoHeight</apiName><shortdesc>
		 Largeur source du fichier FLV chargé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Largeur source du fichier FLV chargé. Cette propriété renvoie -1 si aucune information n'est disponible.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/height"><linktext>height</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:videoWidth:get"><apiName>videoWidth</apiName><shortdesc>
		 Largeur source du fichier FLV chargé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Largeur source du fichier FLV chargé. Cette propriété renvoie -1 si aucune information n'est disponible.
		 
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/width"><linktext>width</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:visible:get"><apiName>visible</apiName><shortdesc>
		 Valeur booléenne qui, si elle est définie sur true, rend l'occurrence de VideoPlayer visible.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
         
         </apiDefaultValue></apiValueDef><apiDesc>
		 Valeur booléenne qui, si elle est définie sur <codeph>true</codeph>, rend l'occurrence de VideoPlayer visible. Si elle a la valeur <codeph>false</codeph>, l'occurrence est masquée. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoPlayer:volume:get"><apiName>volume</apiName><shortdesc>
		 Nombre compris entre 0 et 1 indiquant le réglage de contrôle du volume.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
		 
		 </apiDefaultValue><apiTipTexts><apiTipText>La valeur du paramètre du volume s'étend de 0 à 1.
		 
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Nombre compris entre 0 et 1 indiquant le réglage de contrôle du volume. 
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/soundTransform"><linktext>soundTransform</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:height:set"><apiName>height</apiName><shortdesc>
		 Nombre indiquant la hauteur de l'occurrence de VideoPlayer, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Nombre indiquant la hauteur de l'occurrence de VideoPlayer, en pixels. 
		 
		 <p><b>Remarque </b>: ne confondez pas cette propriété avec la propriété <codeph>flash.media.Video.height</codeph> qui est semblable à la propriété <codeph>fl.video.VideoPlayer.videoHeight</codeph>.</p>
         
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#height/setSize()"><linktext>setSize()</linktext></link><link href="" invalidHref="flash.media.xml#Video/videoHeight"><linktext>Video.videoHeight</linktext></link><link href="" invalidHref="fl.video.xml#height/videoHeight"><linktext>VideoPlayer.videoHeight</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:scaleX:set"><apiName>scaleX</apiName><shortdesc>
		 Nombre indiquant l'échelle horizontale.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>1
         </apiDefaultValue></apiValueDef><apiDesc>
		 Nombre indiquant l'échelle horizontale. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#scaleX/setScale()"><linktext>setScale()</linktext></link><link href="" invalidHref="fl.video.xml#scaleX/scaleY"><linktext>scaleY</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:scaleY:set"><apiName>scaleY</apiName><shortdesc>
		 Nombre indiquant l'échelle verticale.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>1
         </apiDefaultValue></apiValueDef><apiDesc>
		 Nombre indiquant l'échelle verticale. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#scaleY/setScale()"><linktext>setScale()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:width:set"><apiName>width</apiName><shortdesc>
		 Nombre indiquant la largeur de l'occurrence de VideoPlayer sur la scène.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Nombre indiquant la largeur de l'occurrence de VideoPlayer sur la scène.
		 
		 <p><b>Remarque </b>: la propriété <codeph>flash.media.Video.width</codeph> est similaire à la propriété <codeph>fl.video.VideoPlayer.videoWidth</codeph>.</p>
         
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#width/setSize()"><linktext>setSize()</linktext></link><link href="" invalidHref="flash.media.xml#Video/videoWidth"><linktext>Video.videoWidth</linktext></link><link href="" invalidHref="fl.video.xml#width/videoWidth"><linktext>VideoPlayer.videoWidth</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:x:set"><apiName>x</apiName><shortdesc>
		 Nombre indiquant la position horizontale du lecteur vidéo, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Nombre indiquant la position horizontale du lecteur vidéo, en pixels.
		 
		 <p>La définition de cette propriété <codeph>x</codeph> affecte également la propriété <codeph>registrationX</codeph>. Lorsque la propriété <codeph>x</codeph> ou <codeph>registrationX</codeph> est définie, la deuxième propriété est modifiée pour préserver son décalage par rapport à la première. Par exemple, si <codeph>x</codeph> = 10 et <codeph>registrationX</codeph> = 20, la sélection de <codeph>x</codeph> = 110 définit également <codeph>registrationX</codeph> = 120.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#x/registrationX"><linktext>registrationX</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoPlayer:y:set"><apiName>y</apiName><shortdesc>
		 Nombre indiquant la position verticale du lecteur vidéo, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Nombre indiquant la position verticale du lecteur vidéo, en pixels.
		 
		 <p>La définition de cette propriété <codeph>y</codeph> affecte également la propriété <codeph>registrationY</codeph>. Lorsque la propriété <codeph>y</codeph> ou <codeph>registrationY</codeph> est définie, la deuxième propriété est modifiée pour préserver son décalage par rapport à la première. Par exemple, si <codeph>y</codeph> = 10 et <codeph>registrationy</codeph> = 20, la sélection de <codeph>y</codeph> = 110 définit également <codeph>registrationy</codeph> = 120.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#y/registrationY"><linktext>registrationY</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:NCManager"><apiName>NCManager</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>fl.video:INCManager</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 <codeph/> 
	 
	 <p>La classe NCManager recherche une URL et repose sur les conditions suivantes :</p>
	 <ul>
	 <li/>
	 <li/>
	 <li> Si elle se termine par.flv, elle est traitée en tant que téléchargement FLV progressif. Sinon, elle est traitée en tant que fichier SMIL à télécharger et analyser.</li>
	 </ul>
	 
	 </apiDesc><example conref="NCManagerExample.as"/></apiClassifierDetail><apiConstructor id="fl.video:NCManager:NCManager"><apiName>NCManager</apiName><shortdesc>
         Crée une occurrence de NCManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
         Crée une occurrence de NCManager.
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:NCManager:close"><apiName>close</apiName><shortdesc conref="INCManager#close()">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="INCManager#close()">
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/close()"><linktext>INCManager.close()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:connectAgain"><apiName>connectAgain</apiName><shortdesc conref="INCManager#connectAgain()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>En cas de tentative de nouvelle connexion, <codeph>true</codeph>. Si une nouvelle tentative a déjà été effectuée ou si aucune autre tentative supplémentaire n'est jugée nécessaire, <codeph>false</codeph>.
         
         </apiDesc></apiReturn></apiOperationDef><apiDesc conref="INCManager#connectAgain()">
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/connectAgain()"><linktext>INCManager.connectAgain()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:connectToURL"><apiName>connectToURL</apiName><shortdesc conref="INCManager#connectToURL()">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>Si la connexion s'établit de façon synchrone, <codeph>true</codeph>. Lorsque la tentative se fait de façon asynchrone, l'appelant doit s'attendre à recevoir un événement « connected », <codeph>false</codeph>.
         
         </apiDesc></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>L'URL à laquelle l'objet VideoPlayer demande une connexion.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc conref="INCManager#connectToURL()">
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/connectToURL()"><linktext>INCManager.connectToURL()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:getProperty"><apiName>getProperty</apiName><shortdesc>
		 Permet de récupérer les propriétés fallbackServerName, fpadZone, objectEncoding et proxyType.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Représentation sous forme de chaîne des propriétés fallbackServerName, fpadZone, objectEncoding et proxyType.
         </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Le nom de la propriété que la méthode <codeph>getProperty</codeph> appelle.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Permet de récupérer les propriétés <codeph>fallbackServerName</codeph>, <codeph>fpadZone</codeph>, <codeph>objectEncoding</codeph> et <codeph>proxyType</codeph>. Voir la section <codeph>setProperty()</codeph> pour plus de détails sur ces propriétés.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#NCManager/setProperty()"><linktext>setProperty()</linktext></link><link href="fl.video.xml#NCManager/fallbackServerName"><linktext>fallbackServerName</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:helperDone"><apiName>helperDone</apiName><shortdesc conref="INCManager#helperDone()">
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>helper</apiItemName><apiType value="Object"/><apiDesc>Objet helper.
         
         </apiDesc></apiParam><apiParam><apiItemName>success</apiItemName><apiType value="Boolean"/><apiDesc>Paramètre permettant de signaler la fin de la tâche. Si <codeph>success</codeph> a la valeur <codeph>true</codeph>, la tâche s'est terminée avec succès, <codeph>false</codeph> dans le cas contraire.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc conref="INCManager#helperDone()">
	 
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/helperDone()"><linktext>INCManager.helperDone()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:reconnect"><apiName>reconnect</apiName><shortdesc conref="INCManager#reconnect()">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="INCManager#reconnect()">
	 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/reconnect()"><linktext>INCManager.reconnect()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:NCManager:setProperty"><apiName>setProperty</apiName><shortdesc>
		 Permet de définir les propriétés fallbackServerName, fpadZone, objectEncoding et proxyType.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Le nom de la propriété que la méthode <codeph>setProperty</codeph> appelle.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value=""/><apiDesc>Valeur de la propriété.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Permet de définir les propriétés <codeph>fallbackServerName</codeph>, <codeph>fpadZone</codeph>, <codeph>objectEncoding</codeph> et <codeph>proxyType</codeph>.
		 
		 <p>La propriété <codeph>fallbackServerName</codeph> spécifie l'URL du serveur FMS (Flash Media Server) à utiliser lorsque l'adresse principale du serveur déduite de l'URL transmise dans <codeph>connectToURL()</codeph> ne peut pas être atteinte. Cette propriété peut également être définie directement par la propriété <codeph>fallbackServerName</codeph>.</p>
		 
	 <p>La propriété <codeph>fpadZone</codeph> spécifie la propriété <codeph>fpadZone</codeph> pour le serveur FMS (Flash Media Server). Lorsque la valeur renvoyée n'est pas un nombre (NaN), aucune zone n'est définie. La propriété <codeph>fpadZone</codeph> doit être définie avant le début du processus de connexion. Si vous ne souhaitez pas définir de zone, définissez la propriété <codeph>fpadZone</codeph> sur <codeph>NaN</codeph>.</p>
		 La valeur par défaut est <codeph>NaN</codeph>.
		 
		 <p>La propriété <codeph>objectEncoding</codeph> spécifie la valeur à utiliser pour la propriété <codeph>objectEncoding</codeph> des occurrences de <codeph>NetConnection</codeph>. La valeur par défaut est <codeph>flash.net.ObjectEncoding.AMF0</codeph>.</p>
		 
		 <p>La propriété <codeph>proxyType</codeph> spécifie la valeur à utiliser pour la propriété <codeph>proxyType</codeph> des occurrences de <codeph>NetConnection</codeph>. La valeur par défaut est « best ».</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#NCManager/getProperty()"><linktext>getProperty()</linktext></link><link href="fl.video.xml#NCManager/fallbackServerName"><linktext>fallbackServerName</linktext></link></related-links></apiOperation><apiValue id="fl.video:NCManager:DEFAULT_TIMEOUT"><apiName>DEFAULT_TIMEOUT</apiName><shortdesc>
	 Expiration par défaut de la connexion, en millisecondes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>60000</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	 Expiration par défaut de la connexion, en millisecondes.
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/timeout"><linktext>INCManager.timeout</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version court du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version court du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManager/VERSION"><linktext>Variable VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:VERSION"><apiName>VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version long du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version long du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11. La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManager/SHORT_VERSION"><linktext>Variable SHORT_VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:fallbackServerName"><apiName>fallbackServerName</apiName><shortdesc>
	 Expose la propriété fallbackServerName indirectement ou directement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	 Expose la propriété <codeph>fallbackServerName</codeph> indirectement ou directement.
	 
	 <ul>
	 <li>Indirectement—Fournit une deuxième balise &lt;meta base> dans le bloc SMIL. La propriété <codeph>fallbackServerName</codeph> utilise cet attribut de base. (La propriété <codeph>fallbackServerName</codeph> a recours uniquement au nom de serveur, rien d'autre.)</li>
	 
	 <li>Directement—Accède à la propriété <codeph>ncMgr</codeph> dans FLVPlayback ou VideoPlayer et définit la propriété <codeph>fallbackServerName</codeph> ou utilise la méthode <codeph>setProperty()</codeph>.</li>
         </ul>
         
		 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#NCManager/setProperty()"><linktext>setProperty()</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:bitrate:get"><apiName>bitrate</apiName><shortdesc>
		 Lors de la diffusion continue à partir d'un serveur FMS (Flash Media Server), la propriété bitrate renvoie la valeur calculée par la procédure de détection automatique et non pas celle définie par la propriété bitrate().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Lors de la diffusion continue à partir d'un serveur FMS (Flash Media Server), la propriété <codeph>bitrate</codeph> renvoie la valeur calculée par la procédure de détection automatique et non pas celle définie par la propriété <codeph>bitrate()</codeph>.
		 
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/bitrate"><linktext>INCManager.bitrate</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:isDynamicStream:get"><apiName>isDynamicStream</apiName><shortdesc>
		 
         
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5."/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:NCManager:isRTMP:get"><apiName>isRTMP</apiName><shortdesc conref="INCManager#isRTMP">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="INCManager#isRTMP">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/isRTMP"><linktext>INCManager.isRTMP</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:netConnection:get"><apiName>netConnection</apiName><shortdesc conref="INCManager#netConnection">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc conref="INCManager#netConnection">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/netConnection"><linktext>INCManager.netConnection</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamHeight:get"><apiName>streamHeight</apiName><shortdesc conref="INCManager#streamHeight">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="INCManager#streamHeight">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamHeight"><linktext>INCManager.streamHeight</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamLength:get"><apiName>streamLength</apiName><shortdesc conref="INCManager#streamLength">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="INCManager#streamLength">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamLength"><linktext>INCManager.streamLength</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamName:get"><apiName>streamName</apiName><shortdesc conref="INCManager#streamName">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc conref="INCManager#streamName">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamName"><linktext>INCManager.streamName</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streamWidth:get"><apiName>streamWidth</apiName><shortdesc conref="INCManager#streamWidth">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="INCManager#streamWidth">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/streamWidth"><linktext>INCManager.streamWidth</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:streams:get"><apiName>streams</apiName><shortdesc conref="INCManager#streams">
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="INCManager#streams">
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:NCManager:timeout:get"><apiName>timeout</apiName><shortdesc conref="INCManager#timeout">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc conref="INCManager#timeout">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/timeout"><linktext>INCManager.timeout</linktext></link></related-links></apiValue><apiValue id="fl.video:NCManager:videoPlayer:get"><apiName>videoPlayer</apiName><shortdesc conref="INCManager#videoPlayer">
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>fl.video:VideoPlayer</apiValueClassifier></apiValueDef><apiDesc conref="INCManager#videoPlayer">
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/videoPlayer"><linktext>INCManager.videoPlayer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
     Flash&amp;#xAE; Player distribue un objet VideoEvent lorsque l’utilisateur lit une vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>Classe VideoEvent
     </apiTipText></apiTipTexts><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
     Flash<sup>®</sup> Player distribue un objet VideoEvent lorsque l'utilisateur lit une vidéo.
     
     </apiDesc></apiClassifierDetail><adobeApiEvent id="fl.video:VideoEvent:AUTO_REWOUND_autoRewound"><apiName>autoRewound</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:AUTO_REWOUND</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:BUFFERING_STATE_ENTERED_bufferingStateEntered"><apiName>bufferingStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:BUFFERING_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:CLOSE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:COMPLETE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:FAST_FORWARD_fastForward"><apiName>fastForward</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:FAST_FORWARD</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:PAUSED_STATE_ENTERED_pausedStateEntered"><apiName>pausedStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:PAUSED_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:PLAYING_STATE_ENTERED_playingStateEntered"><apiName>playingStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:PLAYING_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:READY</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:REWIND_rewind"><apiName>rewind</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:REWIND</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SCRUB_FINISH_scrubFinish"><apiName>scrubFinish</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SCRUB_FINISH</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SCRUB_START_scrubStart"><apiName>scrubStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SCRUB_START</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SEEKED_seeked"><apiName>seeked</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SEEKED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:SKIN_LOADED_skinLoaded"><apiName>skinLoaded</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:SKIN_LOADED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:STATE_CHANGE_stateChange"><apiName>stateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:STATE_CHANGE</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:STOPPED_STATE_ENTERED_stoppedStateEntered"><apiName>stoppedStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoEvent:STOPPED_STATE_ENTERED</apiEventType><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="fl.video:VideoEvent:UNSUPPORTED_PLAYER_VERSION_stoppedStateEntered"><apiName>stoppedStateEntered</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType/><adobeApiEventClassifier>fl.video:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:VideoEvent:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
         Crée un objet Event contenant des informations sur les événements vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. Les valeurs possibles sont <codeph>VideoEvent.AUTO_REWOUND</codeph>, <codeph>VideoEvent.BUFFERING_STATE_ENTERED</codeph>, <codeph>VideoEvent.CLOSE</codeph>, <codeph>VideoEvent.COMPLETE</codeph>, <codeph>VideoEvent.FAST_FORWARD</codeph>, <codeph>VideoEvent.PAUSED_STATE_ENTERED</codeph>, <codeph>VideoEvent.PLAYHEAD_UPDATE</codeph>, <codeph>VideoEvent.PLAYING_STATE_ENTERED</codeph>, <codeph>VideoEvent.READY</codeph>, <codeph>VideoEvent.REWIND</codeph>, <codeph>VideoEvent.SCRUB_FINISH</codeph>, <codeph>VideoEvent.SCRUB_START</codeph>, <codeph>VideoEvent.SEEKED</codeph>, <codeph>VideoEvent.SKIN_LOADED</codeph>, <codeph>VideoEvent.STATE_CHANGE</codeph>, <codeph>VideoEvent.STOPPED_STATE_ENTERED</codeph> et <codeph>VideoEvent.VOLUME_UPDATE</codeph>.
         
         </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>bubbles</codeph> héritée.
         
         </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>cancelable</codeph> héritée.
         
         </apiDesc></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.
         
         </apiDesc></apiParam><apiParam><apiItemName>playheadTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.
         
         </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Détermine l'index de l'objet VideoPlayer.     
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Crée un objet Event contenant des informations sur les événements vidéo. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
         
         </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiConstructor><apiValue id="fl.video:VideoEvent:AUTO_REWOUND"><apiName>AUTO_REWOUND</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement autoRewound.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>autoRewound</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>autoRewound</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:BUFFERING_STATE_ENTERED"><apiName>BUFFERING_STATE_ENTERED</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement bufferingStateEntered.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bufferingStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>bufferingStateEntered</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>close</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
         Définit la valeur de la propriété type d’un objet événement complete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d’un objet événement <codeph>complete</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:FAST_FORWARD"><apiName>FAST_FORWARD</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement fastForward.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fastForward</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet de l'événement <codeph>fastForward</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:PAUSED_STATE_ENTERED"><apiName>PAUSED_STATE_ENTERED</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement pausedStateEntered.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pausedStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>pausedStateEntered</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:PLAYHEAD_UPDATE"><apiName>PLAYHEAD_UPDATE</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement playheadUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playheadUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>playheadUpdate</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:PLAYING_STATE_ENTERED"><apiName>PLAYING_STATE_ENTERED</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement playingStateEntered.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playingStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>playingStateEntered</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:READY"><apiName>READY</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement ready.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>ready</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:REWIND"><apiName>REWIND</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement rewind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewind</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>rewind</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SCRUB_FINISH"><apiName>SCRUB_FINISH</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement scrubFinish.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scrubFinish</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet de l'événement <codeph>scrubFinish</codeph>. 
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SCRUB_START"><apiName>SCRUB_START</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement scrubStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scrubStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet de l'événement <codeph>scrubStart</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SEEKED"><apiName>SEEKED</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement seeked.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>seeked</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>seeked</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:SKIN_LOADED"><apiName>SKIN_LOADED</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement skinLoaded.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>skinLoaded</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>skinLoaded</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:STATE_CHANGE"><apiName>STATE_CHANGE</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement stateChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>stateChange</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:STOPPED_STATE_ENTERED"><apiName>STOPPED_STATE_ENTERED</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet événement stoppedStateEntered.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stoppedStateEntered</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet événement <codeph>stoppedStateEntered</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:UNSUPPORTED_PLAYER_VERSION"><apiName>UNSUPPORTED_PLAYER_VERSION</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unsupportedPlayerVersion</apiData><apiType value="String"/></apiValueDef><apiDesc>
         <codeph/><codeph/>
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
         <adobetable class="innertable">
             
             
             
             
             
             
         <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>state</codeph></entry><entry>Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Nombre correspondant au temps de lecture ou à la position actuels de la tête de lecture.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState"><linktext>VideoState</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
         Nombre représentant la durée de lecture (ou position de la tête de lecture) actuelle, mesurée en secondes, qui peut être une valeur décimale.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiTipTexts><apiTipText>Position actuelle de la tête de lecture, en secondes
         
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
         Nombre représentant la durée de lecture (ou position de la tête de lecture) actuelle, mesurée en secondes, qui peut être une valeur décimale. Lorsque vous définissez cette propriété, vous déclenchez une recherche et vous avez toutes les restrictions d'une recherche.
         
         <p>Lorsque la position de la tête de lecture change (une fois toutes les 0,25 secondes lors de la lecture du fichier FLV), le composant distribue l'événement <codeph>playheadUpdate</codeph>.</p>
         
         <p>La propriété <codeph>playheadTime</codeph> peut ne pas avoir la valeur attendue immédiatement après l'appel aux méthodes de recherche ou la définition de la propriété <codeph>playheadTime</codeph> pour provoquer une recherche. Tout d'abord, s'il s'agit d'un téléchargement progressif, vous pouvez rechercher uniquement une image-clé. Ainsi une recherche vous amène à l'heure de la première image-clé après l'heure spécifiée. (En cas de diffusion à flux continu, une recherche vous conduit toujours à l'heure exacte spécifiée même si le fichier FLV source n'y possède pas d'image-clé.) En second lieu, une recherche est asynchrone. Ainsi, si vous appelez une méthode de recherche ou définissez la propriété <codeph>playheadTime</codeph>, <codeph>playheadTime</codeph> n'est pas immédiatement mise à jour. Pour obtenir l'heure à la fin de la recherche, écoutez l'événement <codeph>seek</codeph>, qui ne se déclenche pas tant que la propriété <codeph>playheadTime</codeph> n'a pas été mise à jour.</p>
         
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/playheadTime"><linktext>FLVPlayback.playheadTime</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/seek()"><linktext>FLVPlayback.seek()</linktext></link><link href="fl.video.xml#VideoPlayer/playheadTime"><linktext>VideoPlayer.playheadTime</linktext></link><link href="fl.video.xml#VideoPlayer/seek()"><linktext>VideoPlayer.seek()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:state:get"><apiName>state</apiName><shortdesc>
         Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
         Chaîne identifiant la constante provenant de la classe VideoState et qui décrit l'état de lecture du composant. Cette propriété est définie par les méthodes <codeph>load()</codeph>, <codeph>play()</codeph>, <codeph>stop()</codeph>, <codeph>pause()</codeph> et <codeph>seek()</codeph>. 
         
         <p>Les valeurs possibles pour la propriété state sont : <codeph>buffering</codeph>, <codeph>connectionError</codeph>, <codeph>disconnected</codeph>, <codeph>loading</codeph>, <codeph>paused</codeph>, <codeph>playing</codeph>, <codeph>rewinding</codeph>, <codeph>seeking</codeph> et <codeph>stopped</codeph>. Vous pouvez utiliser les propriétés de la classe FLVPlayback pour tester ces états. </p>
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoState/DISCONNECTED"><linktext>VideoState.DISCONNECTED</linktext></link><link href="fl.video.xml#VideoState/STOPPED"><linktext>VideoState.STOPPED</linktext></link><link href="fl.video.xml#VideoState/PLAYING"><linktext>VideoState.PLAYING</linktext></link><link href="fl.video.xml#VideoState/PAUSED"><linktext>VideoState.PAUSED</linktext></link><link href="fl.video.xml#VideoState/BUFFERING"><linktext>VideoState.BUFFERING</linktext></link><link href="fl.video.xml#VideoState/LOADING"><linktext>VideoState.LOADING</linktext></link><link href="fl.video.xml#VideoState/CONNECTION_ERROR"><linktext>VideoState.CONNECTION_ERROR</linktext></link><link href="fl.video.xml#VideoState/REWINDING"><linktext>VideoState.REWINDING</linktext></link><link href="fl.video.xml#VideoState/SEEKING"><linktext>VideoState.SEEKING</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoAlign"><apiName>VideoAlign</apiName><shortdesc>
	 La classe VideoAlign fournit des valeurs de constante à utiliser pour les propriétés FLVPlayback.align et VideoPlayer.align.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 La classe VideoAlign fournit des valeurs de constante à utiliser pour les propriétés <codeph>FLVPlayback.align</codeph> et <codeph>VideoPlayer.align</codeph>.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/align"><linktext>FLVPlayback.align</linktext></link><link href="fl.video.xml#VideoPlayer/align"><linktext>VideoPlayer.align</linktext></link></related-links><apiValue id="fl.video:VideoAlign:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
         Spécifie que la vidéo est alignée en bas.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée en bas.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:BOTTOM_LEFT"><apiName>BOTTOM_LEFT</apiName><shortdesc>
         Spécifie que la vidéo est alignée sur le coin inférieur gauche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottomLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée sur le coin inférieur gauche.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:BOTTOM_RIGHT"><apiName>BOTTOM_RIGHT</apiName><shortdesc>
         Spécifie que la vidéo est alignée sur le coin inférieur droit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottomRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée sur le coin inférieur droit.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:CENTER"><apiName>CENTER</apiName><shortdesc>
         Spécifie que la vidéo est centrée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>center</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est centrée.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:LEFT"><apiName>LEFT</apiName><shortdesc>
         Spécifie que la vidéo est alignée à gauche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée à gauche.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:RIGHT"><apiName>RIGHT</apiName><shortdesc>
         Spécifie que la vidéo est alignée à droite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée à droite.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:TOP"><apiName>TOP</apiName><shortdesc>
         Spécifie que la vidéo est alignée en haut.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée en haut.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:TOP_LEFT"><apiName>TOP_LEFT</apiName><shortdesc>
         Spécifie que la vidéo est alignée sur le coin supérieur gauche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>topLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée sur le coin supérieur gauche.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoAlign:TOP_RIGHT"><apiName>TOP_RIGHT</apiName><shortdesc>
         Spécifie que la vidéo est alignée sur le coin supérieur droit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>topRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo est alignée sur le coin supérieur droit.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:DynamicStream"><apiName>DynamicStream</apiName><shortdesc>
     
     </shortdesc><prolog><author>Adobe Systems Incorporated
     
     </author><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.net:NetStream</apiBaseClassifier></apiClassifierDef><apiDesc>
     
         <codeph/>    <codeph/> 
     
     <codeblock> 
     import fl.video. 
     
     var dsi:DynamicStreamItem = new DynamicStreamItem(); 
     dsi.uri = "rtmp://localhost/vod/"; 
     dsi.addStream("mp4:sample1_150kbps.f4v", 150); 
     dsi.addStream("mp4:sample1_700kbps.f4v", 700); 
     dsi.addStream("mp4:sample1_1500kbps.f4v", 1500); 
     
     vid.play2(dsi);
     </codeblock>
     
	 </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:DynamicStream:DynamicStream"><apiName>DynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>nc</apiItemName><apiType value="flash.net:NetConnection"/><apiDesc>	 
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
		  
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="fl.video:DynamicStream:close"><apiName>close</apiName><shortdesc>
 		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
 		 <codeph/>
 		 
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:getStreamItemAt"><apiName>getStreamItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>fl.video:DynamicStreamItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:manualSwitchMode"><apiName>manualSwitchMode</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>mode</apiItemName><apiType value="Boolean"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		  <codeph/><codeph/><codeph/><codeph/><codeph/> <codeph/>  
         
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:onMetaData"><apiName>onMetaData</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>infoObj</apiItemName><apiType value="Object"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/>  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:onPlayStatus"><apiName>onPlayStatus</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>info</apiItemName><apiType value="Object"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         <codeph/>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:play"><apiName>play</apiName><shortdesc>
 		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>		 
         </apiDesc></apiParam></apiOperationDef><apiDesc>
 		 <codeph/>
 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:play2"><apiName>play2</apiName><shortdesc>
 		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>param</apiItemName><apiType value="flash.net:NetStreamPlayOptions"/><apiDesc>		 
 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
 		 <codeph/> <codeph/>
 		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.net.NetStream.xml"><linktext>flash.net.NetStream</linktext></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:setBandwidthLimit"><apiName>setBandwidthLimit</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>limit</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
            
		 
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:startPlay"><apiName>startPlay</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiOperationClassifier>fl.video:DynamicStreamItem</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 <codeph/> 
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:DynamicStream:switchDown"><apiName>switchDown</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         <codeph/>   
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:switchToStreamName"><apiName>switchToStreamName</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>        
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/>  
         
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:switchToStreamRate"><apiName>switchToStreamRate</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rate</apiItemName><apiType value="int"/><apiDesc>        </apiDesc></apiParam></apiOperationDef><apiDesc>
         <codeph/>  
		 
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiOperation id="fl.video:DynamicStream:switchUp"><apiName>switchUp</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         <codeph/>  
         
		 </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#DynamicStream/manualSwitchMode()"><linktext/></link></related-links></apiOperation><apiValue id="fl.video:DynamicStream:STATE_BUFFERING"><apiName>STATE_BUFFERING</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>buffering</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:STATE_PAUSED"><apiName>STATE_PAUSED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>paused</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:STATE_PLAYING"><apiName>STATE_PLAYING</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>playing</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:STATE_STOPPED"><apiName>STATE_STOPPED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>stopped</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:VERSION"><apiName>VERSION</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1.1.0.6</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:aggressiveModeBufferLength:get"><apiName>aggressiveModeBufferLength</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
            
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:currentStreamBitRate:get"><apiName>currentStreamBitRate</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
           <codeph/><codeph/><codeph/>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:currentStreamName:get"><apiName>currentStreamName</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
          <codeph/><codeph/><codeph/> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:droppedFramesLockDelay:get"><apiName>droppedFramesLockDelay</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
             <codeph/>    <codeph/>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:maxBandwidth:get"><apiName>maxBandwidth</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
           
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:preferredBufferLength:get"><apiName>preferredBufferLength</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
           <codeph/> <codeph/>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:startBufferLength:get"><apiName>startBufferLength</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
            
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:DynamicStream:switchQOSTimerDelay:get"><apiName>switchQOSTimerDelay</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
         
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoError"><apiName>VideoError</apiName><shortdesc>
     L'exception VideoError constitue le principal mécanisme de signalisation des erreurs d'exécution à partir des classes FLVPlayback et VideoPlayer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>classe VideoError
     </apiTipText></apiTipTexts><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
     L'exception VideoError constitue le principal mécanisme de signalisation des erreurs d'exécution à partir des classes FLVPlayback et VideoPlayer.
     
     </apiDesc></apiClassifierDetail><apiConstructor id="fl.video:VideoError:VideoError"><apiName>VideoError</apiName><shortdesc>
         Crée un nouvel objet VideoError.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>errCode</apiItemName><apiType value="uint"/><apiDesc>Le code qui correspond à l'erreur.
         
         </apiDesc></apiParam><apiParam><apiItemName>msg</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Message d’erreur.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Crée un nouvel objet VideoError.
         
         </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:VideoError:DELETE_DEFAULT_PLAYER"><apiName>DELETE_DEFAULT_PLAYER</apiName><shortdesc>
         Déclare la variable qui indique que l'utilisateur ne peut pas supprimer l'objet VideoPlayer par défaut.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1007</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui indique que l'utilisateur ne peut pas supprimer l'objet VideoPlayer par défaut.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:ILLEGAL_CUE_POINT"><apiName>ILLEGAL_CUE_POINT</apiName><shortdesc>
         Déclare la variable qui sert à désigner un point de repère non valide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui sert à désigner un point de repère non valide.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INCMANAGER_CLASS_UNSET"><apiName>INCMANAGER_CLASS_UNSET</apiName><shortdesc>
         Déclare la variable qui indique que la classe INCManager n'est pas définie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1008</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui indique que la classe INCManager n'est pas définie.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INVALID_SEEK"><apiName>INVALID_SEEK</apiName><shortdesc>
         Déclare la variable qui indique une recherche non valide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1003</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui indique une recherche non valide.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INVALID_SOURCE"><apiName>INVALID_SOURCE</apiName><shortdesc>
         Déclare la variable qui indique une source non valide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui indique une source non valide.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:INVALID_XML"><apiName>INVALID_XML</apiName><shortdesc>
         Déclare une variable qui indique du code XML non valide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1005</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare une variable qui indique du code XML non valide.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:MISSING_SKIN_STYLE"><apiName>MISSING_SKIN_STYLE</apiName><shortdesc>
         Déclare la variable qui désigne un style d'enveloppe manquant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1010</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui désigne un style d'enveloppe manquant.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NETSTREAM_CLIENT_CLASS_UNSET"><apiName>NETSTREAM_CLIENT_CLASS_UNSET</apiName><shortdesc>
	Erreur qui se produit lorsque la propriété statique VideoPlayer.netStatusClientClass est définie sur une valeur non valide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.115.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1012</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	Erreur qui se produit lorsque la propriété statique <codeph>VideoPlayer.netStatusClientClass</codeph> est définie sur une valeur non valide. Ceci inclut les cas où il s'agit d'une chaîne et que la classe est introuvable et n'a pas de constructeur qui accepte une occurrence de VideoPlayer sous forme de paramètre.
	
	<p>Un message d'erreur peut s'afficher avec le code suivant :</p>
	<codeblock>
	  // Place the FLVPlayback component on the Stage at 0,0 and provide the instance name myflvPlayback.
	  import fl.video.
	  VideoPlayer.netStreamClientClass = null;
	   try {
	        myflvPlayback.play('test.flv');
	   } catch (e:VideoError) {
	         if (e.code =VideoError.NETSTREAM_CLIENT_CLASS_UNSET) {
	           trace('I forced this error on purpose');
	         }
	  }
	</codeblock>
    	</apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NO_BITRATE_MATCH"><apiName>NO_BITRATE_MATCH</apiName><shortdesc>
         Déclare une variable qui indique qu'il n'y a aucune concordance de débit binaire.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1006</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare une variable qui indique qu'il n'y a aucune concordance de débit binaire.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NO_CONNECTION"><apiName>NO_CONNECTION</apiName><shortdesc>
         Déclare la variable qui indique que Flash Player ne peut pas établir de connexion au serveur ou pour rechercher le fichier FLV sur le serveur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1000</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui indique que Flash Player ne peut pas établir de connexion au serveur ou pour rechercher le fichier FLV sur le serveur.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:NULL_URL_LOAD"><apiName>NULL_URL_LOAD</apiName><shortdesc>
         Déclare la variable qui indique qu'une URL nulle a été envoyée à la méthode load().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1009</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare la variable qui indique qu'une URL <codeph>nulle</codeph> a été envoyée à la méthode <codeph>load()</codeph>.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoError:SHORT_VERSION"><apiName>SHORT_VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version court du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version court du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.SHORT_VERSION</codeblock>
	
	<p>La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11.</p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoError/VERSION"><linktext>Variable VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoError:UNSUPPORTED_PROPERTY"><apiName>UNSUPPORTED_PROPERTY</apiName><shortdesc>
         Déclare une variable indiquant qu'une propriété non prise en charge a été transmise à la classe INCManager ou aux méthodes getProperty ou setProperty.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1011</apiData><apiType value="uint"/></apiValueDef><apiDesc>
         Déclare une variable indiquant qu'une propriété non prise en charge a été transmise à la classe INCManager ou aux méthodes <codeph>getProperty</codeph> ou <codeph>setProperty</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#INCManager/getProperty()"><linktext>INCManager.getProperty()</linktext></link><link href="fl.video.xml#INCManager/setProperty()"><linktext>INCManager.setProperty()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoError:VERSION"><apiName>VERSION</apiName><shortdesc>
	Déclare une variable indiquant le numéro de version long du composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2.5.0.15</apiData><apiType value="String"/></apiValueDef><apiDesc>
	Déclare une variable indiquant le numéro de version long du composant. Le numéro de version est utile lorsque vous disposez d'un fichier FLA et devez connaître la version du composant. Pour déterminer la version du composant, tapez le code de suivi ci-dessous dans le fichier FLA :
	
	<codeblock>FLVPlayback.VERSION</codeblock>
	
	<p>La variable <codeph>VERSION</codeph> inclut les numéros de version majeure et secondaire, ainsi que la révision et les numéros, par exemple, 2.0.0.11. La variable <codeph>SHORT_VERSION</codeph> inclut uniquement la version majeure et secondaire, par exemple, 2.0. </p>
	
    </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoError/SHORT_VERSION"><linktext>Variable SHORT_VERSION</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoError:code:get"><apiName>code</apiName><shortdesc>
         Le code qui correspond à l'erreur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
         Le code qui correspond à l'erreur. Le code d'erreur est transmis au constructeur.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:LayoutEvent"><apiName>LayoutEvent</apiName><shortdesc>
	 Evénement distribué lorsque le lecteur vidéo est redimensionné et/ou disposé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Evénement distribué lorsque le lecteur vidéo est redimensionné et/ou disposé. Vous trouverez ci-dessous deux scénarios de disposition du lecteur :
	 <ul>
       <li>Si le lecteur vidéo est disposé à l'aide de l'événement <codeph>autoLayout</codeph> ou en appelant les méthodes <codeph>setScale()</codeph> ou <codeph>setSize()</codeph>, ou en modifiant les propriétés <codeph>width</codeph>, <codeph>height</codeph>, <codeph>scaleX</codeph>, <codeph>scaleY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph>.</li>
	   <li>S'il existe deux lecteurs vidéo de taille ou emplacement différents et si la propriété <codeph>visibleVideoPlayerIndex</codeph> passe d'un lecteur vidéo à l'autre.</li>
	 </ul>  
	 
	 <p>Il n'existe qu'un seul type d'objet LayoutEvent : <codeph>LayoutEvent.LAYOUT</codeph> .</p>
	 
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#LayoutEvent/LAYOUT"><linktext>LAYOUT</linktext></link></related-links><adobeApiEvent id="fl.video:LayoutEvent:LAYOUT_layout"><apiName>layout</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:LayoutEvent:LAYOUT</apiEventType><adobeApiEventClassifier>fl.video:LayoutEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:layout"><linktext>Evénement layout</linktext></link></related-links></adobeApiEvent><apiConstructor id="fl.video:LayoutEvent:LayoutEvent"><apiName>LayoutEvent</apiName><shortdesc>
         Crée un objet Event contenant des informations sur les événements de mise en forme.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. l n’existe qu'un seul type d'événement de mise en forme automatique : <codeph>LayoutEvent.LAYOUT</codeph>.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>bubbles</codeph> héritée.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>cancelable</codeph> héritée.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>oldBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Indique les valeurs des propriétés <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> et <codeph>height</codeph> de la cible avant que l'événement <codeph>layout</codeph> ne se produise. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>oldBounds</codeph>.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>oldRegistrationBounds</apiItemName><apiType value="flash.geom:Rectangle"/><apiData>null</apiData><apiDesc>Indique les valeurs des propriétés <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph> de la cible avant que l'événement <codeph>layout</codeph> ne se produise. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>oldRegistrationBounds</codeph>.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Crée un objet Event contenant des informations sur les événements <codeph>layout</codeph>. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
	 
         </apiDesc></apiConstructorDetail><related-links><link href="fl.video.xml#LayoutEvent/oldBounds"><linktext>oldBounds</linktext></link><link href="fl.video.xml#LayoutEvent/oldRegistrationBounds"><linktext>oldRegistrationBounds</linktext></link></related-links></apiConstructor><apiValue id="fl.video:LayoutEvent:LAYOUT"><apiName>LAYOUT</apiName><shortdesc>
         Définit la valeur de la propriété type d'un objet de l'événement layout.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>layout</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Définit la valeur de la propriété <codeph>type</codeph> d'un objet de l'événement <codeph>layout</codeph>.
         
         <p>Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable">
	     
	     
	     
	     
	     
	     
	 <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>oldBounds</codeph></entry><entry>Les valeurs des propriétés <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> et <codeph>height</codeph> de la cible avant que l'événement <codeph>layout</codeph> ne se produise.</entry></row><row><entry><codeph>oldRegistrationBounds</codeph></entry><entry>Les valeurs des propriétés <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph> de la cible avant que l'événement <codeph>layout</codeph> ne se produise.</entry></row></tbody></tgroup></adobetable>
	 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/event:layout"><linktext>Evénement layout</linktext></link></related-links></apiValue><apiValue id="fl.video:LayoutEvent:oldBounds:get"><apiName>oldBounds</apiName><shortdesc>
		 Indique les valeurs des propriétés x, y, width et height de la cible avant l'événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
		 Indique les valeurs des propriétés <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> et <codeph>height</codeph> de la cible avant que l'événement ne se produise.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:LayoutEvent:oldRegistrationBounds:get"><apiName>oldRegistrationBounds</apiName><shortdesc>
		 Indique les valeurs des propriétés registrationX, registrationY, registrationWidth et registrationHeight de la cible avant l'événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
		 Indique les valeurs des propriétés <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph> de la cible avant que l'événement ne se produise.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoScaleMode"><apiName>VideoScaleMode</apiName><shortdesc>
	 La classe VideoScaleMode fournit des valeurs de constante à utiliser pour les propriétés FLVPlayback.scaleMode et VideoPlayer.scaleMode.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 La classe VideoScaleMode fournit des valeurs de constante à utiliser pour les propriétés <codeph>FLVPlayback.scaleMode</codeph> et <codeph>VideoPlayer.scaleMode</codeph>.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/scaleMode"><linktext>FLVPlayback.scaleMode</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>VideoPlayer.scaleMode</linktext></link></related-links><apiValue id="fl.video:VideoScaleMode:EXACT_FIT"><apiName>EXACT_FIT</apiName><shortdesc>
         Spécifie que la vidéo est affichée exactement avec la hauteur et la largeur désignées par les propriétés registrationHeight ou height et registrationWidth ou width.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>exactFit</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo doit s'afficher à la hauteur et la largeur spécifiées par les propriétés <codeph>registrationHeight</codeph> ou <codeph>height</codeph> et <codeph>registrationWidth</codeph> ou <codeph>width</codeph>.
	 
	 <p>Par exemple, si <codeph>registrationWidth = width = 100</codeph> et <codeph>registrationHeight = height = 100</codeph>, si <codeph>registrationX = 200</codeph> et <codeph>registrationY = 200</codeph>, et si un fichier FLV est chargé avec une valeur <codeph>width</codeph> de 648 et une <codeph>height</codeph> de 480 (pour un rapport largeur/hauteur d'environ 4/3), et si <codeph>align = VideoAlign.CENTER</codeph> et <codeph>scaleMode = EXACT_FIT</codeph>, vous terminez avec <codeph>width = 100</codeph>, <codeph>height = 100</codeph>, <codeph>x = 200</codeph> et <codeph>y = 200</codeph>.</p>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoScaleMode:MAINTAIN_ASPECT_RATIO"><apiName>MAINTAIN_ASPECT_RATIO</apiName><shortdesc>
     Spécifie que la vidéo sera cantonnée dans le rectangle défini par les propriétés registrationX, registrationY, registrationWidth et registrationHeight, mais conservera ses proportions d'origine.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>maintainAspectRatio</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Spécifie que la vidéo sera cantonnée dans le rectangle défini par les propriétés <codeph>registrationX</codeph>, <codeph>registrationY</codeph>, <codeph>registrationWidth</codeph> et <codeph>registrationHeight</codeph>, mais conservera ses proportions d'origine.
     
	 <p>Par exemple, si <codeph>registrationWidth = 100</codeph> et <codeph>registrationHeight = 100</codeph>, si <codeph>registrationX = 200</codeph> et <codeph>registrationY = 200</codeph>, et si un fichier FLV est chargé avec une valeur <codeph>width</codeph> de 648 et une <codeph>height</codeph> de 480 (pour un rapport largeur/hauteur d'environ 4/3), et si <codeph>align = VideoAlign.CENTER</codeph> et <codeph>scaleMode = MAINTAIN_ASPECT_RATIO</codeph>, vous terminez avec <codeph>width = 100</codeph> et <codeph>height = (100 ~~ 480 / 648) = 74</codeph>, <codeph>x = 10</codeph> et <codeph>y = (10 + ((100 - 74) / 2)) = 23</codeph>.</p>
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoScaleMode:NO_SCALE"><apiName>NO_SCALE</apiName><shortdesc>
         Spécifie que la vidéo doit s'afficher à exactement la même hauteur et largeur que la vidéo source.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>noScale</apiData><apiType value="String"/></apiValueDef><apiDesc>
         Spécifie que la vidéo doit s'afficher à exactement la même hauteur et largeur que la vidéo source.
	 
	 <p>Par exemple, si <codeph>registrationWidth = 100</codeph> et <codeph>registrationHeight = 100</codeph>, si <codeph>registrationX = 200</codeph> et <codeph>registrationY = 200</codeph>, et si un fichier FLV est chargé avec une valeur <codeph>width</codeph> de 648 et une <codeph>height</codeph> de 480 (pour un rapport largeur/hauteur d'environ 4/3), et si <codeph>align = VideoAlign.CENTER</codeph> et <codeph>scaleMode = NO_SCALE</codeph>, vous terminez avec <codeph>width = 648</codeph> et <codeph>height = 480</codeph>, <codeph>x = (200 + ((100 - 648) / 2)) = -74</codeph> et <codeph>y = (200 + ((100 - 480) / 2)) = 10</codeph>.</p>
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoProgressEvent"><apiName>VideoProgressEvent</apiName><shortdesc>
     Flash&amp;#xAE; Player distribue un objet VideoProgressEvent lorsque l’utilisateur sollicite le nombre d’octets chargés pendant le téléchargement HTTP progressif de sa vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>Classe VideoProgressEvent
     </apiTipText></apiTipTexts><apiBaseInterface>fl.video:IVPEvent</apiBaseInterface><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
     Flash<sup>®</sup> Player distribue un objet VideoProgressEvent lorsque l'utilisateur demande le nombre d'octets chargés pendant un chargement HTTP progressif de sa vidéo. 
     
     </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.events.ProgressEvent.xml"><linktext>ProgressEvent</linktext></link></related-links><adobeApiEvent id="fl.video:VideoProgressEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fl.video:VideoProgressEvent:PROGRESS</apiEventType><adobeApiEventClassifier>fl.video:VideoProgressEvent</adobeApiEventClassifier><apiDefinedEvent/><apiTipTexts><apiTipText>Constante PROGRESS
         </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="fl.video:VideoProgressEvent:VideoProgressEvent"><apiName>VideoProgressEvent</apiName><shortdesc>
     Crée un objet Event contenant des informations sur les événements progress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph>type</codeph> héritée. Il n'existe qu'un seul type d'événement de progression : VideoProgressEvent.PROGRESS.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété bubbles héritée.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété cancelable héritée.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre d’éléments ou d’octets chargés lors du traitement de l’événement par l’écouteur.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre total d’éléments ou d’octets qui seront chargés si le processus de chargement aboutit.
	 
	 </apiDesc></apiParam><apiParam><apiItemName>vp</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Détermine l'indice de l'objet VideoPlayer.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Crée un objet Event contenant des informations sur les événements progress. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:VideoProgressEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
     Définit la valeur de la propriété type d’un objet d’événement progress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/><apiTipTexts><apiTipText>Constante PROGRESS
         </apiTipText></apiTipTexts></apiValueDef><apiDesc>
     Définit la valeur de la propriété <codeph>type</codeph> d’un objet événement <codeph>progress</codeph>.
	 
	 <p>Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable">
	     
	     
	     
	     
	     
	     

	 <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Nombre d’éléments ou d’octets chargés lors du traitement de l’événement par l’écouteur.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Nombre total d’éléments ou d’octets chargés si le processus de chargement aboutit.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
	 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:VideoProgressEvent:vp:get"><apiName>vp</apiName><shortdesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Index de l'objet VideoPlayer impliqué dans cet événement.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:INCManager"><apiName>INCManager</apiName><shortdesc>
     INCManager constitue l'interface des classes qui créent l'objet flash.net.NetConnection destiné à la classe VideoPlayer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
     INCManager constitue l'interface des classes qui créent l'objet <codeph>flash.net.NetConnection</codeph> destiné à la classe VideoPlayer. La classe NCManager implémente par défaut l'interface INCManager. Utilisez la classe NCManagerNative lors de la diffusion en continu à partir d'un serveur FMS (Flash Media Server). Vous pouvez également créer une classe personnalisée qui met en œuvre l'interface INCManager, puis demander à la classe VideoPlayer d'utiliser cette classe pour créer l'objet NetConnection.
     
     <p>Le code suivant permet d'enregistrer une classe personnalisée en tant que mise en œuvre de INCManager exploitée par l'objet VideoPlayer. Remplace <codeph>fl.video.NCManagerNative</codeph> par votre classe personnalisée.</p>
     
     <codeblock>fl.video.VideoPlayer.iNCManagerClass = fl.video.NCManagerNative;</codeblock>
     
     </apiDesc></apiClassifierDetail><related-links><link href="fl.video.xml#VideoPlayer"><linktext>fl.video.VideoPlayer</linktext></link></related-links><apiOperation id="fl.video:INCManager:fl.video:INCManager:close"><apiName>close</apiName><shortdesc>
         Ferme NetConnection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         Ferme NetConnection.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:connectAgain"><apiName>connectAgain</apiName><shortdesc>
         Appelé par l'objet VideoPlayer si la connexion aboutit alors que le flux reste introuvable.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>En cas de tentative de nouvelle connexion, <codeph>true</codeph>. Si une nouvelle tentative a déjà été effectuée ou si aucune autre tentative supplémentaire n'est jugée nécessaire, <codeph>false</codeph>.
         
         </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
         Appelé par l'objet VideoPlayer si la connexion aboutit alors que le flux reste introuvable. Si plusieurs interprétations de l'URL RTMP sont possibles, il tente de se connecter de nouveau au serveur avec une URL différente et de livrer un autre nom de flux.
         
         <p>Ceci peut être nécessaire lorsque l'URL ressemble à cet exemple : rtmp://nom_serveur/chemin1/chemin2/chemin3. Lors de la transmission d'un nom d'application et de nom d'occurrence, ouvrez l'objet NetConnection avec rtmp://nom_serveur/chemin1/chemin2 ou utilisez l'occurrence par défaut de façon à ouvrir le flux avec chemin2/chemin3. De manière générale, ceci est possible lorsque le chemin comporte plus de deux parties, mais impossible s'il n'en comporte que deux (il doit en disposer d'au moins une).</p>
         
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/connectToURL()"><linktext>connectToURL()</linktext></link><link href="fl.video.xml#VideoPlayer/isRTMP"><linktext>VideoPlayer.isRTMP</linktext></link></related-links></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:connectDynamicStream"><apiName>connectDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dsi</apiItemName><apiType value=""/><apiDesc>  <xref href="http://www.adobe.com/go/fms_dynamicstreaming"/>
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <codeph/>
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:connectToURL"><apiName>connectToURL</apiName><shortdesc>
         Appelé par le lecteur VideoPlayer pour demander une connexion à l'URL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Si la connexion s'établit de façon synchrone, <codeph>true</codeph>. Lorsque la tentative se fait de façon asynchrone, l'appelant doit s'attendre à recevoir un événement « connected », <codeph>false</codeph>.
         
         </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>L'URL à laquelle l'objet VideoPlayer demande une connexion.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Appelé par le lecteur VideoPlayer pour demander une connexion à l'URL. Une fois la connexion établie ou refusée, appelez la méthode <codeph>VideoPlayer.ncConnected()</codeph>. Si la connexion a échoué, définissez <codeph>nc = null</codeph> avant de procéder à l'appel.
         
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#INCManager/reconnect()"><linktext>reconnect()</linktext></link><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:getProperty"><apiName>getProperty</apiName><shortdesc>
         Lit les valeurs des propriétés arbitraires prises en charge par la classe qui implémente INCManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Les valeurs des propriétés.
         
         </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Le nom de la propriété que la méthode <codeph>getProperty</codeph> appelle.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Lit les valeurs des propriétés arbitraires prises en charge par la classe qui implémente INCManager. Consultez la section relative à la classe à mettre en œuvre pour obtenir la liste des propriétés prises en charge. Tout appel de cette méthode sur une propriété non prise en charge renvoie un objet VideoError avec le code <codeph>VideoError.UNSUPPORTED_PROPERTY=1011</codeph>.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:helperDone"><apiName>helperDone</apiName><shortdesc>
         Appelé par tout objet d'aide effectuant une tâche pour que l'objet NCManager puisse indiquer qu'il a terminé et s'il a réussi.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>helper</apiItemName><apiType value="Object"/><apiDesc>Objet helper.
         
         </apiDesc></apiParam><apiParam><apiItemName>success</apiItemName><apiType value="Boolean"/><apiDesc>Paramètre permettant de signaler la fin de la tâche. Si <codeph>success</codeph> a la valeur <codeph>true</codeph>, la tâche s'est terminée avec succès, <codeph>false</codeph> dans le cas contraire.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Appelé par tout objet d'aide effectuant une tâche pour que l'objet NCManager puisse indiquer qu'il a terminé et s'il a réussi. L'objet NCManager utilise ceci avec SMILManager.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:reconnect"><apiName>reconnect</apiName><shortdesc>
         Appelé par l'objet VideoPlayer pour demander une nouvelle connexion lorsqu'une connexion est interrompue.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
         Appelé par l'objet VideoPlayer pour demander une nouvelle connexion lorsqu'une connexion est interrompue. Une fois la connexion établie ou refusée, appelez la méthode <codeph>VideoPlayer.ncReconnected()</codeph>. Si la connexion a échoué, définissez <codeph>nc = null</codeph> avant d'appeler.
         
         </apiDesc></apiOperationDetail><related-links><link href="fl.video.xml#VideoPlayer/idleTimeout"><linktext>VideoPlayer.idleTimeout</linktext></link><link href="fl.video.xml#VideoPlayer/ncReconnected()"><linktext>VideoPlayer.ncReconnected()</linktext></link></related-links></apiOperation><apiOperation id="fl.video:INCManager:fl.video:INCManager:setProperty"><apiName>setProperty</apiName><shortdesc>
         Définit les valeurs des propriétés arbitraires prises en charge par la classe qui implémente INCManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Valeur de la propriété.
         
         </apiDesc><apiType value="void"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiType value="String"/><apiDesc>Le nom de la propriété que la méthode <codeph>setProperty</codeph> appelle.
         
         </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value=""/><apiDesc>Valeur de la propriété.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Définit les valeurs des propriétés arbitraires prises en charge par la classe qui implémente INCManager. Consultez la section relative à la classe à mettre en œuvre pour obtenir la liste des propriétés prises en charge. Tout appel de cette méthode sur une propriété non prise en charge renvoie un objet VideoError avec le code <codeph>VideoError.UNSUPPORTED_PROPERTY=1011</codeph>.
         
         </apiDesc></apiOperationDetail></apiOperation><apiValue id="fl.video:INCManager:fl.video:INCManager:bitrate:get"><apiName>bitrate</apiName><shortdesc>
         La bande passante à utiliser pour basculer d'un flux à l'autre, en bits par seconde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
         La bande passante à utiliser pour basculer d'un flux à l'autre, en bits par seconde.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:isDynamicStream:get"><apiName>isDynamicStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:isRTMP:get"><apiName>isRTMP</apiName><shortdesc>
         </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          <codeph/> Si le flux correspond à un téléchargement progressif de type HTTP, local ou autre, défini sur <codeph>false</codeph>.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:netConnection:get"><apiName>netConnection</apiName><shortdesc>
         Référence à l'objet NetConnection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.net:NetConnection"/></apiValueDef><apiDesc>
         Référence à l'objet NetConnection.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamHeight:get"><apiName>streamHeight</apiName><shortdesc>
         Hauteur du flux, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
         Hauteur du flux, en pixels. Lorsque la méthode <codeph>VideoPlayer.ncConnected()</codeph> est appelée et si la propriété <codeph>streamHeight</codeph> est inférieure à 0, ceci indique à l'objet VideoPlayer qu'il ne dispose d'aucune information sur la hauteur du flux. Si la propriété <codeph>scaleMode</codeph> de l'objet VideoPlayer est définie sur <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> ou <codeph>VideoScaleMode.NO_SCALE</codeph>, cette valeur s'applique et le redimensionnement se produit de façon instantanée, sans avoir à attendre.
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>VideoPlayer.scaleMode</linktext></link></related-links></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamLength:get"><apiName>streamLength</apiName><shortdesc>
         Longueur du flux, en secondes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
         Longueur du flux, en secondes. Lorsque la méthode <codeph>VideoPlayer.ncConnected()</codeph> est appelée et si elle renvoie undefined, <codeph>null</codeph> ou une valeur inférieure à 0, l'objet VideoPlayer ne dispose d'aucune information sur la longueur du flux. Si des informations sur la longueur du flux sont renvoyées, elles remplacent toutes les informations de flux existantes qui sont définies par le paramètre <codeph>totalTime</codeph> de la méthode <codeph>VideoPlayer.play()</codeph>, par la méthode <codeph>VideoPlayer.load()</codeph> ou toute autre information reçue à partir des métadonnées du fichier 
         
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link><link href="fl.video.xml#VideoPlayer/play()"><linktext>VideoPlayer.play()</linktext></link><link href="fl.video.xml#VideoPlayer/load()"><linktext>VideoPlayer.load()</linktext></link></related-links></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamName:get"><apiName>streamName</apiName><shortdesc>
         Le nom de flux transmis par la méthode NetStream.play().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
         Le nom de flux transmis par la méthode <codeph>NetStream.play()</codeph>.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streamWidth:get"><apiName>streamWidth</apiName><shortdesc>
         Largeur du flux, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
         Largeur du flux, en pixels. Lorsque la méthode <codeph>VideoPlayer.ncConnected()</codeph> est appelée et si la propriété <codeph>streamWidth</codeph> est inférieure à 0, ceci indique à l'objet VideoPlayer qu'il ne dispose d'aucune information sur la largeur du flux. Si la propriété <codeph>scaleMode</codeph> de l'objet VideoPlayer est définie sur <codeph>VideoScaleMode.MAINTAIN_ASPECT_RATIO</codeph> ou <codeph>VideoScaleMode.NO_SCALE</codeph>, cette valeur s'applique et le redimensionnement se produit de façon instantanée, sans avoir à attendre.
         </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/ncConnected()"><linktext>VideoPlayer.ncConnected()</linktext></link><link href="fl.video.xml#VideoPlayer/scaleMode"><linktext>VideoPlayer.scaleMode</linktext></link></related-links></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:streams:get"><apiName>streams</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="FLVPlayback" version="2.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:timeout:get"><apiName>timeout</apiName><shortdesc>
         Le nombre de millisecondes devant précéder l'arrêt des tentatives de connexion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
         Le nombre de millisecondes devant précéder l'arrêt des tentatives de connexion.
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:INCManager:fl.video:INCManager:videoPlayer:get"><apiName>videoPlayer</apiName><shortdesc>
         L'objet VideoPlayer qui possède cet objet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>fl.video:VideoPlayer</apiValueClassifier></apiValueDef><apiDesc>
         L'objet VideoPlayer qui possède cet objet.
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="fl.video:VideoState"><apiName>VideoState</apiName><shortdesc>
	 La classe VideoState fournit des valeurs de constante pour les propriétés FLVPlayback.state et VideoPlayer.state en lecture seule.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 La classe VideoState fournit des valeurs de constante pour les propriétés <codeph>FLVPlayback.state</codeph> et <codeph>VideoPlayer.state</codeph> en lecture seule.
	 
     </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="fl.video.xml#VideoPlayer/state"><linktext>VideoPlayer.state</linktext></link></related-links><apiValue id="fl.video:VideoState:BUFFERING"><apiName>BUFFERING</apiName><shortdesc>
		 Le lecteur vidéo est en état de mise en tampon.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buffering</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état de mise en tampon. Il prend cet état immédiatement après un appel à la méthode <codeph>play()</codeph> ou <codeph>load()</codeph>. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s’agit d’un état réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/buffering"><linktext>FLVPlayback.buffering</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:CONNECTION_ERROR"><apiName>CONNECTION_ERROR</apiName><shortdesc>
		 Le lecteur vidéo est en état d'erreur de connexion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>connectionError</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état d'erreur de connexion. Il prend cet état lorsqu'un flux vidéo tente de se charger sans succès. Cette erreur a deux causes possibles : pas de connexion au serveur ou le flux est introuvable. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s'agit d'un état non réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:DISCONNECTED"><apiName>DISCONNECTED</apiName><shortdesc>
		 Le lecteur vidéo est en état déconnecté.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>disconnected</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état déconnecté. Prend cet état lorsque le flux est interrompu par un appel à la méthode <codeph>closeVideoPlayer()</codeph> ou fait l'objet d'un dépassement de délai en cas d'inactivité. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>L'occurrence de FLVPlayback est en état déconnecté jusqu'à ce que vous définissiez la propriété <codeph>FLVPlayback.source</codeph>.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/closeVideoPlayer()"><linktext>FLVPlayback.closeVideoPlayer()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/idleTimeout"><linktext>FLVPlayback.idleTimeout</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/source"><linktext>FLVPlayback.source</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:LOADING"><apiName>LOADING</apiName><shortdesc>
		 Le lecteur vidéo est en état de chargement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état de chargement. Il prend cet état immédiatement après l'appel à la méthode <codeph>play()</codeph> ou <codeph>load()</codeph>, ou lorsque la propriété <codeph>FLVPlayback.source</codeph> est définie. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s'agit d'un état non réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/load()"><linktext>FLVPlayback.load()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/play()"><linktext>FLVPlayback.play()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/source"><linktext>FLVPlayback.source</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:PAUSED"><apiName>PAUSED</apiName><shortdesc>
		 Le lecteur vidéo est en état de lecture interrompue.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>paused</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état de lecture interrompue. Il prend cet état lorsque le fichier FLV est chargé, mais que la lecture est interrompue par un appel à la méthode <codeph>pause()</codeph> ou <codeph>load()</codeph>. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s’agit d’un état réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/load()"><linktext>FLVPlayback.load()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/pause()"><linktext>FLVPlayback.pause()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/paused"><linktext>FLVPlayback.paused</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:PLAYING"><apiName>PLAYING</apiName><shortdesc>
		 Le lecteur vidéo est en état de lecture en cours.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playing</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état de lecture en cours. Il prend cet état lorsque le fichier FLV est chargé et en cours de lecture. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s’agit d’un état réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/playing"><linktext>FLVPlayback.playing</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/play()"><linktext>FLVPlayback.play()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:RESIZING"><apiName>RESIZING</apiName><shortdesc>
		 Le lecteur vidéo est en état de redimensionnement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resizing</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état de redimensionnement. Il prend cet état pendant la mise en forme automatique. L'occurrence de <codeph>FLVPlayback</codeph> n'obtient jamais cette valeur d'état, seule l'occurrence de <codeph>VideoPlayer</codeph> en dispose. Utilisez la propriété <codeph>VideoPlayer.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s’agit d’un état non réactif.</p>
		 
                 </apiDesc></apiValueDetail><related-links><link href="fl.video.xml#VideoPlayer/state"><linktext>VideoPlayer.state</linktext></link><link href="fl.video.xml#VideoPlayer/stateResponsive"><linktext>VideoPlayer.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:REWINDING"><apiName>REWINDING</apiName><shortdesc>
		 Le lecteur vidéo est en état de rembobinage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewinding</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état de rembobinage. Il prend cet état lorsque la vidéo se rembobine automatiquement. La vidéo est rembobinée automatiquement après avoir été interrompue, par un clic sur le bouton stop ou parce que la lecture est terminée. A l'issue de l'opération de retour au début de la vidéo, l'état devient stopped. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s'agit d'un état non réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/autoRewind"><linktext>FLVPlayback.autoRewind</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:SEEKING"><apiName>SEEKING</apiName><shortdesc>
		 Le lecteur vidéo est en état de recherche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>seeking</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état de recherche. Il prend cet état après l'appel de la méthode <codeph>seek()</codeph> et également lorsque l'utilisateur fait défiler le contenu à l'aide de la barre de recherche. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s'agit d'un état non réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/seek()"><linktext>FLVPlayback.seek()</linktext></link></related-links></apiValue><apiValue id="fl.video:VideoState:STOPPED"><apiName>STOPPED</apiName><shortdesc>
		 Le lecteur vidéo est en état arrêté.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stopped</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Le lecteur vidéo est en état arrêté. Il prend cet état lorsque le fichier FLV est chargé et que la lecture est interrompue par un appel à la méthode <codeph>stop()</codeph> ou lorsque la tête de lecture atteint la fin du flux. Utilisez la propriété <codeph>FLVPlayback.state</codeph> pour obtenir l'état actuel du lecteur vidéo.
		 
		 <p>Il s’agit d’un état réactif.</p>
		 
         </apiDesc></apiValueDetail><related-links><link href="" invalidHref="fl.video.xml#FLVPlayback/state"><linktext>FLVPlayback.state</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stateResponsive"><linktext>FLVPlayback.stateResponsive</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stop()"><linktext>FLVPlayback.stop()</linktext></link><link href="" invalidHref="fl.video.xml#FLVPlayback/stopped"><linktext>FLVPlayback.stopped</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="fl.video:FPMediaCapabilities"><apiName>FPMediaCapabilities</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="fl.video:FPMediaCapabilities:FPMediaCapabilities"><apiName>FPMediaCapabilities</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9.0.28.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 <codeph/>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="fl.video:FPMediaCapabilities:codecs:get"><apiName>codecs</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:dataStreamAccess:get"><apiName>dataStreamAccess</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:dynamicStreaming:get"><apiName>dynamicStreaming</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:qosSupport:get"><apiName>qosSupport</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:rtmfp:get"><apiName>rtmfp</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:rtmpe:get"><apiName>rtmpe</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:swfVerification:get"><apiName>swfVerification</apiName><shortdesc>
		  
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue><apiValue id="fl.video:FPMediaCapabilities:version:get"><apiName>version</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>